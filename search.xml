<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[长短经——序]]></title>
    <url>%2F2018%2F07%2F14%2Flong-short-article-preface%2F</url>
    <content type="text"><![CDATA[匠，成舆者忧人不贵，作箭者恐人不伤。伎业驱之然耳。 驰骛之曹，书读纵横，则思诸侯之变；艺长奇正，则念风尘之会。 人的追求会因为自己所学、所处变化。 作法于理，其弊必乱。以御世理人，罕闻沿袭。三代不同礼，五霸不同法。非其相反，盖以救弊也。 国荣一致，而忠文之道必殊；圣哲同风，而帝王之名或异。 法和理一旦形成，随着时间的推移，弊端会逐渐凸显，人们会不断更新法理。在不同的时间、不同的空间，法理一定会不完全一样。 古之理者，其政有三：王者之政化之，霸者之政威之，强者之政胁之。各有所施，不可异也。 王道、霸道、强道分别是什么 管子曰：圣人能辅时，不能违时。智者善谋，不如当时。 邹子曰：政教文治，所以匡救也。当时则用之，过则舍之。 要因时而动，顺应潮流。 待越客以拯溺，白大人以救火。 如果不能因时而动，则会非常荒谬 霸者，驳道也。盖黑白杂合，不纯用德焉。期于有成，不问所以；论于大体，不守小节。虽称仁引义，不及三王；而扶颠定倾，其归一揆。 作者担心当时及后世的儒家学派不清楚霸道的含义，因此写了本文阐述霸道。]]></content>
      <categories>
        <category>长短经</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Django的ListView添加login_required修饰符]]></title>
    <url>%2F2018%2F07%2F12%2Fdjango-list-view-login-required%2F</url>
    <content type="text"><![CDATA[在Django里，提供了ListView、DetailView内置类方便的编写视图函数，在我的项目中，有一个展示列表的函数，必须要登录后才能操作，即要添加login_required。 原始代码123456from django.contrib.auth.decorators import login_required@login_required def management(request): """Privilege management url""" return render(request, 'management.html') 采用login_required修饰过页面，必须要登录后才可访问。 由于该页面展示的是某个model的list，所以采用DetailView才是更专业的做法。但是login_required明显不能对类进行修饰。 对类进行修饰使用from django.utils.decorators import method_decorator可对类进行修饰。 有两种修饰方法： 其一：对类中的方法进行修饰：12345678910from django.contrib.auth.decorators import login_requiredfrom django.utils.decorators import method_decoratorfrom django.views.generic import TemplateViewclass ProtectedView(TemplateView): template_name = &apos;secret.html&apos; @method_decorator(login_required) def dispatch(self, *args, **kwargs): return super().dispatch(*args, **kwargs) 其二：对整个类进行修饰：123@method_decorator(login_required, name='dispatch')class ProtectedView(TemplateView): template_name = 'secret.html' 修改后的代码如下123456789from django.contrib.auth.decorators import login_requiredfrom django.utils.decorators import method_decoratorfrom django.views import generic@method_decorator(login_required, name='dispatch')class ProtectedView(generic.ListView) def dispatch(self, request, *args, **kwargs): return super(PrivilegeManagement, self).dispatch(request, *args, **kwargs) 参考资料 Django Generic Views using decorator login_required Decorating class-based views]]></content>
      <tags>
        <tag>django</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux开机启动shadowsocks]]></title>
    <url>%2F2018%2F07%2F12%2Fshadow-socks-as-startups%2F</url>
    <content type="text"><![CDATA[shadowsocks已经成为我上Google查阅资料不可或缺的一个东西了。它在Windows上比较好搞，勾选开启启动，以后就不用操心了。 但是在Linux下，我以前没有找到很好的办法。用的是shadowsocks-qt——一个图形化的shadowsocks工具。缺点是不能设置开机自启动。 因此，花了点时间研究了下如何设置Linux开机启动shadowsocks 目录 安装shadowsocks 配置shadowsocks 设置开机启动 为软件设置代理 安装shadowsocks直接用pip可以安装shadowsocks： pip install shadowsocks 在某些Linux里也可以这么安装： sudo apt-get install shadowsocks 安装完成后可以测试安装是否成功： sslocal --help 配置shadowsocks通过如下命令可以启动shadowsocks： sslocal -s &lt;server&gt; -p &lt;server-port&gt; -k &lt;password&gt; -l &lt;local-port&gt; -t &lt;time-out&gt; -m &lt;encryption-method 启动了之后可以打开浏览器，看是否可以正常访问Google或YouTube，测试连接是否正常。 为了方便，可以将配置放在一个配置文件（json）中。内容如下： 12345678&#123; "server":"8.8.8.8", "server_port":9000, "local_port":1080, "password":"123456", "timeout":600, "method":"rc4-md5"&#125; 通过配置文件连接： sslocal -c /home/yarving/.shadowsocks/shadowsocks.json 设置开机启动采用supuervisor管理开启启动软件的方式。 首先，安装supervisor： sudo apt-get install supervisor 然后编辑 /etc/supervisor/supervisor.conf 文件，在文件最后添加如下内容 1234567[program:shadowsocks]command=/usr/local/bin/sslocal -c /home/yarving/.shadowsocks/shadowsocks.jsonautostart=trueautorestart=trueuser=rootlog_stderr=truelogfile=/home/yarving/.shadowsocks/shadowsocks.log 可以通过重启再打开浏览器的方式确认连接是否正常。 为软件设置代理在shadowsocks连接正常后，可能有很多软件需要设置代理。我发现在使用git pull的时候就有这个问题。 需要为Git设置proxy代理，编辑 vim ~/.gitconfig，添加如下几行内容： 1234[http] proxy=socks5://127.0.0.1:1080[https] proxy=socks5://127.0.0.1:1080 Git即可正常使用。 参考资料 linux-ubuntu使用shadowsocks客户端配置 Git config proxy 设置]]></content>
      <tags>
        <tag>Trics</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Django 自定义管理后台界面]]></title>
    <url>%2F2018%2F07%2F11%2Fdjango-custome-administration%2F</url>
    <content type="text"><![CDATA[今天尝试了下对Django默认的管理后台进行修改，是个新挑战。 学习到的新知识点 配置 django suit 模拟 django suit 的页面 login_required 修饰符的用法 配置 django suitdjango后台的主题为suit，需要在左侧sidebar里添加一个链接，由于django后台满足不了一些特殊需求，需要设计一个页面实现对模型的个性化管理。 第一个就是django项目名字的更改，是在settings.py 中添加如下代码：12345678910111213141516171819202122232425262728SUIT_CONFIG = &#123; # header # 'ADMIN_NAME': 'Django Suit', # 此处定义django管理后台显示的名字 # 'HEADER_DATE_FORMAT': 'l, j. F Y', # 'HEADER_TIME_FORMAT': 'H:i', # forms # 'SHOW_REQUIRED_ASTERISK': True, # Default True # 'CONFIRM_UNSAVED_CHANGES': True, # Default True # menu # 'SEARCH_URL': '/admin/auth/user/', # 'MENU_ICONS': &#123; # 'sites': 'icon-leaf', # 'auth': 'icon-lock', # &#125;, # 'MENU_OPEN_FIRST_CHILD': True, # Default True # 'MENU_EXCLUDE': ('auth.group',), # 'MENU': ( # menu定义了左侧siderbar的项目 # 'sites', # &#123;'app': 'auth', 'icon':'icon-lock', 'models': ('user', 'group')&#125;, # &#123;'label': 'Settings', 'icon':'icon-cog', 'models': ('auth.user', 'auth.group')&#125;, # &#123;'label': 'Support', 'icon':'icon-question-sign', 'url': '/support/'&#125;, # ), # misc # 'LIST_PER_PAGE': 15&#125; 修改 SUIT_CONFIG[&#39;ADMIN_NAME&#39;] 可以修改django后台登录时显示的名字 修改 SUIT_CONFIG[&#39;MENU&#39;] 可以修改左侧sidebar的内容 模拟 django suit 的页面在昨天的文章 Django 命名Admin界面logo字段 中提到了，如何将django默认的模板文件复制到项目下，以成为项目模板文件，并进行修改。即将模板文件放置于templates/admin目录下。 通过同样的方法，找到了suit的模板文件是位于 pythonx.x/site-packages/suit/templates/admin文件夹下，复制相应的文件到templates/admin文件夹下即可。 为了风格相同的界面，我复制了pythonx.x/site-packages/suit/templates/admin/index.html文件，并进行了相应的修改，该页面和django的suit主题后台管理界面一样。 login_required修饰符的用法在为上一步准备好views、url之后，由于我要实现的页面必须要登录后才能查看，因此很理所当然的，使用了django提供的login_required修饰符。如下为其用法 123456from django.contrib.auth.decorators import login_required@login_requireddef the_view_function(request): """This is yourself-defined view funciton.""" pass 看似已经完成，但是还是要修改一处。官方文档中提到： If the user isn’t logged in, redirect to settings.LOGIN_URL, passing the current absolute path in the query string. Example: /accounts/login/?next=/polls/3/. 也就是说，要在settings.py中定义LOGIN_URL，否则默认跳转登录的url为/accounts/login，这里我们需要在settings.py中添加如下一行代码： 1LOGIN_URL = '/admin/login/' 这样就能使用django默认的登录路由了。 参考信息 django suit configuration Using the Django authentication system]]></content>
      <tags>
        <tag>django</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Django 命名Admin界面logo字段]]></title>
    <url>%2F2018%2F07%2F10%2Fdjango-rename-admin-logo%2F</url>
    <content type="text"><![CDATA[Django后台的默认界面中显示的LOGO为Django Administration 如何修改这个文字呢？ 流程 Django的后台页面使用的是默认的页面布局，放置在Django的安装目录下； 因此需要从Django的安装目录下将默认布局页面找到，复制到项目目录下； 再修改项目目录下的默认页面 查找django文件目录通过如下命令可以找到django的安装目录：1python -c "import django; print(django.__path__)" 该目录即为django的安装目录 复制文件在项目目录下（和manage.py同层目录）下创建templates/admin这两层文件夹； 从上一步找到的django安装目录复制文件，即将&lt;django-path&gt;/contrib/admin/templates/admin/base_site.html复制到templates/admin目录下 修改settings.py文件修改settings.py文件中的TEMPLATES的值如下：123456789101112131415TEMPLATES = [ &#123; 'BACKEND': 'django.template.backends.django.DjangoTemplates', 'DIRS': [os.path.join(BASE_DIR, 'templates')], # Modify this line 'APP_DIRS': True, 'OPTIONS': &#123; 'context_processors': [ 'django.template.context_processors.debug', 'django.template.context_processors.request', 'django.contrib.auth.context_processors.auth', 'django.contrib.messages.context_processors.messages', ], &#125;, &#125;,] 修改base_site.html将文件内容修改如下：123456789&#123;% extends "admin/base.html" %&#125;&#123;% block title %&#125;&#123;&#123; title &#125;&#125; | &#123;&#123; site_title|default:_('Django site admin') &#125;&#125;&#123;% endblock %&#125;&#123;% block branding %&#125;&lt;h1 id="site-name"&gt;&lt;a href="&#123;% url 'admin:index' %&#125;"&gt;Yarving's admin site&lt;/a&gt;&lt;/h1&gt;&#123;% endblock %&#125;&#123;% block nav-global %&#125;&#123;% endblock %&#125; 最终结果重新登录后台就可以看到已经修改了。Django administration已经修改为Yarving’s admin site]]></content>
      <tags>
        <tag>django</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Namedtuple 介绍]]></title>
    <url>%2F2018%2F07%2F08%2Fpython-namedtuple%2F</url>
    <content type="text"><![CDATA[本文介绍了python的namedtuple数据类型。 tuple的不足Python的tuple类型可通过下标访问，但存在两个不足： 可通过下标访问，但是不能通过有意义的名字访问 tuple为特设（ad-hoc）类型，没有约束条件，特别是在对tuple做比较操作时，没有关于长度、每个值在哪个位置约束 namedtuple的特点namedtuple在保留tuple特性的同时，可弥补以上两个不足。 namedtuple的特点： 不可修改：和tuple一样，值一旦写入就不可修改 每个值都可以通过可读性好的标识符（需要自己定义）去访问，可以不用记忆每个下标是干嘛的，增强代码的可读性。 namedtuple示例这个例子展示了如何定义namedtuple，以及如何访问namedtuple里的元素 123456789from collections import namedtupleCar = namedtuple('Car', 'color, miles')car1 = Car('red', 34)car2 = Car('yellow', 27)print(car1.color, car1.miles) # ('red', 34)print(car2.color, car2.miles) # ('yellow', 27) 下面这个例子展示了namedtuple和tuple的相似性123456789101112131415from collections import namedtupleCar = namedtuple('Car', 'color, miles')car = Car('red', 34)# 赋值color, miles = carprint(color, miles) # ('red', 34)# 通过下标访问print(car[0], car[1]) # ('red', 34)# 转化为tupleprint(tuple(car)) # ('red', 34) 从如上例子可以看出，namedtuple在日常使用中，和tuple最大的变化就是可以如何dict一样，通过有意义的标识符进行访问，其他的操作仍然和tuple保持一致。 namedtuple的妙用namedtuple利用_make方法，在从文件中读取内容，和从数据库中读取内容时，可以巧妙的和列名结合起来。 123456789101112mployeeRecord = namedtuple('EmployeeRecord', 'name, age, title, department, paygrade')import csvfor emp in map(EmployeeRecord._make, csv.reader(open("employees.csv", "rb"))): print emp.name, emp.titleimport sqlite3conn = sqlite3.connect('/companydata')cursor = conn.cursor()cursor.execute('SELECT name, age, title, department, paygrade FROM employees')for emp in map(EmployeeRecord._make, cursor.fetchall()): print emp.name, emp.title 参考资料 python collections 官方文档 Writing Clean Python With Namedtuples]]></content>
      <categories>
        <category>python</category>
        <category>namedtuple</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[A Complete Beginner's Guide to Django - Getting Started（二）]]></title>
    <url>%2F2018%2F07%2F01%2FA-Complete-Beginner-s-Guide-to-Django-Getting-Started-2%2F</url>
    <content type="text"><![CDATA[《A Complete Beginner’s Guide to Django》 是由 Vitor Freitas 写作的 Django 入门教程。 本文是根据第二章 Part 2 - Fundamentals 精简而来。 本章介绍了model、view、url、amdin、后台管理界面、static、template方面的内容。 最终效果 定义model编辑boards/views.py，内容如下：123456789101112131415161718192021222324252627# -*- coding: utf-8 -*-from __future__ import unicode_literalsfrom django.db import modelsfrom django.contrib.auth.models import User# Create your models here.class Board(models.Model): name = models.CharField(max_length=30, unique=True) description = models.CharField(max_length=100)class Topic(models.Model): subject = models.CharField(max_length=255) last_updated = models.DateTimeField(auto_now_add=True) board = models.ForeignKey(Board, related_name='topics', on_delete=models.CASCADE) starter = models.ForeignKey(User, related_name='topics', on_delete=models.CASCADE)class Post(models.Model): message = models.TextField(max_length=4000) topic = models.ForeignKey(Topic, related_name='posts', on_delete=models.CASCADE) created_at = models.DateTimeField(auto_now_add=True) updated_at = models.DateTimeField(null=True) created_by = models.ForeignKey(User, related_name='posts', on_delete=models.CASCADE) updated_by = models.ForeignKey(User, null=True, related_name='+', on_delete=models.CASCADE) 定义了Board，Topic，Post三个类。 使用了内置的User类 CharField里用了max_length, unique两个属性 DateTimeField使用了auto_now_add ForeignKey有related_name, on_delete 模型定义好了后，通过python manage.py makemigrations和python manage.py migrate可将变更在数据库中生效。 视图方面的更改相对于Chapter 1， 将home函数修改如下： 12345678from boards.models import Boarddef home(request): """Home page""" boards = Board.objects.all() return render(request, 'home.html', &#123;'boards': boards&#125;) 将HttpResponse修改为显示Board里的真实数值 定义了templates，static和css文件夹，不过他这里的方法为直接修改settings.py的设置，不利于不同app之间的文件隔离，所以我自己觉得是不妥的。 介绍了如何将bootstrap的css文件加入到html代码中。 后台在boards/admin.py中添加如下代码：123from boards.models import Boardadmin.site.register(Board) 通过python manage.py createsuperuser可以创建管理员账号 通过访问http://127.0.0.1:8000/admin/可登录后台 测试这是我最感兴趣的内容了，文章提供了两个单元测试用例：123456789101112131415161718# -*- coding: utf-8 -*-from __future__ import unicode_literalsfrom django.urls import reverse, resolvefrom django.test import TestCasefrom .views import home# Create your tests here.class HomeTests(TestCase): def test_home_view_status_code(self): url = reverse('home') response = self.client.get(url) self.assertEqual(response.status_code, 200) def test_home_url_resolves_home_view(self): view = resolve('/') self.assertEqual(view.func, home) 我的收获有： self.client.get(url)可以模拟get操作，我以前都是form django.test import Client response.status_code可以获取http状态码 view.func可以和视图函数做对比 reverse：根据url定义中的name找到url resolve：根据url找到定义的视图函数 python manage.py test --verbosity=2可以查看更详细的测试报告 通过shell获取settings配置信息通过python manage.py shell打开shell，输入如下命令可以查看settings的配置123456789from django.conf import settingssettings.BASE_DIR'/Users/vitorfs/Development/myproject'import osos.path.join(settings.BASE_DIR, 'templates')'/Users/vitorfs/Development/myproject/templates']]></content>
      <categories>
        <category>A Complete Beginner&#39;s Guide to Django</category>
      </categories>
      <tags>
        <tag>django</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[A Complete Beginner's Guide to Django - Getting Started（一）]]></title>
    <url>%2F2018%2F07%2F01%2FA-Complete-Beginner-s-Guide-to-Django-Getting-Started-1%2F</url>
    <content type="text"><![CDATA[《A Complete Beginner’s Guide to Django》 是由 Vitor Freitas 写作的 Django 入门教程。 本文是根据第一章 Part 1 - Getting Started 精简而来。 Installationinstall python3.6 其实用哪个版本的python不要紧，但是推荐python3，文章推荐的是python3.6.2 首先，查看系统的python版本（Linux和Mac下）1234$ python --versionPython 2.7.13+$ python3 --versionPython 3.5.4rc1 升级3.6.2的方式为： sudo apt-get install python3.6 如果不能启动，那么可以这样：123sudo add-apt-repository ppa:deadsnakes/ppa # need to press Enter to add repositorysudo apt-get updatesudo apt-get install python3.6 升级完了后，可以看到python 3.6.2 已经可以使用了。1234$ python3 --versionPython 3.5.4rc1$ python3.6 --versionPython 3.6.2 install virtualenvvirtualenv是可选的，但是强烈推荐安装，可以隔离不同项目的开发环境。 安装：sudo pip3.6 install virtualenv 创建目录： virtualenv venv -p python3.6 激活环境： source venv/bin/activate 退出环境： deactive install Django激活virtualenv后（上一个步骤的第三部），输入pip install django即可。 创建Django项目 创建Django项目： django-admin startproject myproject 运行Django： python manage.py runserver 打开浏览器，访问 http://127.0.0.1:8000 可以看到下图 创建Django App通过命令创建boards应用： django-admin startapp boards 打开myproject/settings.py，添加一行12345678910INSTALLED_APPS = [ 'django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles', 'boards', # This line is new added] 创建Hello World页面打开boards/views.py，编辑内容如下：1234from django.http import HttpResponsedef home(request): return HttpResponse('Hello, World!') 打开myproject/urls.py，编辑内容如下123456789from django.conf.urls import urlfrom django.contrib import adminfrom boards import viewsurlpatterns = [ url(r'^$', views.home, name='home'), url(r'^admin/', admin.site.urls),] 在通过python manage.py runserver运行项目，打开http://127.0.0.1:8000即可看到如下图所示效果： 更多内容可点击 Part 1 - Getting Started]]></content>
      <categories>
        <category>A Complete Beginner&#39;s Guide to Django</category>
      </categories>
      <tags>
        <tag>django</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[World Cup Sms Robot]]></title>
    <url>%2F2018%2F06%2F30%2Fworld-cup-sms-robot%2F</url>
    <content type="text"><![CDATA[看到一篇教程是关于发送短信获取世界杯战况：A FIFA 2018 World Cup SMS bot using Twilio, Heroku and Flask。 这个项目很简单，可以跟着练习一遍。 使用的技术栈及Python包主要为： Flask Twilio Heroku 我照着实现了一遍，实现的时候发现他的代码有部分需要变动的地方，我的代码存放地： Github 具体的做法可以跟着 A FIFA 2018 World Cup SMS bot using Twilio, Heroku and Flask 做一遍。我想说下我做的时候的感悟。 Heroku CLI 的问题Heroku需要翻墙登录，我在Linux下有Shadow socks，所以在命令行输入heroku login和heroku create的时候报错： 12Error: tunneling socket could not be established, cause=Parse Error at ClientRequest.onError (/usr/local/lib/heroku/node_modules/tunnel-agent/index.js:177:17) 由于不熟悉Heroku，所以我就换Mac了。在这上面花费了差不多一个小时，后来找到一个workaround。 那就在Heroku上deploy的时候关联Github，而不使用默认的CLI就行了。如下图： 不要勾选 Wait for CI to pass before deploy Debug的问题前面提到原作者的代码有需要改动的部分地方，是由于通过第三方网站获取FIFA各个小组赛时，其返回的JSON数据结构发生了变化。 在debug这个的过程中，由于我没有本地运行环境，每修复一个bug，我就提交了许多个commit，而每个commit都非常小，按照标准提交来说，这些commit都是可以压缩成一个的。 出现这个情况还是因为我对Heroku不熟悉，印象中Heroku是提供本地运行环境的。我应该在本地运行起来，理论上Github上的应该是生产端。 其他收获的知识点 Twilio 可以提供短信、语音等处理功能，可免费试用。 Python Tips 介绍了一些小Tip，可以一看。]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>sms</tag>
        <tag>robot</tag>
        <tag>world cup</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python Decouple]]></title>
    <url>%2F2018%2F06%2F29%2Fpython-decouple%2F</url>
    <content type="text"><![CDATA[在python项目中，有很多配置型的东西，不应该放到python源代码中。 比如配置数据库的URL、邮件服务器地址和端口等。 同样的项目，运行在不同环境配置环境不应相同。如测试环境下应该是一套配置、生产环境是另一套配置。 Decouple可将配置从代码中分离。 参考资料 官方网站 SimpleIsBetterThanComplex]]></content>
      <categories>
        <category>python</category>
        <category>package</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>decouple</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[阮一峰 《未来世界的幸存者》]]></title>
    <url>%2F2018%2F06%2F29%2Fsurvivor%2F</url>
    <content type="text"><![CDATA[阅读地址 Google的AlphaGo先后击败围棋九段李世石和柯洁，标志着人类在思维领域已经无法击败计算机。我觉得在一定程度上也代表技术资本的崛起。 以前，体力劳动岗位被机器取代；现在，一部分脑力劳动岗位也在被机器取代。 两种贫穷：累积不了财富；穷忙——没有时间去思考未来、迎接未来。 四年的时间可以让一个人在任何领域成为一个资深者。 雇佣制度的缺点：利益分配、决策权在资方；流水线式工作方式对人身心的影响。 骡子并不知道，为何要把如此重的铁管背到山顶，就是因为主人要求它这么做，就任劳任怨地干了。哪怕有那么一瞬间，它的内心有过一丝抗拒或疑问，主人一施压，它就不再追问了，回到正常的状态，默默地听任摆布。 “百分之四”规则（Four Percent Rule）：如果一年的支出小于投资组合的4%，那么你就可以退休了。 真正的B计划是用来救命的，是一旦现在的生活崩溃，你用来逃生的计划。B计划有点像酒店的消防通道。 旧事物衰败的时候，就是新事物崛起的良机。对于那些注定要发生的变革，宏观经济不景气正是最好的机会。 遭受挫折，并不是坏事。因为，人生的最终结果是一个极大值函数（由所有尝试中最成功的一次决定），而不是一个平均值函数。 创造一个有竞争力的新产品，不要着眼于它的功能比别人多，而要着眼于它有一个截然不同的市场定位。 一万小时计划——Dan学习打高尔夫，每小时都做好记录]]></content>
      <tags>
        <tag>读书笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[阮一峰《前方的路》]]></title>
    <url>%2F2018%2F06%2F29%2Fryfqfdl%2F</url>
    <content type="text"><![CDATA[简介《前方的路》是著名博主阮一峰多年来博客写作的整理合辑，挑选了从2004年到2014年这段时间的文章。 他这本书已经交出版社出版了，但同时也在自己的个人网站上发布了所有的文章内容。 也就是，可以买书，也可以通过非盗版的形式阅读。 在线阅读地址《前方的路》在线京东购买链接 我的感触阅读他的文章，由于不是成体系的知识，而且是三个星期前看完的了，现在回想起来，细节的内容记不起来了。 不过，整体而言，我对他坚持写作还是非常佩服的。 十年，04年我刚读高中，06年接触并开通网易博客，11年大学毕业，14年正在研究生阶段。 这个过程中，我读过的书不可谓不多，但是这么多年来，一直没有坚持下来。]]></content>
      <tags>
        <tag>读书笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python的and和or的返回值]]></title>
    <url>%2F2018%2F06%2F27%2Fpython-and-or%2F</url>
    <content type="text"><![CDATA[一直以来，我以为python中and和or的返回值是True或False。 看 《Dive into Python》这本书时，发现他们并不返回布尔值，而是返回他们实际进行比较的值之一。 and根据自己已经掌握的知识，设想下如下代码的运算结果： 123'a' and 'b''' and 'b''a' and 'b' and 'c' 根据python的定义，在没有看这部分内容之前，我认为答案分别为True，False，True。其实运行之后才发现应该是这样的： 12345678910Python 2.7.13+ (default, Jul 19 2017, 18:15:03)[GCC 6.4.0 20170704] on linux2Type "help", "copyright", "credits" or "license" for more information.&gt;&gt;&gt; 'a' and 'b''b'&gt;&gt;&gt; '' and 'b'''&gt;&gt;&gt; 'a' and 'b' and 'c''c'&gt;&gt;&gt; 原因如下： and运算时，从左到右演算表达式的值。0, &#39;&#39;, [], {}, None在布尔表达式环境下为假，其他任何东西都为真 如果and运算中，所有的值都为真，那么and返回最后一个值。如：&#39;a&#39; and &#39;b&#39; 如果某个值为假，那么and立即返回该假值（短路运算），如：&#39;&#39; and &#39;b&#39; or类似的。or的规则如下： 从左到右演算 如果有一个值为真，立即返回该值 所有所有的值都为假，返回最后一个假值 Python 官方文档的表述在Python官方文档中 boolean-operations-and-or-not 中，由如下表述： 这里也充分说明了，and 和 or 以及 not 等三个运算符操作的结果。]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MeisterTask介绍]]></title>
    <url>%2F2018%2F06%2F13%2Fmeister-task%2F</url>
    <content type="text"><![CDATA[以前总在 异次元软件世界 里看一些新奇的软件，因此也萌发了将自己平常使用的一些比较高效的工具整理下。工欲善其事必先利其器。 本次就从我几乎每天都在用的项目管理工具——MeisterTask。 为什么要用项目管理工具目的很简单， 提高效率 身边的项目管理： 看板——对敏捷开发最深的影响就是细分任务，然后用便签纸写上，挂墙上去进行推进 挂图作业——把所有的任务列出来，挂在墙上，进行公示和推进 这么做的好处是： 拆分任务、列出任务的过程是对项目完整的梳理，可以从全局层面 对整体进行了解 每个任务都是可以追溯到个人、进展，任务层面 上，每个任务进展全体成员都可查看到，特别是方便管理人员管控奉献、把握进度 使用软件版本的项目管理工具还可以起到交流的功能，将任务相关资料、讨论等聚合到一起 项目管理工具是对待办事项的整理、管理，因此既可用于团队项目管理，也可用于个人日常工作整理 MeisterTaskMT是我最喜欢的，原因无他，就是漂亮，暂无中文版，需要了解简单的英文基础。 整体管理登录后的界面如下： 左侧为项目（Project），右侧为任务等工具性的东西，中间主要为一个大的景观图。 点击左下角(New Project)便可新建项目 项目管理点击项目名即可进入项目管理列表，界面如下： 可以新增许多列，作为不同的需求，一般分待办,进行中，已结束等。所有的任务都一目了然。 在每一列的下方有个+的符号，点击即可新增任务 任务管理点击任务名即可点击任务详情，界面如下： 可以修改说明，添加讨论，指定负责人、指定应完成日期、添加标签等。 还可以增加计时功能，统计日常工作时间（我的图示里没有标注）。 如何注册官网 点击右上角的“Sign Up”即可 使用平台 浏览器（推荐使用Google Chrome）： iPhone可在苹果商城搜索MeisterTask Android版本在国内的应用商店无法下载可用版本（由于过于老旧无法正常使用），如有需要可发送邮件至 yarving@qq.com ，邮件标题注明“MeisterTask”，我会回复apk文件。]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>meistertask</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Django Coding Style]]></title>
    <url>%2F2018%2F06%2F12%2Fdjango-coding-style%2F</url>
    <content type="text"><![CDATA[编写Django中的代码时，请遵循下列编码风格 Python编码风格 请遵循editorconfig文件中制定的缩进样式，建议使用支持 EditConfig 的编辑器，以避免缩进和空格方面的问题。Python源代码文件使用4个空格的缩进，HTML文件用2个空格的缩进。 除非特别声明，请遵循 PEP 8 使用 flake8 自动检查。请注意我们提供的setup.cfg文件中包含了一些不需要检查的文件（如：弃用的文件、可清理文件和第三方提供的django代码），和一些我们不认为是严重违规的错误。应当记住 PEP 8 只是起指导作用，主要是要遵循代码中已形成的编码风格。 一个不需要遵循 PEP 8的例外为行的长度，如果看起来明显很丑或者难以阅读，请不要限定每一行的长度为79，我们允许想Github 代码评审那样，可以最高每行容纳119个字符，再长就需要水平滚动了，这样会使代码review更费劲。运行flake8时应当包含这个。 文档、注释、docstring应当限定为79个字符，虽然 PEP 8的建议为72个。 使用四个空格作为缩进，勿使用tab 使用四个空格缩进，而非垂直对其，如: 建议：1234raise AttributeError( 'Here is a multine error message ' 'shortened for clarity.') 不建议：12raise AttributeError('Here is a multine error message ' 'shortened for clarity.') 这样可以更好的利用空间，还能避免第一行的长度变化时引起的后续行的变动。 字符串使用单引号包裹，如果字符串包含单引号时采用双引号。但是在写代码时，不要去重构不相关处的代码，有点浪费时间。 不要在注释中写”we”。如”We loop over.”应该改成”Loop over.” 变量名、函数名、方法名使用下划线链接单词，不要使用驼峰。如poll.get_unique_voters()，而非poll.getUniqueVoters() 使用InitalCaps方式去命名类名 docstring遵循现有风格，以及 PEP 257 在测试中，使用 assertRaisesMessage()和assertWarnsMessage()，而非assertRaises()和assertWarns()，这样可以检查exception和warning的信息，当且仅当正确表达式匹配时，使用assertRaises()和assertWarns() 在测试用例的docstring中，描述每个测试的期望行为，不要加上“确保……”和“本测试用例是为了测试……”等字眼。 如果在docstring中很难描述某个ticket，把ticket number添加至句末。如12345def test_foo(): """ A test docstring looks like this (#123456). """ ... Imports 使用 isort 自动调整引用顺序。 使用方法12$ pip install isort$ isort -rc . 无须isort自动调整顺序的引用后添加个标记，用法如下：1import module # isort:skip import按如下顺序归组拜访：future，标准库，第三方库，其他Django组件，本地Django组件，try/excepts语句。每一组的import按字母表顺序。将每组的import module语句放在from module import objects之前。其他django模块的引用用绝对路径，本地模块用相对路径引用。 每一行中，小写字母放在大写字母之后。 使用括号和缩进来分割长行，在最后一个import后加一个逗号，右括号也放在这行上。 不同的import分组之间用一个空行，import语句和函数代码之间用两个空行 示例如下（注释仅做说明）12345678910111213141516171819202122232425262728293031# futurefrom __future__ import unicode_literals# standard libraryimport jsonfrom itertools import chain# third-partyimport bcrypt# Djangofrom django.http import Http404from django.http.response import ( Http404, HttpResponse, HttpResponseNotAllowed, StreamingHttpResponse, cookie,)# local Djangofrom .models import LogEntry# try/excepttry: import yamlexcept ImportError: yaml = NoneCONSTANT = 'foo'class Example: # ... 尽可能使用简单的import 模板文件 在django的模板文件中，花括号和tag中放一个空格。 推荐：1&#123;&#123; foo &#125;&#125; 不推荐：1&#123;&#123;foo&#125;&#125; 视图文件视图函数的第一个参数是request，不要简化为req。 推荐：12def my_view(request, foo): # ... 不推荐：12def my_view(req, foo): # ... 模型风格 feild命名时，全用小写字母，用下划线连接，不要使用驼峰命名法。 推荐：123class Person(models.Model): first_name = models.CharField(max_length=20) last_name = models.CharField(max_length=40) 不推荐：123class Person(models.Model): FirstName = models.CharField(max_length=20) Last_Name = models.CharField(max_length=40) class Meta应当在所有的field之后，用一个空行分隔。 推荐：123456class Person(models.Model): first_name = models.CharField(max_length=20) last_name = models.CharField(max_length=40) class Meta: verbose_name_plural = 'people' 不推荐：12345class Person(models.Model): first_name = models.CharField(max_length=20) last_name = models.CharField(max_length=40) class Meta: verbose_name_plural = 'people' 不推荐：123456class Person(models.Model): class Meta: verbose_name_plural = 'people' first_name = models.CharField(max_length=20) last_name = models.CharField(max_length=40) model内置class和标准方法的顺序如下： 所有数据库的fields的定义 Custom manager attributes class Meta def __str__() def save() def get_absolute_url() Any custom methods 要为某个域定义choices，使用tuple和大写字母，如下1234567class MyModel(models.Model): DIRECTION_UP = 'U' DIRECTION_DOWN = 'D' DIRECTION_CHOICES = ( (DIRECTION_UP, 'Up'), (DIRECTION_DOWN, 'Down'), ) django.conf.settings的用法Modules should not in general use settings stored in django.conf.settings at the top level (i.e. evaluated when the module is imported). The explanation for this is as follows: Manual configuration of settings (i.e. not relying on the DJANGO_SETTINGS_MODULE environment variable) is allowed and possible as follows: from django.conf import settings settings.configure({}, SOME_SETTING=’foo’)However, if any setting is accessed before the settings.configure line, this will not work. (Internally, settings is a LazyObject which configures itself automatically when the settings are accessed if it has not already been configured). So, if there is a module containing some code as follows: from django.conf import settingsfrom django.urls import get_callable default_foo_view = get_callable(settings.FOO_VIEW)…then importing this module will cause the settings object to be configured. That means that the ability for third parties to import the module at the top level is incompatible with the ability to configure the settings object manually, or makes it very difficult in some circumstances. Instead of the above code, a level of laziness or indirection must be used, such as django.utils.functional.LazyObject, django.utils.functional.lazy() or lambda. MiscellaneousMark all strings for internationalization; see the i18n documentation for details. Remove import statements that are no longer used when you change code. flake8 will identify these imports for you. If an unused import needs to remain for backwards-compatibility, mark the end of with # NOQA to silence the flake8 warning. Systematically remove all trailing whitespaces from your code as those add unnecessary bytes, add visual clutter to the patches and can also occasionally cause unnecessary merge conflicts. Some IDE’s can be configured to automatically remove them and most VCS tools can be set to highlight them in diff outputs. Please don’t put your name in the code you contribute. Our policy is to keep contributors’ names in the AUTHORS file distributed with Django – not scattered throughout the codebase itself. Feel free to include a change to the AUTHORS file in your patch if you make more than a single trivial change. JavaScript 风格见 这里 original]]></content>
  </entry>
  <entry>
    <title><![CDATA[Django使用bcrypt生成密码]]></title>
    <url>%2F2018%2F06%2F12%2Fdjango-use-bcrypt-to-generate-password%2F</url>
    <content type="text"><![CDATA[需求需要设计一个系统（采用Django），专门管理另一个系统的用户。用户登录在另一个系统中进行，那边的密码采用bcrypt进行校验，所以Django系统中密码保存也要用bcrypt加密保存。 而Django虽然自带的User中提供了Password功能（输入明文、自动生成加密字符串），但是model中却并不提供一个所谓的PasswordField。 因此，需求就是如何在自己实现的注册功能中，将明文密码用bcrypt加密保存 设计以前没有安全方面“专业”知识累积，所以决定自己创建路由、视图、表单等组件，但是在查找资料的过程中发现了许多可用的资料。 但是提前优化是万恶之源，我没有决定中途改换技术方案，而是等待下一版再更改为更专业的方案。 创建路由、视图、表单、模板等过程都比较简单，就不在赘述了，着重讲下如何将明文密码进行加密的过程。 下载bcryptPython 版的 bcrypt 的 网站，安装命令：pip install bcrypt 实现接下来，在form的 clean_password() 函数里，返回加密后的字符串。123456789101112131415161718import bcryptclass SignUpForm(forms.Form): password1 = forms.CharField( required=True, widget=forms.PasswordInput(attrs=&#123;'placeholder': '输入密码', 'class': 'input pass'&#125;) ) password2 = forms.CharField( required=True, widget=forms.PasswordInput(attrs=&#123;'placeholder': '再次输入密码', 'class': 'input pass'&#125;) ) def clean_password2(self): cleaned_data = super(SignUpForm, self).clean() password2 = cleaned_data.get('password2') return bcrypt.hashpw(password2, bcrypt.gensalt()) 在views里取值时用form.cleaned_data[&#39;password2&#39;]即可取到加密后的字符串，验证功能在需求部分已经做过介绍，不需要django这部分负责。 排坑我的django是基于python3的，在python2里测试生成加密字符串的过程没有问题，但是在python3会报如下错误：1Unicode-objects must be encoded before hashing 查找了下原因，是因为python3里，字符串有str和bytes两种形态，所以需要改成1bcrypt.hashpw(password2.encode('utf-8'), bcrypt.gensalt()).decode('utf-8') 另外，bcrypt有多种标准，我们需要的是2a，所以还要改成：1bcrypt.hashpw(password2.encode('utf-8'), bcrypt.gensalt(prefix=b'2a')).decode('utf-8') 这样就得到正确结果了。 结果 可以看到password的值已经是bcrypt加密后的字符串了。 相关资料 2a版本的bcrypt生成和验证 Unicode-objects must be encoded before hashing 排错资料]]></content>
      <categories>
        <category>django</category>
      </categories>
      <tags>
        <tag>django</tag>
        <tag>bcrypt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Learn Python the Hard Way]]></title>
    <url>%2F2018%2F06%2F12%2Flearn-python-the-hard-way%2F</url>
    <content type="text"><![CDATA[第一次看到这本书还是初学python的时候了，那时候看完了几本python的基础知识书，在写python代码的时候虽然能够写出来，但是还是磕磕碰碰的。 这本书当时给我的感觉就是，梳理了一些比较重要的知识点，并且布置一些题目去自己做。在做的过程中确实是可以加深理解。 如今，再次翻看这本书的时候，虽然这些知识点我基本已烂熟于心，不过还是可以推荐大家作为学习python的第二本书。 这本书有一个非常明晰的观点：一定要一道一道题做过去。 LPTHW的 官网 ，作为系列书籍，还有学习ruty，ruby， c， sql， javascript， unix， regex， design的。 福利时间LPTHW中文翻译版 如果想要英文原版，可发送邮件至 yarving@qq.com ，邮件标题注明LPTHW]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[诗词（一）李清照七首]]></title>
    <url>%2F2018%2F06%2F07%2Fpoem20180607%2F</url>
    <content type="text"><![CDATA[声声慢·寻寻觅觅寻寻觅觅，冷冷清清，凄凄惨惨戚戚。乍暖还寒时候，最难将息。三杯两盏淡酒，怎敌他、晚来风急？雁过也，正伤心，却是旧时相识。 满地黄花堆积。憔悴损，如今有谁堪摘？守着窗儿，独自怎生得黑？梧桐更兼细雨，到黄昏、点点滴滴。这次第，怎一个愁字了得！ 如梦令·常记溪亭日暮常记溪亭日暮，沉醉不知归路。兴尽晚回舟，误入藕花深处。争渡，争渡，惊起一滩鸥鹭。 如梦令·昨夜雨疏风骤昨夜雨疏风骤，浓睡不消残酒。试问卷帘人，却道海棠依旧。知否？知否？应是绿肥红瘦。 点绛唇·寂寞深闺寂寞深闺，柔肠一寸愁千缕。惜春春去，几点催花雨。 倚遍栏干，只是无情绪！人何处？连天衰草，望断归来路。 浣溪沙·绣幕芙蓉一笑开绣幕芙蓉一笑开，斜偎宝鸭亲香腮，眼波才动被人猜。 一面风情深有韵，半笺娇恨寄幽怀，月移花影约重来。 诉衷情·夜来沈醉卸妆迟夜来沈醉卸妆迟，梅萼插残枝。酒醒熏破春睡，梦断不成归。 人悄悄，月依依，翠帘垂。更挪残蕊，更拈馀香，更得些时。 一剪梅·红藕香残玉簟秋红藕香残玉簟秋。轻解罗裳，独上兰舟。云中谁寄锦书来？雁字回时，月满西楼。 花自飘零水自流。一种相思，两处闲愁。此情无计可消除，才下眉头，却上心头。]]></content>
      <categories>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>李清照</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Unbroken]]></title>
    <url>%2F2018%2F06%2F07%2Funbroken%2F</url>
    <content type="text"><![CDATA[腾讯视频 You can’t connect the dots looking forward, you can only connect them looking backwards. 你无法把过去的点滴与未来联系，只有透过回顾才能看见。 So you have to trust that the dots will somehow connect in your future. 所以你必须相信过去的点滴能够串联未来。 You have to trust in something: your gut, destiny, life, karma, whatever. 你必须有信念，不管那是你的胆识，命运，人生，还是因果报应。 Because believing that the dots will connect down the road, will give you the confidence to follow your heart, even when it lead you off the well worn path. And that will make all the difference. 因为唯有把过去的点滴串联起来，你才能有信心忠于自我，即使你的选择和常人不同。这会使你与众不同。 Your time is limited, so don’t waste it living someone else’s life. 你的生命有限，所以不要浪费你的时间在别人的生活里。 Don’t be trapped by dogma, which is living with the results of other people’s thinking. 不要被教条束缚，不要活在别人对你的期望之中。 Don’t let the noise of others’ opinions drown out your own inner voice. You’ve got to find what you love. 不要让来自他人的噪音抹去你自己内心的声音，你必须找到你所爱的东西。 And that is as true for your work as it is for your lovers. 包括你热爱的事业和你的伴侣。 Your work is going to fill a large part of your life and the only way to be truly satisfied is to do what you believe is great work. 事业将占据你的大半生，唯有相信你所做的工作是对的，你才能发自内心的得到满足。 And the only way to do great work is to love what you do. 而唯有爱你所做的事，才能成就不凡。 If you haven’t found it yet, keep looking, and don’t settle. 如若你还没有找到，继续寻找，别追去安逸。 Have the courage to follow your heart and intuition, they somehow already know what you truly want to become. 有勇气顺从自己的心和直觉，你的内心早就知道你未来的梦想。 You’re going to have some ups and you’re goning to have some downs. 你的旅途不可能一帆风顺，必然有起有落。 Most people give up on themselves easily. You know the human spirit is powerful?! 大多数人都轻易放弃，但你知道人的意志有多强大吗？ There is nothing as powerful. It’s hard to kill the human spirit! 人的意志是无可比拟的坚韧不屈！ Anybody can feel good when they have their health, their bills are paid, they have happy relationships. 任何人在财务、生活、感情、健康良好的环境下，都能感到幸福。 Anybody can be positive then, anybody can have a larger vision then, anybody can have faith under those kinds of circumstances. 在那样的环境下，任何人都能自得其满，任何人都能有伟大的理想，任何人都能有信念。 The real challenge of growth, mentally, emotionally and spiritually comes when you get knocked down. It takes courage to act. 在你被击倒时，你所面临的真正挑战是你的信念、信仰和意志。起身而行需要勇气。 Part of being hungry when you have been defeated. 被击倒仍能保持谦虚， It takes courage to start over again. 需要勇气去放下并重新开始。 Fear kills dreams. 恐惧扼杀梦想。 Fear kills hope.Fear, put people in the hospital. 恐惧扼杀希望，恐惧使人一蹶不振。 Fear can age you, can hold you back from doing something that you know within yourself that you are capable of doing, but it will paralyze you. 恐惧使你衰老，阻止你去做你能做到的事，但是它也会使你麻木不仁。 At the end of your feelings is nothing, but at the end of every principle is a promise. 你的情绪跌宕起伏，但仍然一事无成，但是在每个原则之后是自我的承诺。 Behind your little feelings, it might not be absolutely nothing at the end of your little feelings. 你的喜怒哀乐，最后可能什么都没有。 But behind every principle is a promise. And some of you in your life, the reason why you not at your goal right now, because you just all about your feelings. 但是每当你下定决心，就是一种承诺。你们有些人，至今碌碌无为，原因只是你们太过于情绪化。 All on your feellings, you don’t feel like waking up, so who does? 你总被情绪所主导，早上不愿起床，谁想呢？ Everyday you say “no” to your dreams, you might be pushing your dreams back a whole six months, a whole year! 每天你不愿去面对自己的梦想，你也许会把目标延后六个月，或是一年！ That one single day, that one day you didn’t get up could have pushed your stuff back, I don’t know how long. 只是那没有起身鞭策自己的一瞬间，你不知后退了多少。 Don’t allow your emotions to control you. 别让你的情感控制你。 We are emotional, but what you want to begin to discipline your emotion. 我们是情感的动物，但是你必须控制你的情感。 If you don’t discipline and contain your emotion, they will use you. 你若无法控制他，你便将被它吞噬。 You want it, and you are going to go all out to have it. 你想要全力以赴，毫无保留。 It’s not going to be easy, when you want to change. It’s not easy. 当你尝试改变的时候，不会很容易。 If it were in fact easy, everybody would do it. 如果很容易，那人人皆可做到。 But if you’re serious, you’ll go all out. 但是你若认真对待，全力以赴。 I’m in control here. 我才是自己的主宰者。 I’m not going to let this get me down, I’m not going to let this destroy me. 我绝不会让外界事物打击我，摧毁我。 I’m coming back! 我将重新站起！ And I’ll be stronger and better because of it! 我将会变得更好，更坚强！ You have got to make a declaration, that this is what you stand for! 你必须要下定决心，这是你的意义! You’re standing up for your dreams, you’re standing up for peace of mind, you’re standing up for health. 如果这是你想要的梦想，那不论是健康或是功成名就。 Take full responsibility for your life! 请对你的人生负完全的责任！ Accept where you are and the responsibility that you’re going to take yourself where you want to go. 接受现在的自己，并把坚信自己能够做得更好当作一种责任。 You can decide that I am going to live each day as if it were my last! 你可以选择把你的每一天当做最后一天来过！ Live your life with passion! With some drive! 活出你的激情！拿出你的魄力！ Decided that you are going to push yourself. 不断鞭策自己做得更好！ The last chapter to your life has not been written yet, and it doen’t matter about what happened yesterday. 人生的最后一章尚未写下，昨天种种的事情并不重要。 It doesn’t matter about what happened to you, what matter is: what are you going to do about it? 你发生了什么也没有关系，重要的是：你接下来打算怎么做？ This year I will make this goal become a reality. 今年我将使梦想成为现实。 I won’t talk about it anymore. I can! I can!! I can!!! 我已不想再谈论什么，我能行！我能行！！我能行！！！ To persevere I think is important for everybody, don’t give up, don’t give in. 我觉得坚持对每个人都很重要，不要放弃，不要妥协。 There’s always an answer to everything. 人生的每件事情总是有解答的。]]></content>
      <tags>
        <tag>vedio</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Django Verify Password]]></title>
    <url>%2F2018%2F06%2F06%2Fdjango-verify-password%2F</url>
    <content type="text"><![CDATA[I’ve make a design about user register, need to verify user’s password and confirm password are equal.When reading this The-Flask-Mega-Tutorial-zh, I found a better way to handle this situation. original solution: ‘’]]></content>
      <categories>
        <category>django</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[要有世界眼光和战略思维]]></title>
    <url>%2F2018%2F06%2F06%2Fzjyl-yysjyghzlsw%2F</url>
    <content type="text"><![CDATA[var ap = new APlayer({ element: document.getElementById("aplayer-fzKIqShU"), narrow: false, autoplay: false, showlrc: false, music: { title: "要有世界眼光和战略思维", author: "之江新语", url: "http://flv1.gmw.cn/gmw/videoroot/2015-07-17/1437103443731.mp3", pic: "", lrc: "" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); “一把手”是 “一把手”是党政领导集体的“班长” 是一个地方和部门贯彻中央大政方针、省委省政府重大决策的第一责任人 “一把手”的根本职责把方向、抓大事、谋全局 各级党政“一把手”要站在战略的高度 善于从政治上认识和判断形势，观察和处理问题 善于透过纷繁复杂的表面现象，把握事物的本质和发展的内在规律 要努力增强总揽全局的能力 放眼全局谋一域，把握形势谋大事 以“登东山而小鲁”、“登泰山而小天下”的气度和胸襟 始终把全局作为观察和处理问题的出发点和落脚点 以全局利益为最高价值追求 以世界眼光去认识政治形势 把握经济走势，了解文化态势 用战略思维去观察当今时代，洞悉当代中国，谋划当前浙江 切实把本地、本部门的工作放到国际国内大背景和全党全国全省的工作大局中去思考、去研究、去把握 不断提高领导工作的原则性、系统性、预见性和创造性。 - 音频来源- 文本来源：《之江新语》]]></content>
      <categories>
        <category>之江新语</category>
      </categories>
      <tags>
        <tag>背诵</tag>
        <tag>之江新语</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[30 Amazing Vue.js Open Source Projects for the Past Year (v.2018)]]></title>
    <url>%2F2018%2F06%2F06%2F30-Amazing-Vue-js-Open-Source-Projects-for-the-Past-Year-v-2018%2F</url>
    <content type="text"><![CDATA[如果想提高Vue开发技术，那么花些时间来玩一下Vue.js开源项目是很值得的。 Element 一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库 source iView 一套高质量的UI组件库 source Best resume ever 用Vue和LESS简单、快速建立许多漂亮的简历，并创建你最好的简历。 source Vue Element Admin 一个神奇的vue后台管理系统 source Vuetify Vue.js 2的Material组件库 source Vue-admin Vue后台面板管理库，基于Vue 2.0和Bulma 0.3 source Vue hackernews 2.0 vue-router＆vuex和服务器端渲染 source Vue devtools 应用程序的Chrome devtools扩展程序 source Vue materialVue.js的Material design source Quasar构建响应式网站，PWA，混合移动应用程序（看起来很原生！）和Electron应用程序，全部同时使用相同的代码库，并基于Vue。 source Electron-vueElectron＆Vue.js快速启动样板，包括vue-cli脚手架，通用Vue插件， electron-packager/electron-builder，单元/e2e测试，vue-devtools和webpack。 source Vue-loaderVue.js组件的Webpack加载程序(loader) source Vuepack一个使用Vue 2，Vuex，Vue-router和Webpack 2（甚至是Electron）的新潮种子项目。 source Buefy基于Bulma的Vue.js的轻量级UI组件 source VantYouZan的Vue.js 2.0移动用户界面 source Codesandbox专为Web应用程序开发而设计的在线代码编辑器 source VuefireFirebase 2＆&gt; = 3的Vue.js 1＆2绑定 source Vue-tetris使用Vue，Vuex，Immutable做俄罗斯方块 source At-ui一款全新的平面UI套件，专门用于桌面应用程序，由Vue.js 2.0制作而成。 source Vue-recycleview使用vue-recyclerview掌握大型列表 source Vuex-persistedstate用本地存储保持Vuex状态 source Vue-test-utils用于测试Vue组件的实用程序 source Vue-meta管理Vue 2.0组件中的页面元信息，支持SSR +流媒体。 source ESLint-plugin-vue官方ESLint的Vue.js插件 source Vue-js-modal易于使用，高度可定制，移动友好的Vue.js 2.0+ modal source Vue-tabls-2Vue.js 2 网格组件 source Vue-baidu-mapVue 2.x的百度地图组件 source Vuex-loadingVue / Vuex应用程序的复杂装载程序管理 source Vue-js-grid一个具有顺畅的排序，拖放和重新排序的Vue.js 2.x响应式网格系统 source Dockeron用于Docker的Electron + Vue.js source ========================= from]]></content>
      <tags>
        <tag>Todo</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python的sum、map、filter和reduce]]></title>
    <url>%2F2018%2F06%2F05%2Fpython-sum-map-filter-reduce%2F</url>
    <content type="text"><![CDATA[最近在看《Think Python》（英文版），看到了讲解map, reduce, filter等函数，觉得讲解的思路特别好。所以，我加上了自己的理解，写了本篇文章。 引子如果要对列表中的数字求和，我们可以这样做：1234567def add_all(t): """t is a list of nums""" total = 0 for x in t: total += x return total 运行结果： 由于python中求和操作太常见了，所以python提供了内置函数sum来进行这项操作 sum将上一版代码修改如下：123if __name__ == '__main__': t = [1, 2, 3, 4] print sum(t) 运行结果： 像这种从一个列表中得出一个结果的操作，也叫reduce，除了求和这一种reduce操作外，python还支持自定义的方式 reduce比如，我不是想对队列求和，而是想得到列表各数字的乘积，可以利用reduce这样实现：123456def multiple_all(x, y): return x * yif __name__ == '__main__': t = [1, 2, 3, 4] print reduce(multiple_all, t) 运行结果： 上面介绍了将一个从一个列表得到一个结果的情形，还有一种情形是：按照某个规律对列表中的元素一一转换，这就要用到map内置函数了 map如果给定一个列表（元素为字符串），要把列表元素首字母大写，可以这样做123if __name__ == '__main__': t = ['hello', 'world', 'yarving'] print map(lambda x: x.capitalize(), t) 运行结果： 还有一种情况，是要将列表里的元素过滤出去，可以用到filter函数 filter给定一个列表（元素为数字），如果要仅保留不大于4的数字，可以这样做：123if __name__ == '__main__': t = [1, 2, 3, 4, 5, 6, 7] print filter(lambda x: x &lt;= 4, t) 运行结果： 获取《Think Python》（英文版）电子书如想要获取《Think Python》（英文书）的PDF版本，可发送邮件到 yarving@qq.com ，并标明主题 “Think Python” 。]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[14 Most Famous Python Libraries and Framework]]></title>
    <url>%2F2018%2F06%2F04%2F14-most-famous-python-libraries-and-framework%2F</url>
    <content type="text"><![CDATA[This article is from Python Tips I added this to my todo list, and will create a tutorial based on these libraries and frameworks later. Libraries requests tqdm pillow scrapy numpy pandas scapy matplotlib kivy nltk keras SQLAlchemy Django Twisted Frameworks Flask Scipy Pytorch Click Astropy Scikit-learn Opencv PyQt Tensorflow Wagtail]]></content>
      <tags>
        <tag>python</tag>
        <tag>todo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[习近平在正定]]></title>
    <url>%2F2018%2F05%2F31%2Fxjpdzd%2F</url>
    <content type="text"><![CDATA[本文摘自”红星云”，总结了习近平同志在正定任职时的各方面工作。 人才战略内用，外招，上请，下挖，近补，远育。 提拔优秀青年充实基层领导班子 把专家型学者充实到县级领导班子 提拔有专长的干部 支持民间办学（专业技术学校、电大、函大办学），选拔优秀人才入高校深造 自己执笔给全国知名专家、学者写信，聘请担任顾问 经济发展 明确定位，将正定经济模式定位于“半城郊”型 全面规划发展商品经济 党建和干部建设 政治思想教育，端正作风教育 总览全局抓大事，反对衙门作风，注重工作实效；搞好团结，以身作则，不搞不正之风；加强学习，提高领导水平 ；树立雄心壮志 注重当前和长远的关系、优势与劣势、积极性和科学性、内部条件和外部条件、内涵和外延、生产和服务 家庭的影响 热爱人民，注重走群众路线 注重调查研究 尊重老同志]]></content>
  </entry>
  <entry>
    <title><![CDATA[Django管理已存在的数据库]]></title>
    <url>%2F2018%2F05%2F30%2FDjango-integrate-with-legacy-database%2F</url>
    <content type="text"><![CDATA[当我们使用Django时，一般都是根据定义的模型来生成数据库，也就是先创建Django项目，再创建的数据库。当反过来，先有数据库，后才有Django项目时，该如何处理呢？ 直觉反应是，根据数据库中每个表，自己去定义模型。 其实，django提供了了python manage.py inspect命令，可以根据模型来生成model。这样即可以保证比人工定义准确，也能够节省巨量时间（我平常连定义model都觉得费劲）。 详细内容可参见 Integrating Django with a legacy database 另外要提及的是，我需要根据远程POSTGRE SQL数据库来生成model。可能需要指定schema文件，在settings.py中的DATABASES中添加OPTIONS选项即可，具体配置如下图所示：]]></content>
      <categories>
        <category>Django</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Django 测试远程数据库是否可连接]]></title>
    <url>%2F2018%2F05%2F30%2FDjango-Test-Remote-Database-Connection%2F</url>
    <content type="text"><![CDATA[在一个项目中需要配置远程数据库，我配置好了settings.py后，想要验证下django是否能连接上该远程数据库。 答案很简单，运行python manage.py runserver即可验证。 如果远程数据库配置不正确的话，会报错（如下图所示）]]></content>
      <categories>
        <category>Django</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[后出师表]]></title>
    <url>%2F2018%2F05%2F24%2Fhcsb-zgl%2F</url>
    <content type="text"><![CDATA[先帝深虑汉、贼不两立，王业不偏安，故托臣以讨贼也。以先帝之明，量臣之才，固知臣伐贼，才弱敌强也。然不伐贼，王业亦亡。惟坐而待亡，孰与伐之？是故托臣而弗疑也。臣受命之日，寝不安席，食不甘味。思惟北征。宜先入南。故五月渡泸，深入不毛，并日而食；臣非不自惜也，顾王业不可得偏安于蜀都，故冒危难，以奉先帝之遗意也，而议者谓为非计。今贼适疲于西，又务于东，兵法乘劳，此进趋之时也。谨陈其事如左： 高帝明并日月，谋臣渊深，然涉险被创，危然后安。今陛下未及高帝，谋臣不如良、平，而欲以长策取胜，坐定天下，此臣之未解一也。 刘繇、王朗各据州郡，论安言计，动引圣人，群疑满腹，众难塞胸，今岁不战，明年不征，使孙策坐大，遂并江东，此臣之未解二也。 曹操智计，殊绝于人，其用兵也，仿佛孙、吴，然困于南阳，险于乌巢，危于祁连，逼于黎阳，几败北山，殆死潼关，然后伪定一时耳。况臣才弱，而欲以不危而定之，此臣之未解三也。曹操五攻昌霸不下，四越巢湖不成，任用李服而李服图之，委任夏侯而夏侯败亡，先帝每称操为能，犹有此失，况臣驽下，何能必胜？此臣之未解四也。 自臣到汉中，中间期年耳，然丧赵云、阳群、马玉、阎芝、丁立、白寿、刘郃、邓铜等及曲长、屯将七十余人，突将、无前、賨叟、青羌、散骑、武骑一千余人。此皆数十年之内所纠合四方之精锐，非一州之所有；若复数年，则损三分之二也，当何以图敌？此臣之未解五也。 今民穷兵疲，而事不可息；事不可息，则住与行劳费正等。而不及今图之，欲以一州之地，与贼持久，此臣之未解六也。 夫难平者，事也。昔先帝败军于楚，当此时，曹操拊手，谓天下以定。然后先帝东连吴越，西取巴蜀，举兵北征，夏侯授首，此操之失计，而汉事将成也。然后吴更违盟，关羽毁败，秭归蹉跌，曹丕称帝。凡事如是，难可逆见。臣鞠躬尽瘁，死而后已。至于成败利钝，非臣之明所能逆睹也。]]></content>
      <tags>
        <tag>背诵</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前出师表]]></title>
    <url>%2F2018%2F05%2F24%2Fqcsb-zgl%2F</url>
    <content type="text"><![CDATA[先帝创业未半而中道崩殂，今天下三分，益州疲弊，此诚危急存亡之秋也。然侍卫之臣不懈于内，忠志之士忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气，不宜妄自菲薄，引喻失义，以塞忠谏之路也。 宫中府中，俱为一体，陟罚臧否，不宜异同。若有作奸犯科及为忠善者，宜付有司论其刑赏，以昭陛下平明之理，不宜偏私，使内外异法也。 侍中、侍郎郭攸之、费祎、董允等，此皆良实，志虑忠纯，是以先帝简拔以遗陛下。愚以为宫中之事，事无大小，悉以咨之，然后施行，必能裨补阙漏，有所广益。 将军向宠，性行淑均，晓畅军事，试用之于昔日，先帝称之曰能，是以众议举宠为督。愚以为营中之事，悉以咨之，必能使行阵和睦，优劣得所。 亲贤臣，远小人，此先汉所以兴隆也；亲小人，远贤臣，此后汉所以倾颓也。先帝在时，每与臣论此事，未尝不叹息痛恨于桓、灵也。侍中、尚书、长史、参军，此悉贞良死节之臣，愿陛下亲之信之，则汉室之隆，可计日而待也。 臣本布衣，躬耕于南阳，苟全性命于乱世，不求闻达于诸侯。先帝不以臣卑鄙，猥自枉屈，三顾臣于草庐之中，咨臣以当世之事，由是感激，遂许先帝以驱驰。后值倾覆，受任于败军之际，奉命于危难之间，尔来二十有一年矣。 先帝知臣谨慎，故临崩寄臣以大事也。受命以来，夙夜忧叹，恐托付不效，以伤先帝之明，故五月渡泸，深入不毛。今南方已定，兵甲已足，当奖率三军，北定中原，庶竭驽钝，攘除奸凶，兴复汉室，还于旧都。此臣所以报先帝而忠陛下之职分也。至于斟酌损益，进尽忠言，则攸之、祎、允之任也。 愿陛下托臣以讨贼兴复之效，不效，则治臣之罪，以告先帝之灵。若无兴德之言，则责攸之、祎、允等之慢，以彰其咎；陛下亦宜自谋，以咨诹善道，察纳雅言，深追先帝遗诏，臣不胜受恩感激。 今当远离，临表涕零，不知所言。]]></content>
      <tags>
        <tag>背诵</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[新闻联播-20180520]]></title>
    <url>%2F2018%2F05%2F21%2Fxwlb-20180520%2F</url>
    <content type="text"><![CDATA[生态文明 推动生态文明建设迈向新台阶； 绿水青山，鱼翔浅底 生态产业化，产业生态化 “两山”理论：绿水青山就是金山银山 蓝天白云，繁星闪烁 新时代推进生态文明建设的重要遵循； 关于鼓励广大干部新时代新担当新作为的意见； 新时代新作为新篇章：人民公安 依法执法，就是文明执法 “不要管我，快追！” 最美丽的“公主抱” 对外开放推动能源革命，开放进口多元化； 中美经贸磋商：增加进口；服务业；知识产权；双向投资；高层沟通； 房地产投资热：坚持调控 残疾人帮扶就业 最美基层干部——范振喜：解决村集体债务、发展村集体经济、引入绿色高效农业。]]></content>
      <categories>
        <category>新闻联播</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[《资治通鉴》11句]]></title>
    <url>%2F2018%2F05%2F21%2F%E3%80%8A%E8%B5%84%E6%B2%BB%E9%80%9A%E9%89%B4%E3%80%8B11%E5%8F%A5%2F</url>
    <content type="text"><![CDATA[木心不直，则脉理皆斜，弓虽劲而发矢不直——《资治通鉴 唐纪》 能择善而从之，美自归己。——《资治通鉴 宋纪》 好胜人，耻闻过，聘辨给，眩聪明，厉威严，恣强愎，此六者，君上之弊也。——《资治通鉴 唐纪》 千钧之弩，不为鼷鼠发机；万石之钟，不以莛撞起音。——《资治通鉴 汉纪》 聪明流通者戒于太察，寡闻少见者戒于壅蔽。——《资治通鉴 汉纪》 得财失行，吾所不取。——《资治通鉴 陈纪》 夫表曲者影必斜，源清者流必洁。——《资治通鉴 汉纪》 口说不如身逢，耳闻不如目睹。——《资治通鉴 唐纪》 面从后言，古人所诫。——《资治通鉴 魏纪》 明者，销祸于未荫。——《资治通鉴 汉纪》 家贫思良妻，国祸思良臣。——《资治通鉴 周纪》]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>资治通鉴</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[唐浩明点评曾国藩家书（下）二]]></title>
    <url>%2F2018%2F05%2F21%2F%E5%94%90%E6%B5%A9%E6%98%8E%E7%82%B9%E8%AF%84%E6%9B%BE%E5%9B%BD%E8%97%A9%E5%AE%B6%E4%B9%A6%EF%BC%88%E4%B8%8B%EF%BC%89%E4%BA%8C%2F</url>
    <content type="text"><![CDATA[P75： 人生惟有常为第一美德；常常临摹，久不间断，月异而岁不同；进之以猛，持之以恒。 P83： 办大事者，以多替选手为第一要义。满意之选不可得，姑节取其次，以待徐徐教育可也。 P86： 凡奇僻之字，雅故之训，不手抄则不能记，不摹仿则不能用。 P92： 凡世家子弟衣食起居，无一不与寒士相同，庶可以成大器；若沾染富贵习气，则难忘有成。 P94： 天地之道，刚柔互用，不可偏废。太柔则靡，太刚则折。刚非暴虐，强矫而也；柔非卑弱，谦退而已。趋事趋公，则当强矫；争名逐利，当则谦退。 P99： 吾兄弟有才而无德者，亦当不没其长，而稍远其人。]]></content>
      <categories>
        <category>曾国藩</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[唐浩明点评曾国藩家书（下）一]]></title>
    <url>%2F2018%2F05%2F20%2F%E5%94%90%E6%B5%A9%E6%98%8E%E7%82%B9%E8%AF%84%E6%9B%BE%E5%9B%BD%E8%97%A9%E5%AE%B6%E4%B9%A6%EF%BC%88%E4%B8%8B%EF%BC%89%E4%B8%80%2F</url>
    <content type="text"><![CDATA[天下古今之庸人，介意一惰字致败；天下古今之才人，皆以一傲字致败。 常言道，笨鸟先飞，“先飞”既是勤。有才干的人，往往容易骄傲。一旦骄傲，则过多估计自己，又极易轻慢待人。前者导致师心自用，后者致人怨恨。即使再有才干，到了这个地步，也就离失败不远了。 凡动口动笔，厌人之俗，嫌人之鄙，议人之短，发人之覆，皆骄也。欲去骄字，不轻非笑人；欲去惰字，不晏起。 惧蹈危机而思自进于谨言慎行之路。 往往对“危机”的反思力度不够，如果够的话，要在碰到每件事之后都回顾下是否有前车之鉴，也要充分辨明别人、古人的“危机”。 说话太易，举止太轻；走路宜重，说话宜迟。 说话太易：说话频率太快，用词欠妥，表达较轻率；举起太轻：走路过急，手的动作较多，眼神游离飘逸。 不信医药，不信僧巫，不信地仙；药能活人，亦能害人；每日饭后走数千步。 不信医药的意思为不相信保健品。虽然古代有很多”常识“害人不浅已深入现代人的内心，但”是药三分毒”这个观念还是被很多人无视，各类野生动植物即使可能有害身体健康，人们仍然趋之若鹜。 文中雄奇之道，以行气为上，造句次之，选字又次之。 行文气势、气象、气韵等整体性的东西为上。可借鉴古人文章，如韩愈、杨雄。 凡畏人，不敢妄议论者，谦谨者也；凡好讥评人短者，骄傲者也。 初见人时，若气度非凡，则畏——在人前保持风度的重要性。 凡说话不中事理，不担斤两者，其下必不服。 说话不着边际不切中事理，或随意无分量，不可做领导。 富贵人家气习，礼物重而情义薄，使人多而亲到少。 礼轻情意重，关键在用心，急人所急，解人所难。]]></content>
      <categories>
        <category>曾国藩</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Angular: Heroes]]></title>
    <url>%2F2018%2F05%2F14%2FAngular-Heroes%2F</url>
    <content type="text"><![CDATA[这是 Angular官网 提供的一个项目教程。 设计主要包含3个页面： Dashboard Heroes List Hero Detail 准备项目创建项目ng new angular-tour-of-heroes 启动应用服务器ng serve --open 修改标题 在app.component.ts（用typescript编写），修改title值 在app.component.html中修改标题：&lt;h1&gt;Angular: Heroes&lt;/h1&gt; 修改后保存即可，浏览器自动刷新 添加样式在src/style.css中修改全局样式 英雄创建组件ng generate component heroes 创建了src/app/heroes文件夹 在该文件夹下创建了html/ts/css等文件 添加hero属性并显示 在heroes.component.ts中的HeroesComponent.ts类中添加hero属性； 在heroes.component.html中显示&lt;h2&gt;&lt;/h2&gt; 显示HeroComponent把&lt;app-heroes&gt;&lt;/app-heroes&gt;添加进app.component.html中即可 创建hero类 在src/app目录下新建hero.ts文件，定义并exportHero类 再修改heroes.component.ts中hero属性，使其成为Hero类的一个实例 并在hero.component.html中修改显示hero的HTML代码 利用管道进行格式化 name的可编辑 需要将name双向绑定：&lt;input [(ngmodule)]=&quot;hero.name&quot; placeholder=&quot;name&quot;&gt; 需要在项目中导入FormModule 英雄列表 在src/app下创建一个模拟英雄列表的文件mock-heroes.ts，并在heroes.component.ts中引入 在heroes.component.html中用*ngFor去循环显示英雄列表 在heroes.component.css中定义css文件 在heroes.component.html中用(click)=&quot;onSelect(hero)&quot;来定义单击事件 在heroes.component.html中用*ngIf来显示/隐藏HTML代码 在heroes.component.html中用[class.selected]=&quot;selectedHero === hero&quot;来控制是否添加 select类 英雄和英雄列表页面拆分 创建英雄详情组件：ng generate component hero-detail 将关于英雄详情的HTML代码挪动至： hero-detail.component.html 在heroes.component.html中添加hero-detail组件并绑定selected数据&lt;app-hero-detail [hero]=&quot;seletecHero&quot;&gt;&lt;/app-hero-detail&gt; 在hero-detail.component.ts中用@Input() hero: Hero;声明hero为绑定的外部数据]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Angular: First Glance]]></title>
    <url>%2F2018%2F05%2F13%2FAngular-First-glance%2F</url>
    <content type="text"><![CDATA[今天决定学习下Angular，根据官方文档进行学习。 安装npm install -g @angular/cli 创建项目ng new my-app ng不支持node.js &lt; 8.9，我升级了我的node.js 过程中，我开了VPN，由于Linux下的VPN需要用socket proxy，所以初始化项目的时候会出错，我关掉了proxy，可能有缓存，所以初始化项目中的npm安装各种包还很正常，可能是缓存的作用。 整个过程费事真的比较长。 运行ng serve --open（或缩写为ng serve -o），打开浏览器 微调 调整了欢迎页面的文字 调整了css 这两个具体过程没啥记录的]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Tracking User Login Activity in Django Rest Framework]]></title>
    <url>%2F2018%2F05%2F12%2FTracking-User-Login-Activity-in-Django-Rest-Framework%2F</url>
    <content type="text"><![CDATA[django如何记录登录事件？ 开发REST API首选为Python/Django的Django REST Framework（DRF），DRF提供多种认证机制： Basic Authentication Token Authentication Session Authentication Client-Server模式下常用的为token-based authentication了解详情 Json Web Token(JWT) Authentication是最近兴起的token-based Authentication新标准，JWT不需要在数据库中存储token，了解详情 django-rest-framework-jwt又是在django中实现jwt的非常方便的插件。了解详情 但是，当需要记录login event的时候，jwt本身实现不了，最好的方法是结合Signals来做。 为什么jwt本身实现不了呢？ 需要记录的login event为登录成功和登录失败； 登录成功的signal为user_logged_in，登录失败的signal为user_login_fail； user_loggined_in由django.contrib.auth的login()负责； user_login_fail由django.contrib.auth的authenticate()负责； DRF只调用authentication()函数，因此登录成功的信号无法发出。 所以，需要主动发user_logged_in信号 原因讲清楚了，详细解决方案参照via]]></content>
      <tags>
        <tag>django</tag>
        <tag>DRF</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[金一南：不忘初心，方得始终]]></title>
    <url>%2F2018%2F05%2F11%2F%E9%87%91%E4%B8%80%E5%8D%97%EF%BC%9A%E4%B8%8D%E5%BF%98%E5%88%9D%E5%BF%83%EF%BC%8C%E6%96%B9%E5%BE%97%E5%A7%8B%E7%BB%88%2F</url>
    <content type="text"><![CDATA[不忘初心，方得始终——中国共产党长盛不衰的生命力源泉。 十九大上近平同志讲过：中国共产党人的初心和使命，就是为中国人民谋幸福，为中华民族谋复兴。这个初心使命是激励中国共产党不断前进的根本动力。 在十九大召开之前，网上发的这么个帖子，当然我觉得很可笑的： 中国最牛创业团队：1921年7月注册成立公司，靠一份共产主义的BP，拿到了苏联的天使轮和A轮投资，遭遇数次破产危机，终于在遵义选出了天才的CEO，历经艰辛，打败西方跨国公司和国内强有力的竞争对手，终于在1949年10月1日成功在北京上市，经过九十六年历届管理层经营，去年全年营收80多万亿，市值近千万亿，全球第二，有望成为全球第一，属于史上最牛的创业团队之一。今天公司举行第19届董事会，预祝大会圆满成功。 我觉得这个帖子写得很可笑，也很有意思，你帖子上面这个照片，这12人是中国最牛创业团队，我们从上排左边看起，陈云、博古、彭德怀，刘少奇、周恩来、张闻天，下排从左边看起，康生、毛泽东、王家祥、朱德、项英、王明。队伍不断演化，不断分裂，有坚持到底的，有半途而废的，但她成为了中国历史上最牛的创业团队。1949年全国即将获得解放，毛泽东给中共一大代表李达去了封信，当时李达在南方，因为这个信要穿过统区到南方，毛泽东怕信被别人识破，就用那些暗语，用的语言跟这个一样。毛泽东致李达的公函上写：吾兄系本公司发起人之一，现公司生意兴隆，望速来参与经营。 大家看历史惊人的相似，当然我们在讲的这12个人，中国历史上最牛创业团队的时候，我觉得今天咱们再讲另外12人。从努尔哈赤到宣统，也是12个人，他们曾经也是中国历史上挺牛的创业团队。按照台湾柏杨人的讲法，清王朝将近三分之二的皇帝都很能干，了解并努力完成他们的责任，剩下的三分之一的也属于中等才智，像明王朝那样一连串草包、恶棍型君主，清王朝一个也没有，中国还没有一个王朝出现过这么多具有很强能力，而且很辛勤工作的帝王。我们可以看大清王朝，这12个人其实也挺牛气的，他们没有一个人荒淫无度，没有一个人好吃懒做，没有一个人不理朝纲，像明朝到了晚年，皇帝两个月三个月都不上朝，大清王朝从无此现象。 前不久一位领导同志在跟我讲了，你看清王朝，宦官专政、内戚专权、外臣尾大不掉等封建社会的通病，清王朝一个都没有，治理的不错。但是为什么这12个人没有成为中国历史上最牛创业团队，而有些成为了耻辱柱上的一批人？为什么从康雍乾盛世，到道咸同光的衰败如此之快？按照王朝的规律，君子之泽，五世而斩，第一届人开基创业，第二代人小心谨慎，第三代就有点懈怠了，第四代第五代不理朝纲了，荒淫无度了，最后王朝崩塌，所以叫君子之泽，五世而斩。为什么从康雍乾盛世到道咸同光是就只隔了一个嘉靖，很快就衰败了？ 帝王的品质出问题了吗？ 道光穿过带补丁的裤子，给皇后过生日用打卤面招待太监。我们今天谁给自己的夫人过生日用打卤面招待客人？没有吧。 道光宫中岁入不许超过20万。清史记载叫“食物虽好，价高不锁”，压缩宫内开支，支持前方禁烟。你说他糊涂吗？但他是中国历史耻辱柱上第一人，我们很难用品质来判断皇帝他施政的效果。 道光败了第一次鸦片战争，中国历史上耻辱第一人，儿子咸丰即位，咸丰的座右铭“防三渐”，一“防土木之渐”，即防大兴土木；二“防宴安之渐”，防止大吃大喝；三“防壅蔽之渐”，防止上情不能下达，下情不能上达。 很清楚的人，但他败了第二次鸦片战争，历史耻辱柱上第二人， 同治支持曾国藩、左宗棠、李鸿章发起洋务自强 光绪支持康有为、梁启超发起戊戌维新搞君主立宪，就皇帝都要受宪法的管束，而光绪皇帝支持。 你说他们糊涂吗？最后为什么一败涂地？他们也曾经斗争过： 1841年1月，道光皇帝对英国宣战； 1860年9月，咸丰皇帝对英法宣战； 1894年8月，光绪皇帝的日本宣战； 1900年6月，慈禧对诸国宣战。 一个败的比一个惨，为了什么？ 没有奋斗过吗！ 1860年8月，英法联军前卫七百，由北塘、内港向新河前进。僧格林沁的蒙古铁蹄是大清王朝最强悍的作战力量，以蒙古铁蹄三千向敌突击，受炮火集中射击，几乎全军覆灭，最后归队者仅七人，没有奋斗过吗！ 奋斗过！浴血奋斗过。 但当时面临的局面，李鸿章讲一句话，三年前未有之变局，三千年未有之强敌，再也不是北方的少数民族对中原的入侵，再也不是落后的生产力、落后的生产关系对中原的统治，而是一种先进的生产力、先进的生产关系——资本主义体制对封建体制的入侵。 所以这12人创业团队，你从他个人品质上有很难找到失败的基因。是他们面临的大势太大，面临大势无动于衷，不思变革，最后满盘皆输。 马克思讲： 一个人口几乎占人类1/3的幅员广大的帝国，不顾时势仍然安于现状，由于被强力排斥于世界联系的体系之外而孤立无依，因此竭力以天朝尽善尽美的幻想来欺骗自己，这样一个帝国，终于要在这样一场殊死的决斗中死去。 马克思1848年写的，60年后1911年辛亥革命，这个帝国终于死去了。帝国死去了，问题并没有解决。近代以来我们所面临的问题，鸦片战争以来，中华文明一直在与西方文明抗争，中华文明节节败退，国家几近灭亡，文明几乎断裂。 世界四大文明古国：古埃及文明、古印度文明、古巴比伦文明、古中华文明。前三个都泯灭了：古印度文明断裂了，古埃及文明断裂了，古巴比伦文明断裂了，中华文明几乎断裂，在近代来几乎断裂。 它不仅是封建体制问题，我们最后建立共和，共和也不行，一次一次的溃败。 这不仅仅是一个政治体制的问题，也不仅仅是一个民族的问题。 我们近代以来，曾左李首先提出器不如人，中国一个都不成，连续失败，丧权辱国条约一个接了一个，问题出在哪里？技不如人，机械制造科学技术不行，所以要搞洋务运动要自强，要学习西方的先进科学技术。洋务运动30年最大的成果，北洋水师。甲午战争灰飞烟灭，全军覆没。 洋务运动失败，康有为、梁启超、孙中山出来了，提出制不如人。中国不是器不如人，是体制出问题了，政治制度出问题了。康梁戊戌维新就是改制，孙中山辛亥革命同是改制。结果共和建立，巴黎合约仍瓜分中国，把德国在山东的权益转让给日本，中国还是第一次世界大战的战胜国，还被别人瓜分。 1919年爆发的五四运动，提出思想文化不如人。五四运动先驱胡适、陈独秀、鲁迅、钱玄同等人提出，中国的问题不仅是技不如人，不仅是制不如人，主要是思想文化不如人，所以提出打倒孔家店的口号。当年五四运动开始的新文化运动，打倒孔家店，与今天遍布全世界的孔子学院，形成多么大的反差，我们今天发现孔子没有妨碍我们走向现代化。 当年的思维方式就是百罪归于一身，我们一定要找一个原罪，这个原罪是中国所有毛病的老根，解决他后所有问题迎刃而解。是器物层面？还是制度层面？还是是思想文化层面？一个一个找，最后找到汉字了，说导致中国落后的原因是汉字方块字限制了中国人思维的发展，所以新文化运动若干先驱提出了罗马字母化。 我说你看当年，这种我们看着当年这种文明所面临的危机，什么也不行，怎么也不行了，看哪都不顺眼，器物也不行，制度也不行，思想文化也不行。 我们今天中国国梦，30年代曾经有过一次，30年，有一次北京上海的知识分子做了调查，调查就是你的梦想是什么？ 清华大学教授林语堂回答： 只希望国中有小小一片的不打仗，无苛税，换门牌不要钱，人民不必跑入租界而可以安居乐业的干净土。 我们今天在座会场4000人，网络上连接的人更多，谁能想到八九十年前中国就这个样子，就这点梦想。我们今天梦想有房子有车，环境没有污染，没有雾霾，交通不堵塞，然后社会法制非常良好，你看当年的梦想是什么？就这点梦想。 燕京大学教授顾颉刚回答他的梦想： 没有人吸鸦片、吞红丸，这是最重要的事，这种嗜好延长下去非灭种不可，任凭有极好的政治制度也是无益的。 只要吸毒，万事救不了你，什么制度也不行！ 上海大学者施蛰存回答他的梦想： 中国人走到外国去不被轻视，外国人走到中国来，让我们敢骂一声“洋鬼子”。你知道，先生，现在是不敢骂的。 上海外滩高悬着“华人与狗，不许入内”。你骂谁？你敢骂吗？你不敢骂！我们今天看我们《战狼2》，大家看的多过瘾，我说我们当年施蛰存、顾颉刚、林语堂这些人，他们能不能想到90多年后，新中国拍了个电影叫《战狼2》，我觉得绝对想象不到。 罗文干回答他的梦想： 政府能统一全国，免人说我无组织。内争的勇毅转而用来对外。武官不怕死，文官不贪钱。妇女理家，崇尚勤俭，不学摩登。青年勤俭刻苦，不穿洋服，振兴国货。 这些知识分子是中华民族的良心，他们的梦想加在一起就四个字——民族救亡。 一个国家、一个民族到了危亡的边缘，一种文明、一种文化到了崩溃的边缘，怎么把他救出来。在这种情况下，中国共产党应运而生，中国共产党这个运不是霞光高照，铺着红地毯的运，而是国家最黑暗，人民最无望的时候，一批年轻人走上中国政治舞台，凭着一腔热血浴血奋斗。 中国近代其实就是蒋廷黻讲过这个问题。1938年，抗日战争最艰苦的阶段，历史学家蒋廷黻写了本中国近代史，他发出一个著名的蒋廷黼之问，中国近代史就用三个月时间写成的，资料也不足，草草写就，使他享誉史学界。这里面有个著名的蒋廷黼之问，里面讲： 近百年的中华民族根本只有一个问题，那就是中国人能近代化吗？能赶上西洋人吗？能利用科学和机械吗？能废除我们的家族和家乡观念，而组织一个近代的民族国家吗？能的话我们的民族前途是光明的，不能的话，我们这个民族是没有前途的。 近现代来所有追求，从洪秀全的太平天国，到曾左李的洋务自强，到康梁的戊戌维新，到孙中山的辛亥革命，到中国共产党的新民主主义革命，大家一看，好像就是个意识形态之争、政党之争、政治之争。实际上讲清楚，讲的最根本就是谁能解决这个问题——谁能让中国近代化，谁能让中华民族赶上西洋人！谁能利用科学和机械废除我们家族家庭观念，而组织一个近现代的民族国家。不在三民主义，还是社会主义？不在你无政府、自由主义，各种主义谁能解决问题？能解决最关键，这个问题能解决，民族前途是光明的，不能的话，我们的民族是没有前途的。 回答这个问题的资格，历史把它就留给了中国共产党人。其他的力量都无法有效的回答这个问题。从洪秀全开始，所有人都奔目标去了，建立一个近现代化的中国，中华民族的近现代化的民族国家。从洪秀全到曾左李，到康梁，到孙中山，到共产党人都奔着目标去了。唯一解决这问题的是中国共产党人，中国共产党人通过艰苦奋斗，五次反“围剿”，两万五千里长征，抗日战争，解放战争，跨过鸭绿江，所有这些历尽千难万险的行动汇在一起，这个力量，敢于斗争，敢于胜利，前赴后继，英勇顽强，是中国历史上就是前所未有的力量，它给中华民族带来胜利。 中华民族近代的最缺乏的就是胜利。我们吃了很多苦，我们没有胜过。一个国家、一个组织跟一个人一样，就问你一句话，你胜过没有？你说我吃了不尽的苦，我没有胜过，我今天还在吃苦，那你一定哭都哭不出来，一定要胜利。我们没有苦难，没有积聚，没有坚忍，但是没有胜利就没有激情，没有尊严。如果一个国家没有激情，没有尊严，他能够自立于世界民族之林吗？我们近代来累累的失败，唯有中国共产党领导的中国革命，给中华民族带来了胜利，前所未有的胜利，支撑这个胜利的就这句话，要为人民谋幸福，要为民族谋复兴。 这就是这个党他的初心，这个初心是共产党人之所以取得胜利，而共产党几乎今天还在不断的改正自己的错误，纠正自己的失误，不断的向着民族复兴的道路前进，核心就这句话。初心不改，方得始终，为人民谋幸福，为民族谋复兴，这是最根本的东西。 我们说近代来中华文明一直在与西方文明抗争，就像我们讲的，随着国家几近衰亡，这一文明几乎断裂。 我们近代以来，我们所讲的器不足人，制不如人，思想文化不如人，怎么看中国人都比别人矮了半截子，怎么看外国的月亮都比中国圆。你在这种情况下你能有自信吗？你的文明能有精神的支撑吗？新中国诞生是中华文明在政治上摆脱了颓势，向全世界展示这种文明，也能找到一个适合自己发展的政治体制。 1991年苏联解体的时候，福山写了历史的终结，人类历史终结在西方自由资本主义了。2008年金融危机，2009年、2010年福山到北京来了，福山也讲，结论下早了，历史没有终结。中国异军突起，中华文明的政治体制和西方的自由资本主义完全不一样，这也是一个发展道路，提供了另外一种选择，另外一种途径。 新中国的诞生使这种文明在政治上摆脱了颓势，我们中华文明不用依附于别的文明，我们有自己的发展路数。 跨过鸭绿江，是中华文明在军事上摆脱了败势头。 九一八事变，日军直接在沈阳发动；七七事变，日军直接在卢沟桥——北京的南面的宛平城发动。新中国一成立，就跨过鸭绿江，虽然美方一再向中方通报说，我们绝不过鸭绿江，不会威胁你们安全，但是新中国不允许在中国周边发生战争。所以跨过鸭绿江。 一种文明也需要军事支撑的。古巴比伦文明、希腊文明、古罗马文明都败于军事，包括古印度文明，古埃及文明也都是一样。 没有一个军事力量，文明照样无法支撑。当年我们跨过鸭绿江，日本京都大学一个教授他就讲了，他说1949年你们的毛泽东讲中国人民从此站起来了,我们周围日本人一个相信的都没有。你看看你中国近代这部历史，毛泽东一句话就站起来了，谁相信呢？1950年你们竟然敢对美国出兵！你们居然把以美国为首的联合国军从北面压到南面去了，我这才觉得中国人跟过去真的不一样了，看来毛泽东讲的话有些道理。 1900年，八国联军入侵北京，从天津港出发的，1900年8月3号从天津向北京攻击出发的八国联军全部18881人，十天之内攻陷北京。半个世纪之后，1950年，中国人民志愿军跨过鸭绿江，以美国为首的联合国军，16国联合国军，八国联军的一倍。60万部队，我们与他们抗衡，把他们压着步步向南退缩。 这是一种文明的胜利，不仅是志愿军的胜利，也不仅是新中国的胜利，这种文明在军事上摆脱了败势。 当年我们军队跨过鸭绿江的时候，在北京功德林的战俘营有多少国民党，我们抓的国民党的高级将领，杜聿明、宋希濂、黄维、文强等人，他们都忘记了自己是国民党，是共产党战俘的身份，拼命的给中共中央军事委员会写建言、写美军作战特点、写怎么战胜美国人。杜聿明讲抗战期间，杜聿明宋希濂等人作为远征军的成员，饱受美军的轻蔑，被美国人看不起，他说这回你们在朝鲜战场应该好好的教育他们，让他们看看中国人。 他们在那瞬间他们都忘记了自己是共产党的战俘，他们觉得自己是中国人，是一样的中国人。所以必须获得这样胜利。 改革开放，中华文明在经济上扭转了劣势，我们能够迅速的成为世界经济第二大的经济体，当然按照国际货币基金组织和世界银行的国际购买力平价估算，中国世界第一，但我们说我们不是世界第一，我们按照美元汇率那么算，我们世界第二。 这是一种文明的复兴，不但是政治的、军事的、经济的。我们今天为什么提理论自信，制度自信、道路自信、文化自信，而近平同志强调文化自信是最根本的、最核心的自信。一个国家没有文化自信，你还自信什么？你觉得别人东西都比自己好，你没有文化自信，文化自信是理论自信，制度自信，道路自信中的基础，最根本的自信。 大家看曾左李提的器如人，康梁孙中山提的制不如人，胡适、钱玄同、鲁迅、陈独秀等人提的思想文化不如人。到今天，七八十年时间，我们理论自信，制度自信，道路自信，文化自信，一种文明的全新的复兴。很多人讲十九大，原来以为是五年规划，听完以后发现是三十年规划，是一个中长期的规划，一个民族复兴的规划，一个2049年——新中国成立一百周年，完成伟大的民族复兴这样的规划。 这幅图如果配上解说的话，大家看了会感觉到很可笑的——永远不要小看坐在你后排的人。大家觉得很可笑？我说，坐在后排座在前排，其实就差了一个初心。坐在后排这个人不忘初心，坐在前排的人初心没有了，没有了初心，就这样结局。党的19大以来，立案审查省军级以上党员干部440人，18届中委候补中委43人，中纪委委员九人，厅局级干部8900余人，县处级干部63000余人，处分基层党员干部278000人，追回外逃人员3453人，“百名红通人员”追回48人。现在一切都在继续。 大家可以看，一个初心支撑着能迸发出多么强大的力量，十八大开完，近平同志当选总书记。当时有人就讲过，说习近平头上有三座大山，第一是恩人，提拔你的；第二是亲人，养育你的；第三是友人，帮助你的。他们认为习近平也跨越不了三座大山，跟过去没什么差别。 这三座大山中国人都难以跨越。你怎么面对提拔你的？你怎么面对养育你的？你怎么面对帮助你的？十八大刚刚一开完，近平同志又做出了提出了一个坚决的规定——立规矩。十八大刚刚结束一个月，中央八项规定出台，立规矩，而且首先对高级领导机关高级领导干部立规矩。过去我们讲，下了多少个文件，管不住一张嘴，现在一下全部管住。 八项规定不仅是对全党党员的规定。八项规定要求中央政治局关于改进工作作风，密切联系群众的八项规定，是对政治局的规定，全党都做到了。 我们有句话立规矩，就是亮旗帜；破坏规矩，就要亮剑。 十八大最鲜明的规矩首先就是八项规定，破坏八项规定就要亮剑。近平同志讲，哪些事情能做，哪些事情不能做哪，哪些事情该这样做，哪些事情该那样做，都要规定的明明白白，要提高制度的执行力，让制度纪律成为带电的高压线，使查处违纪违法问题制度化经常化，使党员干部心有所畏，言有所戒，行有所止。 前不久有位领导同志跟我讲一句话，我们有段时间一来，一批人无所畏惧，他说你看历史上，官当得越大，越如履薄冰，战战兢兢。后来出现一个问题，官当得越大越为所欲为，肆无忌惮。这行不行？绝对不行。你官当大了没有压力，觉得权力大了，什么事情都能干，必须立规矩。首先是不敢腐，直到法制，制度建设到不能腐，不想腐，后面首先让你不敢腐，必须做到这一点。就像十八届六中全会的公报讲那样，新形势下加强规范党内政治生活，重点是各级领导机关和领导干部，关键是高级领导干部，特别是中央委员会，中央政治局常务委员会的组成人员，高级干部，特别是中央领导层的成员，必须以身作则，模范遵守党党章党规，严守党的政治纪律和政治规矩，坚持不忘初心，继续前进，坚持率先垂范，以上率下，为全党全社会作出示范。 近平同志在这方面，当然包括中纪委，你看王岐山同志非常严格的要求，全党必须做到，干部尤其是高级干部，必须战战兢兢，如履薄冰，必须要时刻检点自己的行为。 近平同志为什么能完成跨越越恩人、亲人和友人，为什么能够完成，近平同志自己讲过，我们去年在北京开全国哲学社会科学工作会议，建国60多年，第一次开这个会，十个人发言，我是第九个发言，近平同志志主持。 我们在发言的时候，近平同志插话，就讲了这段话。他说：一南教授你知道吗？我那书都在延安插队的时候看。 延安插队，是近平同志集中学习一段时间。在延长，他说以他同时插队的两个人，雷平声，雷荣这两兄弟两个与他同时插队，雷平声与近平同志在同一个窑洞共同住了五年，他说我当时就看雷平声，雷荣生他们带了两铁皮箱子书。我们这边看雷荣生带的书，那有清华附中插队，这边是带着军事书，那边带的哲学书，互相交换，大量阅读。 今年1月，雷平生接受中央党校《学习时报》的采访，回忆了这么一段，雷平声说，白天去山上劳动，晚上回家一有空就看书，后来大部分知青离开了，窑洞里，只剩我们两个人。我们在看上有格子铺位，中间隔一个炕桌，炕桌上有盏煤油灯，白天干了一天的活，已经很累了，晚上吃过饭我觉得累就睡觉了，近平吃过晚饭又拿起书本，他怕影响我睡觉，就把灯移到一边，用身体挡住光线。 他看书常常到非常晚，有时候我半夜醒来发现近平还在看书，就问你怎么还不睡觉，他总说再看一会。第二天下地干活，鼻孔都是黑的，煤油灯熏的。 近平同志讲，200斤的麻包上街，走五里路不换肩，我确实非常佩服的。因为我当兵，我在基层连队干过，我在基层连队11年，我们都看过麻包，一袋大米200斤卡，车上卸车，到了卡车边上，麻包一扛，抓住两个角，一扛200斤能扛起来，但一走路飘飘欲仙，你重心上移，上面很重，一走路就跟喝醉一样，很难保持平衡。我们走一小段，扛到我们连队的仓库里就行了。近平同志扛200斤的麻包走五里路不换肩。 什么叫初心？初心不是理论问题，你吃过这样苦没有？我们在开这个会的时候，近平同志一个一个问，在基层干过没有？在一线干过没有？你们这些单位现在还到西藏去吗？到西藏代职去多长时间？ 毛泽东最反对的三门干部：出家门进校门，出校门进机关门。近平同志讲，一定要接地气，为什么？这个地气就是初心。我今年9月从延安回来，在延安北京知青纪念馆，看见了近平同志、王岐山同志在延安插队的照片，近平同志在里面大约四五幅照片，王岐山同志在里面有四五幅照片，他们在延安获得了巨大的能量，对中国最基层的了解，对中国的老百姓受的苦难了解。 最初延安插队3万多人，最后剩下几个，近平同志剩到最后，延安北京知青纪念馆放了这么一个匾牌，近平同志写的： 15岁来到黄土地时，我迷惘、彷徨；22岁离开黄土地时，我已经有着坚定的人生目标，充满自信。作为一个人民公仆，陕北高原是我的根，因为这里培养出了我不变的信念：要为人民做实事! 近平同志就凭这一点跨越别人给他形容所谓三座大山。为什么呢？更大的层面，我是黄土地的儿子，要为这块土地，要为人民做实事。这就是我们今天讲的不忘初心，方得始终。这就是近平同志，今天你看18届中央19届中央我们提的新时代，什么叫新时代？你看我们的变革力度，你看我们的反腐力度，你看我们的更新力度，这种力度决定了发源于哪里，就是初心，就凭初心，一定要为土地人民做出一些像样的事情。 我们从今天看，当今世界190多个主权国家 国民生产总值超过10万亿美元的只有两个，第一，美国174200亿，第二中国十点五万亿； 当今世界所有主权国家国防开支超过一千亿美元的只有两个，第一，美国五千九百亿，第二中国，一千五百亿； 当今世界卫星数量超过140颗的只有两个，第一，美国530颗，数量不断的减少，第二中国198颗，我马上200颗300颗； 两个国家国土面积都差不多，都是960万； 人口我们比他多，他是我们的零头3.21，我们13.6亿； 武装部队他140万，我们200万，注定了世界未来这两个主角。 美国长期扮演主角，你不让他扮演主角，他的难受，他厉害是主角，他无法扮演配角，我们没有扮演过主角。我们今后要扮演主角，我们不仅是为这个，我们一定要为未来的这种文明在世界上的地位，你国家民族要做好准备，不仅是文化自信的问题，一种文明的复兴，你这文明在世界上担当一个引领的角色，包括我们召开的一带一路的会议，我觉得近平同志在一带一路会上讲得到很好的话。一带一路过去是流淌着蜜和奶的地方，这是圣经上说的。今天是什么地方？充满着战乱纷争冲突，难民流离失所，恐怖主义，满目疮痍。我们中国人的一带一路要使这些今天变成战乱难民流离失所地方重新繁荣富强文明，人们追求幸福，我觉得这是中国应该对世界带来的更大贡献。 不仅为中国人民，就像十九大报告讲的讲，中国共产党是为中国人民谋幸福的政党，也是为人类进步事业而奋斗的政党。中国共产党始终把为人类做新的更大贡献作为自己的使命。 我最后以这句话作为今天这个是十分钟讲话的小结，近平同志在十九大上讲的： 站立在960万平方公里的广袤土地上，吸吮着中华民族漫长奋斗积累的文化养分，拥有13亿中国人民聚合的磅礴之力，我们走自己的路，具有无比广阔的舞台，具有无比深厚的历史底蕴，具有无比强大的前进定力。]]></content>
      <categories>
        <category>笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Dairy: 2018-05-09]]></title>
    <url>%2F2018%2F05%2F10%2Fdairy-2018-05-09%2F</url>
    <content type="text"><![CDATA[photo by Andrew Neel 一日之事 找到了个用法很简单的图床：极简图床 默写了《要讲究领导艺术》 晚上去看了伯伯，他股骨摔倒了，躺床上看着很痛苦 中午去了一趟东安 一日之失 没有练字 待办事项金一南：不忘初心，方得始终腾讯视频youtube]]></content>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[开会的方法]]></title>
    <url>%2F2018%2F05%2F09%2F%E5%BC%80%E4%BC%9A%E7%9A%84%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[为什么要开会开会是党委政府研究部署和落实各项工作不可或缺的一个重要手段和重要环节。毛泽东同志在《党委会的工作方法》一文中曾指出 “有了问题就开会，摆到桌面上来讨论，规定它几条，问题就解决了。” 可以说，一个会议开好了，统一了思想，找到了问题的症结，就能为最终解决问题、推动这项工作打下坚实基础。 存在的问题现在，一些地方和部门会议开得多，但会议的效果和质量却不高。久而久之，连一些专题会议、现场办公会议也格式化、套路化了。 会场上，大家成绩说得多、问题讲得少；道理谈得多、措施讲得少；困难提得多，办法讲得少。 如果对本单位、本部门存在的问题不够重视，也没有去认真调查研究，提不出解决问题的办法，这不仅不能推动工作，反而会影响甚至妨碍工作的推进。 之所以出现这种情况，表面看是一些部门害怕在领导面前暴露短处、怕给自己惹麻烦、缺乏解决问题的办法和手段，实质上还是工作作风不实、工作方法不精准造成的。 如何解决习近平总书记说， 中国共产党人干革命、搞建设、抓改革，从来都是为了解决中国的现实问题。 近年来，正是因为我们坚持敢于直面问题，不回避、不遮掩，出实招、破瓶颈，从而逐步推动解决改革发展稳定中的突出问题。 我们开会研究部署某项工作，也要坚持问题导向和工作导向相统一，瞄着问题去、追着问题走，实打实、硬碰硬，遇到问题不遮掩、说起困难不回避、针对问题有办法，以解决问题、推动工作的实际成效彰显责任担当、体现能力水平。 这既是我们转变会风和工作作风的内在要求，也是广大人民群众的呼声。 via]]></content>
      <tags>
        <tag>背诵</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Dairy: 2018-05-08]]></title>
    <url>%2F2018%2F05%2F08%2Fdairy-2018-05-08%2F</url>
    <content type="text"><![CDATA[photo by Andrew Neel 一日之事今天默写了《五种崇高情感》，居然没有出什么大问题。如果每天每篇文章都默写，无疑要消耗掉大量的时间，且效果较少，因为总有一些不是很关键的字句会出错；但是不写肯定也是不行的，好记性不如烂笔头。所以采用每天默写一篇，其他的通过键盘敲入的方式来解决。并且每天还需要增加其他的内容，诸如： 每天要增加新的背诵内容（今天看到微信公众号“湘伴”上有关于调研的文章） 要整理出素材，自己没有机会去调研，就只能通过网站新闻、评论文章来收集素材了。多收集素材，力争”秀才不出门，也只天下事” 今天继续看《毛选（一）》，经过这些天高强度的阅读、背诵，对“文以载道”的理解深了一点。写文章就是讲道理，首先要根据一定的事实材料来写，真是材料来源于自己的体验或阅读、思考后的材料；其次要提炼出事实材料所反映出的本质问题、规律性的东西,将丰富的感性材料加以去除取精、去伪存真，由此及彼，由表及里；再次，要提出切实可行的解决办法，这里也要注意讲述方法、文采等。 还看了一小部分的关于练字的书，只是粗看，该书提出了一些很多关于如何写字的原理性的东西，等提取后再予总结。 一日之失今天玩《暗黑破坏神3》不知不觉近2个小时，本来想着是把第一章玩完就回家了，却不知不觉玩到了第二章，自控力还是差了点。 练字只练了半页纸，心静不下来。]]></content>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 攻略]]></title>
    <url>%2F2018%2F05%2F07%2FHexo-practice%2F</url>
    <content type="text"><![CDATA[本文是我在使用hexo的过程中为了解决具体问题而找到的解决方式，如果别人已经有现成的解决方案，我会直接放链接，如果没有现成而我又找到了优雅的解决方案，会贴上我的。 添加分类及标签链接： 添加分类及标签 插入音乐/视频链接： 插入音乐/视频 TODO [ ] all articles the next theme offers]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Dairy: 2018-05-06]]></title>
    <url>%2F2018%2F05%2F06%2Fdairy-2018-05-06%2F</url>
    <content type="text"><![CDATA[photo by shttefan 一日之事 打乒乓球1个半小时 练字：【一】【十】【四】【得】，“四”“得”二字写的还不是很好，没有掌握规律 看书：《毛泽东选集（第一卷）》，看了： 中国社会各阶层的分析 湖南农民运动考察报告 中国的红色政权为什么能够存在 井冈山的斗争 关于纠正党内的错误思想 星星之火，可以燎原 看了《北京大学的鸿鹄与我的“老官”》一文，文章挺现任北大校长林建华，认为其是改革派，对其非议缘于其改革触动了部分人的利益 更新了《之江新语》的8篇文章，基本都是自己能够背诵的了，还插入了音频，方便戴上耳机听]]></content>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[要讲究领导艺术]]></title>
    <url>%2F2018%2F05%2F06%2F%E8%A6%81%E8%AE%B2%E7%A9%B6%E9%A2%86%E5%AF%BC%E8%89%BA%E6%9C%AF%2F</url>
    <content type="text"><![CDATA[var ap = new APlayer({ element: document.getElementById("aplayer-PLCLoFFJ"), narrow: false, autoplay: false, showlrc: false, music: { title: "要讲究领导艺术", author: "之江新语", url: "http://222.245.77.82/flv1.gmw.cn/gmw/videoroot/2015-07-17/1437106406439.mp3", pic: "", lrc: "" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 一个高明的领导，讲究领导艺术，知关节，得要领，把握规律，掌握节奏，举重若轻。 在日常工作中，有三类干部： 第一类，眼光敏锐，见微知著，“为之于未有，治之于未乱”，防患于未然，化解于无形，开展工作有板有眼，纵横捭阖，张弛有度，“谈笑间，樯橹灰飞烟灭”，这是领导艺术的最高境界。 第二类，工作勤勤恳恳、忙忙碌碌、夜以继日，天天加班加点，虽然工作的预见性、敏感性不足，但问题暴露后，尚能及时采取措施，妥善加以解决。虽不能举重若轻而显得举轻若重，但“勤能补拙”，仍不失为勤政的干部。 第三类，见事迟，反应慢，发现不了问题，出了问题后，或手足无措，或麻木不仁。 我们每一个领导干部，都要努力学习，加强实践，不断提高领导水平，力求最高境界，力戒第三种情况。 - 音频来源- 文本来源：《之江新语》]]></content>
      <categories>
        <category>之江新语</category>
      </categories>
      <tags>
        <tag>背诵</tag>
        <tag>之江新语</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搞试点要“大胆设想小心求证”]]></title>
    <url>%2F2018%2F05%2F06%2F%E6%90%9E%E8%AF%95%E7%82%B9%E8%A6%81%E2%80%9C%E5%A4%A7%E8%83%86%E8%AE%BE%E6%83%B3%E5%B0%8F%E5%BF%83%E6%B1%82%E8%AF%81%E2%80%9D%2F</url>
    <content type="text"><![CDATA[var ap = new APlayer({ element: document.getElementById("aplayer-PXDJgVxM"), narrow: false, autoplay: false, showlrc: false, music: { title: "搞试点要“大胆设想小心求证”", author: "之江新语", url: "http://183.214.1.67/flv1.gmw.cn/gmw/videoroot/2015-07-17/1437102329342.mp3", pic: "", lrc: "" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 我们在各项改革中，经常通过试点的方法，取得若干经验后再推广。 既然是做试点工作，前人没有做过，就要有“敢为天下先”的精神，解放思想，大胆地闯，大胆地试，怎么有利于发展就怎么改革； 就是要超越原有的体制，从根本上冲破束缚发展的桎梏。 做好试点工作，在“大胆设想”的同时，还要“小心求证”。 要讲究策略，注意方法，力求水到渠成。 要坚持点上试验，面上推广，先易后难，先浅后深，因地制宜，不搞一刀切，不求齐步走。 在先行的试点中要鼓励成功，宽容失败，纠正失误，注意保护好干部群众的改革热情； 在全面推进时则要以成熟的经验引路，避免反复，减少失误， 尽可能把改革的风险和代价降到最低限度。 同时，要注意把改革的力度与人民群众可承受的程度结合起来，加强思想政治工作，完善各项配套措施，做到积极稳妥，统筹兼顾，保证改革顺利进行。 - 音频来源- 文本来源：《之江新语》]]></content>
      <categories>
        <category>之江新语</category>
      </categories>
      <tags>
        <tag>背诵</tag>
        <tag>之江新语</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[树立五种崇高情感]]></title>
    <url>%2F2018%2F05%2F06%2F%E6%A0%91%E7%AB%8B%E4%BA%94%E7%A7%8D%E5%B4%87%E9%AB%98%E6%83%85%E6%84%9F%2F</url>
    <content type="text"><![CDATA[var ap = new APlayer({ element: document.getElementById("aplayer-YQYqdrYV"), narrow: false, autoplay: false, showlrc: false, music: { title: "大事讲原则，小事讲风格", author: "之江新语", url: "http://183.214.140.171/flv1.gmw.cn/gmw/videoroot/2015-07-17/1437098897623.mp3", pic: "", lrc: "" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 胡锦涛同志多次要求广大党员干部做到权为民所用、情为民所系、利为民所谋。情为民所系是基础，不能做到情为民所系，手中的权就难以真正为民所用，也就难以真正做到利为民所谋。 要做到情为民所系，就要以党的先进人物为榜样，培养和增强对人民群众的深厚感情，学习和树立五种崇高的情感。 一要学习邓小平同志的情怀感。他说：“我是中国人民的儿子，我深情地爱着我的祖国和人民。” 二要学习雷锋同志的幸福感。他虽然只活了二十二年，但他说：“什么是幸福？为人民服务是最大的幸福。” 三要学习孔繁森同志的境界感。他有一句名言：“爱的最高境界就是爱人民。” 四要学习郑培民同志的责任感。他始终把“做官先做人，万事民为先”作为自己的行为准则。 五要学习钱学森同志的光荣感。他把群众的口碑当作自己无上的光荣。 只有学习和树立这五种崇高的情感，才能心里装着群众，凡事想着群众，工作依靠群众，一切为了群众，切实解决好“相信谁、依靠谁、为了谁”的根本政治问题，努力为人民掌好权、用好权。 - 音频来源- 文本来源：《之江新语》]]></content>
      <categories>
        <category>之江新语</category>
      </categories>
      <tags>
        <tag>背诵</tag>
        <tag>之江新语</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大事讲原则，小事讲风格]]></title>
    <url>%2F2018%2F05%2F06%2F%E5%A4%A7%E4%BA%8B%E8%AE%B2%E5%8E%9F%E5%88%99%EF%BC%8C%E5%B0%8F%E4%BA%8B%E8%AE%B2%E9%A3%8E%E6%A0%BC%2F</url>
    <content type="text"><![CDATA[var ap = new APlayer({ element: document.getElementById("aplayer-pQSzVgzb"), narrow: false, autoplay: false, showlrc: false, music: { title: "大事讲原则，小事讲风格", author: "之江新语", url: "http://183.214.140.171/flv1.gmw.cn/gmw/videoroot/2015-07-17/1437099147739.mp3", pic: "", lrc: "" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 我们平时常讲团结就是力量，团结出凝聚力、出战斗力、也出干部，这说明团结是何等的重要。 其实，团结是班子建设的重要问题，讲团结是讲政治、顾大局的表现。 加强团结，“一把手”要负主要责任，应以身作则，严格要求， 善于抓方向、议大事、管全局， 善于团结各方面同志包括与不同意见的同志一道工作， 善于充分调动班子成员的积极性、主动性和创造性， 真正做到发扬民主，集思广益，科学决策，防止和克服独断专行、软弱涣散和各行其是。 每个领导干部都要正确对待自己，正确对待同志，正确对待组织，对有些事要拿得起、放得下，豁达一些，做到严于律己，宽以待人，大事讲原则，小事讲风格，在合作共事中加深了解，在相互支持中增进团结，形成领导班子的整体合力。 - 音频来源- 文本来源：《之江新语》]]></content>
      <categories>
        <category>之江新语</category>
      </categories>
      <tags>
        <tag>背诵</tag>
        <tag>之江新语</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[理论学习要有三种境界]]></title>
    <url>%2F2018%2F05%2F06%2F%E7%90%86%E8%AE%BA%E5%AD%A6%E4%B9%A0%E8%A6%81%E6%9C%89%E4%B8%89%E7%A7%8D%E5%A2%83%E7%95%8C%2F</url>
    <content type="text"><![CDATA[var ap = new APlayer({ element: document.getElementById("aplayer-KIyafFEp"), narrow: false, autoplay: false, showlrc: false, music: { title: "理论学习要有三种境界", author: "之江新语", url: "http://183.214.1.65/flv1.gmw.cn/gmw/videoroot/2015-07-20/1437374119412.mp3", pic: "", lrc: "" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 著名学者王国维论述治学有三种境界： 一是“昨夜西风凋碧树，独上高楼，望尽天涯路”； 二是“衣带渐宽终不悔，为伊消得人憔悴”； 三是“众里寻他千百度，蓦然回首，那人却在灯火阑珊处”。 领导干部学习理论也要有这三种境界。 首先，理论学习上要有“望尽天涯路”那样志存高远的追求，耐得住“昨夜西风凋碧树”的清冷和“独上高褛”的寂寞，静下心来通读苦读； 其次，理论学习上要勤奋努力，刻苦钻研，舍得付出，百折不挠，下真功夫、苦功夫、细功夫，即使是“衣带渐宽”也“终不悔”，“人憔悴”也心甘情愿； 再次，理论学习贵在独立思考，学用结合，学有所悟，用有所得，要在学习和实践中“众里寻他千百度”，最终“蓦然回首”，在“灯火阑珊处”领悟真谛。 只有这样，各级领导干部才能做到带头学、深人学、持久学，成为勤奋学习、善于思考的模范，解放思想、与时倶进的模范，学以致用、用有所成的模范。 - 音频来源- 文本来源：《之江新语》]]></content>
      <categories>
        <category>之江新语</category>
      </categories>
      <tags>
        <tag>背诵</tag>
        <tag>之江新语</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[把帮扶困难群众放到更突出的位置]]></title>
    <url>%2F2018%2F05%2F06%2F%E6%8A%8A%E5%B8%AE%E6%89%B6%E5%9B%B0%E9%9A%BE%E7%BE%A4%E4%BC%97%E6%94%BE%E5%88%B0%E6%9B%B4%E7%AA%81%E5%87%BA%E7%9A%84%E4%BD%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[var ap = new APlayer({ element: document.getElementById("aplayer-UiesTStI"), narrow: false, autoplay: false, showlrc: false, music: { title: "把帮扶困难群众放到更突出的位置", author: "之江新语", url: "http://183.214.1.67/flv1.gmw.cn/gmw/videoroot/2015-07-17/1437098223920.mp3", pic: "", lrc: "" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 浙江经济社会发展到现阶段，按照全面建设小康社会的要求，我们应该把帮助群众解决实际困难，特别是帮扶城乡困难群众放到更为突出的位置。 坚持执政为民，全心全意为人民服务，是人民公仆的天职。我们要把帮扶工作看做是分内的事。做好帮扶工作，关键是各级领导的心中要时刻装着群众。有的县每年从省里拿到的财政转移支付有几千万元，却拿不出几十万元的低保金。如果对群众有感情的话，这些钱是拿得出来的，也是应该拿出来的。 帮助群众特别是困难群众解决各类实际问题，除了要不断完善面向全社会的各类社会保障制度外，还要建立面对困难群体的长效帮扶机制。在财政支出上，各地一定要突出重点，优先保证农村教师工资、城乡居民最低生活保障、农民大病统筹、“五保”对象集中供养、困难家庭子女就学救助等与群众利益密切相关的支出。 - 音频来源- 文本来源：《之江新语》]]></content>
      <categories>
        <category>之江新语</category>
      </categories>
      <tags>
        <tag>背诵</tag>
        <tag>之江新语</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[调研工作务求“深、实、细、准、效”]]></title>
    <url>%2F2018%2F05%2F06%2F%E8%B0%83%E7%A0%94%E5%B7%A5%E4%BD%9C%E5%8A%A1%E6%B1%82%E2%80%9C%E6%B7%B1%E3%80%81%E5%AE%9E%E3%80%81%E7%BB%86%E3%80%81%E5%87%86%E3%80%81%E6%95%88%E2%80%9D%2F</url>
    <content type="text"><![CDATA[var ap = new APlayer({ element: document.getElementById("aplayer-AWgTpDQi"), narrow: false, autoplay: false, showlrc: false, music: { title: "调研工作务求“深、实、细、准、效”", author: "之江新语", url: "http://183.214.140.172/flv1.gmw.cn/gmw/videoroot/2015-07-24/1437710383033.mp3", pic: "", lrc: "" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 现在全省上下大兴调査研究之风，各级领导干部在调研工作中，一定要保持求真务实的作风，努力在求深、求实、求细、求准、求效上下工夫。 “深”，就是要深入群众，深入基层，善于与工人、农民、知识分子和社会各界人士交朋友，到田间、厂矿、群众和社会各层面中去解决问题。 “实”，就是作风要实，做到轻车简从，简化公务接待，真正做到听实话、摸实情、办实事。 “细”，就是要认真听取各方面的意见，深入分析问题，掌握全面情况。 “准”，就是不仅要全面深入细致地了解实际情况，更要善于分析矛盾、发现问题，透过现象看本质，把握规律性的东西。 “效”，就是提出解决问题的办法要切实可行，制定的政策措施要有较强操作性，做到出实招，见实效。 - 音频来源- 文本来源：《之江新语》]]></content>
      <categories>
        <category>之江新语</category>
      </categories>
      <tags>
        <tag>背诵</tag>
        <tag>之江新语</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[干部不能在“温室”中培养]]></title>
    <url>%2F2018%2F05%2F06%2F%E5%B9%B2%E9%83%A8%E4%B8%8D%E8%83%BD%E5%9C%A8%E2%80%9C%E6%B8%A9%E5%AE%A4%E2%80%9D%E4%B8%AD%E5%9F%B9%E5%85%BB%2F</url>
    <content type="text"><![CDATA[var ap = new APlayer({ element: document.getElementById("aplayer-RkFJKrPD"), narrow: false, autoplay: false, showlrc: false, music: { title: "干部不能在“温室”中培养", author: "之江新语", url: "http://183.214.140.173/flv1.gmw.cn/gmw/videoroot/2015-07-24/1437710374474.mp3", pic: "", lrc: "" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 现在在一些地方，有的干部被列为后备干部、成为培养的“苗子”后，组织上就很愿意为他设好“台阶”，铺好“路子”，而恰恰忽略了把他放到艰苦的岗位上去磨炼；如果组织上真的把他放到艰苦的岗位上，他本人往往认为是对他的不信任。这其实是干部培养工作的一大误区。 好钢要用在刀刃上，“千里马”要在大风大浪中经受考验，后备干部不能放在“温室”里去刻意培养。“天将降大任于斯人也”，必先以磨难历练他，这样才能“增益其所不能”。不经历风雨，怎能见彩虹？ 选“千里马”，要在竞赛中挑选。对后备干部要注重在艰苦岗位、复杂的环境中去锻炼、识别。铺“路子”不如压“担子”，这才是培养干部的好办法。 - 音频来源- 文本来源：《之江新语》]]></content>
      <categories>
        <category>之江新语</category>
      </categories>
      <tags>
        <tag>背诵</tag>
        <tag>之江新语</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[执着追梦]]></title>
    <url>%2F2018%2F05%2F06%2F%E6%89%A7%E7%9D%80%E8%BF%BD%E6%A2%A6%2F</url>
    <content type="text"><![CDATA[本文发布于《远程教育》杂志 时尚干练、落落大方，张凌云的身上散发着都市白领的知性美。初见其人，你怎么也不会把她和养猪这个事联系在一起。2011年，张凌云大学毕业后，原本可以留在大城市，找一份稳定的工作，过上朝九晚五的城市上班族生活，但她却选择回到家乡陕西省凤翔县陈村镇槐北村创办养殖场，当起了一名“职业农民”。 从城市回到农村，从大学生变成农民，在很多人眼里，张凌云的这个决定简直是疯了，她也因此成了大家口中那个“没出息的孩子”。但张凌云却认定了农村也是展示青春的舞台，要在这方天地里实现人生的价值。 初涉养殖行业，光靠一分闯劲远远不够。生产流程、免疫防疫、企业管理……课本上从未接触过的新名词如秋日落叶般纷纷飘到张凌云面前。那一刻她才知道，理论与实践的距离究竟有多远。为了学习养殖技术，每天天刚亮她就穿着工作服走进猪圈，向兽医和饲养员请教技术知识，在猪圈一待就是几个小时，晚上回到家接着捧起书本挑灯夜读。几年的努力下来，她的养殖场已经出具规模，张凌云也从一个“门外汉”一步一步变成了”猪状元。 事业的小有所成没有让张凌云停下创新求索的脚步。2013年，她决定走可持续发展的循环农业之路，改变传统农业依赖资源消耗带来的环境污染的问题，发展“循环农业”。结合淮北村养殖实际状况，她建立了宝鸡神农农业科技有限公司，以种养结合、生态平衡为发展理念，以生猪养殖、设施蔬菜种植为主线，以增加农民收入为目标，建成年出栏1万头的生猪养殖基地一个、280亩的设施蔬菜基地一个、年产1万吨的生物有机肥加工中心一座、700立方的大型沼气池一座，形成了”菜-饲-畜-沼-肥”五位一体的农业循环模式，为了带领当地农民脱贫致富，她还采用“公司+基地+农户”的模式，安置就业、帮扶创业，扶持贫困户88户，安置24名贫困户就业，带动18户贫困户自主创业。现在的淮北村，家家户户都用上了沼气，逢年过节农户们还都能收到张凌云赠送的瓜果蔬菜。 功夫不负有心人，靠着辛勤的付出和执着的求索，张凌云终于打拼出了一片属于自己的天地。2017年，她当选为陕西省第十三次党代会代表，并获得“国家级职业农民”、陕西省“十佳职业农民”荣誉称号。她创办的宝鸡神农农业科技有限公司也被授予”全国巾帼农业创业示范基地““山西省女大学生创业基地”等称号。 在张凌云的工作笔记上，记者这样一段话“天地之间第一等人，只有农夫。农夫苦其身，勤其力，耕种收获，以养天下之人。使天下无一农夫，举世皆饿死矣。”如今已经是陕西宝鸡神农农业科技有限公司法人代表兼公司党支部书记的张凌云，更加自信成熟，更加睿智果敢，正向着她心中的“大农业梦”阔步前行。]]></content>
      <tags>
        <tag>背诵</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Cordora]]></title>
    <url>%2F2018%2F05%2F04%2FCordora%2F</url>
    <content type="text"><![CDATA[根据 创建你的第一个App 整理 安装codoranpm install -g cordova 创建第一个项目cordova create hello com.example.hello HelloWorld 添加iOS和Android平台1234cd hellocordova platform add ios --savecordova platform add android --savecordova platform ls 安装构建先决条件检测： cordova requirements 安装JDK12345sudo add-apt-repository ppa:openjdk-r/ppasudo apt-get updatesudo apt-get install openjdk-8-jdksudo apt-get install openjdk-8-jresudo apt-get install openjdk-8-source #this is optional, the jdk source code 安装Android SDK方法一（待尝试）1sudo apt-get install android-tools-adb 方法二（尝试中）12345678910111213141516171819202122# download android sdkwget http://dl.google.com/android/android-sdk_r24.2-linux.tgztar -xvf android-sdk_r24.2-linux.tgzcd android-sdk-linux/tools# install all sdk packages./android update sdk --no-ui# set path(wether )vi ~/.zshrc &lt;&lt; EOTexport PATH=$&#123;PATH&#125;:$HOME/workspace/hello/android-sdk-linux/platform-tools:$HOME/workspace/hello/android-sdk-linux/tools:$HOME/workspace/hello/android-sdk-linux/build-tools/23.0.1/EOTsource ~/.zshrc# adbsudo apt-get install libc6:i386 libstdc++6:i386# aaptsudo apt-get install zlib1g:i386 方法三12sudo apt-get install ubuntu-makeumake android]]></content>
  </entry>
  <entry>
    <title><![CDATA[看了这些才知道什么是新时代的好标题]]></title>
    <url>%2F2018%2F05%2F03%2F%E7%9C%8B%E4%BA%86%E8%BF%99%E4%BA%9B%E6%89%8D%E7%9F%A5%E9%81%93%E4%BB%80%E4%B9%88%E6%98%AF%E6%96%B0%E6%97%B6%E4%BB%A3%E7%9A%84%E5%A5%BD%E6%A0%87%E9%A2%98%2F</url>
    <content type="text"><![CDATA[本文根据 新闻与写作 整理完成。 俗话说：“题好一半文”。“人要衣装，文要题装”。可见题目的重要性。本文为《人民日报》2017年的好标题，供你我参考。 口语化体现人情味 “习总书记办的，都是俺们盼的”——山东沂蒙山区听民声 通过朴实的情感流露，真实生动地传递出老区干部群众对习总书记的衷心爱戴和拥护，同时也反映了人民群众对全面建成小康社会、建设社会主义现代化强国的信心和决心 一个东北农民的种植转型记 再见，玉米 你好，蔬菜 叙述式的引题写实，点出种植转型这一关键词；拟人化的主题简明直白，表明种植转型内容；口语化的表达活泼亲切、通俗易懂 让企业不再“抱着水缸喊渴” 文章针对我国劳动力资源丰富，企业却技工难求这一矛盾 行李箱再大，也装不下一个家 象征着离家远行的行李箱空间再大，都装不下远行人对家的思念与依恋 口语化不是普通大白话一是语感强，对称美 劳动致富这条路，不怕苦，就怕堵 道出了劳动者们坚忍不拔、希望靠双手奋斗出幸福生活的决心和信心，也揭示出目前有些地方由于社会管理不当，人为阻滞百姓劳动致富的现实 历史怎么假设都不如现实这般精彩 文章批驳一些人通过假设历史来否定我们党带领人民取得的伟大成就、否定我们现在正在走的道路 不怕你了解，就怕你不了解 为海外读者搭建多渠道了解中国的平台，通过外国青年的真实感受，反映现代中国的巨变和影响力 二是语意丰，有理趣 一辈子都在琢磨云的脾气 主题采用拟人化手法，将对风云变化的研究比喻成“琢磨云的脾气” 银证保都姓“监” 把银监会、证监会、保监会中间的“监”字抽出来，突出了三大金融监管部门的作用和职能 口语化要有时代感 税费“红包”激活经济“细胞” 解读税费红利对经济新常态的重要意义 纠四风：变“人来看”为“云在算” 科技为监督工作带来的新变化&gt;]]></content>
      <tags>
        <tag>背诵</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo Cheetsheet]]></title>
    <url>%2F2018%2F05%2F03%2Fhexo-cheetsheet%2F</url>
    <content type="text"><![CDATA[安装前提 Node.js Git 安装Node.js最好使用NVM进行安装 curl安装NVM： curl https://raw.github.com/creationix/nvm/master/install.sh | sh wget安装NVM： wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh NVM安装Node.js： nvm install stable 安装cnpm： npm install -g cnpm --registry=https://registry.npm.taobao.org 安装Hexocnpm install -g hexo-cli 初始化 初始化： `hexo init ; cd ; cnpm install 新建文章： hexo new [layout] &lt;article&gt; 生成静态文件： hexo generate 或 hexo g 发布草稿： hexo publish [layout] &lt;filename&gt; 启动预览服务器： hexo server, 默认情况下，访问 http://localhost:4000/ 部署网站： hexo deploy 或 hexo d TODO 学习layout的三种布局：post，page，draft 写草稿文章，发布草稿（hexo new draft &lt;title&gt;; hexo publish &lt;title&gt;）]]></content>
  </entry>
  <entry>
    <title><![CDATA[新时代 面对面]]></title>
    <url>%2F2018%2F05%2F02%2F%E6%96%B0%E6%97%B6%E4%BB%A3-%E9%9D%A2%E5%AF%B9%E9%9D%A2%2F</url>
    <content type="text"><![CDATA[目录 如椽巨笔著华章 阔步迈入新世代 吹尽黄沙始到金 万山磅礴看主峰 弄潮儿向涛头立 直挂云帆济沧海 跨越关口上新阶 人间正道是沧桑 凝心聚气铸国魂 一枝一叶总关情 青山绿水共为邻 万紫千红春满园 只留清气满乾坤 第一章历史的航道上，总有一些重要的节点，犹如高高耸立的灯塔，指引着历史前行的方向。 回首来路时，苦难辉煌、砥砺前行；展望新征程，路险且阻，任重道远。 无论……还是……都要用更高质量的发展来实现 惟改革者进，惟鼎新者强。 沧海横流，方显英雄本色。 ……不是从天上掉下来的，而是在改革开放40年的伟大实践中得来的。 我国社会的主要矛盾已经转化为人民日益增长的美好生活需要同不平衡不充分的发展之间的矛盾。 时代是出卷人，我们是答卷人，人民是阅卷人。 凡事思所以然，天下第一学问。 第三章“木桶原理”告诉我们，一个木桶如果有短板就装不满水，但木桶底部有漏洞就装不下水。我们既要善于分析补齐短板，更要注重加固底板。 第四章 新世情呼唤新方案 新事业呼唤新指南 新工程呼唤新引领 时代是思想之母，实践是理论之源。 第五章发端于……吸引了……矢志不渝为共产主义奋斗终生。 人民有信仰，国家有力量，民族有希望。 万水千山不忘来时路，树高千尺根深在沃土。 第七章“志不求易者成，事不避难者进” 第八章不是中国传统政治的“再版”，也不是西式民主的“翻版”，而是经过反复比较、长期探索、实践验证的“原版”。 好就好在党的领导、人民当家做主、依法治国有机统一 好就好在选举民主与协商民主完美结合 好就好在高效运行和制约监督并行不悖 第九章 自信从历史中来 自信从奋斗中来 自信从实践中来 文以载道，文以聚力 教育引导入人心 实践养成见行动 制度保障强约束 文艺创作出精品 体制改革添动能 国际传播展魅力 文化凝结着过去，文化连接着未来。 第十章改善民生只有进行时，没有完成时。 第十一章 蓝天保卫战 清水进行时 净土在行动]]></content>
  </entry>
  <entry>
    <title><![CDATA[曾国藩家书]]></title>
    <url>%2F2018%2F05%2F01%2F%E6%9B%BE%E5%9B%BD%E8%97%A9%E5%AE%B6%E4%B9%A6%2F</url>
    <content type="text"><![CDATA[这是我阅读《唐浩明评点曾国藩家书（上）》的一些笔记，此次是第二次阅读，上一次阅读还是大四的时候了，两次阅读都有良多收获。 艺多不养身，掘井多而无可饮之水。 这句话和我们常见的“艺多不压身”的意思有点相反，但其实只是两句话的重点不一致罢了。 “艺多不压身”的重点在于要多学习一些技能； “艺多不养身”的重点则在于每学一种都要学精，弥补了杂而不精的缺陷。 学习编程的时候，有一种观点————一通百通。所以，成熟的“过来人”给新人的建议都是先学通一门语言，只要一门语言通了，则学习其他语言则是水到渠成的事。 我本人从C语言入手，花了很大的精力阅读英文原版教程、《C与指针》、《C Primer》等书籍。到现在，不论是后端的C++，Java，Python，Ruty等，还是前端的Vue，JS都只要学习基本语法，逻辑上的东西都有C语言打下的基础。 后来，工作中因为给领导制作PPT，买了一本书、看了3套教程、阅读了很多篇文章、模拟了大量PPT。待到入门了之后，发现PPT这个东西不仅仅可以用来制作幻灯片，还能运用到日常工作中，如微信编辑、图片制作、网站原型设计、PS等。 上图是学习受益边际效应图，可以看到，大致分为3个阶段： 起步期：受益较快； 稳扎稳打：投入的时间较多，受益却较少； 成熟期：经过长时间的投入，终于修成正果。 在专心掘一井的过程中，最难的是稳扎稳打的阶段，起步期和成熟期都能带来很大的成就感，成就感的反馈激励着我们继续学习。在稳扎稳打期，最容易产生放弃，在这个黎明之前的黑暗期，更加要耐得住“昨夜西风凋碧树“的清冷和”独上高楼“的寂寞。 研几，认真对待细微念头、细微小事。 古人说“慎独”，讲究独处时要注意自己的言行，保持谨慎。 可是，我们的生活中哪有那么多独处的机会？更多的是要和自己的细微念头、纤维小事做斗争。 “大风起于青萍之末”、“宰相必起于州部，猛将必发于卒伍“，小事会经过“蝴蝶效应”等复杂行为放大；关键时刻的小事也会对全局产生至关重要的影响。 苟能奋发自立，则家塾可读书；苟不能奋发自立，则清静之地、神仙之境皆不能读书。 读书是不需要预设环境的。通过这句话，我发现了自己的一个缺点，总是通过预设条件来为自己寻找借口。 比如说健身，最开始说等住进新房子再办卡；现在住进来了又告诉自己等还完分期付的家电钱先；…… 如此往复，其实以前住的地方和新房离不了多远；去健身房的钱自己绝对出得起；…… 每日有课册，一日之中一念之差、一事之失、一言一默皆笔之于书。 人的记忆力是有限的，在编程的时候有很多原则，如”代码是写给别人看的，不是写给机器看的“，其实也是写给自己看的，为了防止自己一个月后再来看看不懂。通过”笔之于书“，可以让自己可以通过分析以前的”一念之差、一事之失”，来避免自己在现实中再“二过”。 写下来，和头脑风暴、绘制脑图一样，有利于深入分析，自己和自己讨论。通过探讨，透过现象看本质，挖掘隐藏着的问题本质。 自己的日志里，要加入【一念之间j】【一事之失】【一言之失】等内容。 盖士人读书，第一要有志，第二要有识、第三要有恒。有志则断不甘为下流；有识则知学问无穷，不敢一得而足；有恒则断无不成之事。 志向最重要，有志向则不断不会一点成功、一点进步就沾沾自喜、自满自溢；见识仅次于志向，见识宽广，也不会让自己沉迷于一些小事无法自拔，也明白要进取的方向；有恒心，才能坚持不断投入。这世间，投入了大量时间，不成功的事可能很多；但是没有投入时间和精力就能够成功的事，则断然没有。 主敬：整齐严肃，无时不惧；静坐：每日不拘何时，静坐一会；早起：黎明即起，醒后勿沾念；读书不二：一书未看完，断不看他书。 早起是曾国藩最推崇的，也是我想要也不可得的，先做到在来谈感悟吧。主敬，整齐严肃，是作为一个成熟的人应该有的负责人的态度。对待小事一丝不苟，对待他人负责认真、对待现状感恩珍惜，利己利人利众。静坐，我采用的是冥想，不仅可以让自己高效的休息，还能在这期间安静的思考一些问题，收益很大。读书不二，一方面也是逼着自己耐心看完一本书，我尝试过太多次的多本书翻几页就去翻另一本。俗话说，买书如山倒，看书如抽丝。看完一本再看另一本，至少还能抽丝抽完；如果不这样做，抽丝都看不完。 兄弟和，虽穷氓小户必兴；兄弟不和，虽世家宦族必败。 威仪可测，淳实宏通，师之可也；若仅博文能雅，友之可也。或师或友，皆宜常存敬畏之心，不宜视为等夷，渐至慢亵，则不能复受其益矣。 人是不可能向自己觉得可以慢亵的人学习的。 无故而怨天，天必不许；无故而尤人，人必不服。 这是少抱怨的分析，抱怨别人，别人肯定不满。 强毅与刚愎有别，古语自胜谓之强，如不惯早起而强之未明即起。不惯有恒，而强之贞恒，即毅也。 战胜自己。 是非皎然于心而一言不发，劲气常抱于胸而纤毫不露。 城府是怎样修炼的。 读书之法，看、读、写、作，四者每日不可缺一。读者，非高声朗诵则不能得其雄伟之概。写：写字；作：作文。 实践是检验真理的唯一标准，也是训练自己脑回路的唯一有效途径。要真正把学到的东西运用起来，加深理解，独立思考、学用结合、学有所悟、用有所得。 凡作一事，无论大小难易，皆宜有始有终。 每做一件事，都尽量做到最好，让自己得到正反馈。 勤做札记 遇心有疑者，将所疑提出来，随着学问提高，对疑问的认识也在提高，这个过程也可记录下来；遇有心领神会者，则记下此时阅读心得。 尔作文时，宜先将辞藻；欲求辞藻富丽，不得不分类抄撮体面话头（写好文章的关键） 提高写作水平的窍门 文章写作的一个点：构造还原历史场景，交由读者判定。]]></content>
  </entry>
  <entry>
    <title><![CDATA[VIM中为什么不能按CTRL-S]]></title>
    <url>%2F2017%2F09%2F23%2FVIM%E4%B8%AD%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E8%83%BD%E6%8C%89CTRL-S%2F</url>
    <content type="text"><![CDATA[说起CTRL-S你会想起什么？ 在几乎所有的编辑器中，CTRL-S都是保存文档： 记事本 Notepad++ Sublime Text Atom Microsoft Word/Excel … 但是在vim中，保存是输入:w，但是如果习惯性的不小心按了CTRL-S，那么恭喜你，你的Terminal将会处于“死机”状态，不信的话可以试试。这时你做的事几乎只有一件：关闭Terminal，重新再打开，以后避免不小心按到CTRL-S。 但是习惯，啧啧啧~~~~ 为什么CTRL-S会这么麻烦如果知道vim按键帮助的话，输入help ctrl-s可以查看这个组合键的帮助信息，如下： 从上图可以看到，解释为CTRL-S会阻塞所有的输入，解决方式为CTRL-Q。 其实不是vim的锅，而是terminal的过 从上图可以看到： CTRL-S为Terminal的组合键，在Terminal中，其用途是停止所有的输出。再加上在vim中的停止输入，这个作用力…. CTRL-Q就是撤销CTRL-S的组合键。]]></content>
      <tags>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Django Cheat Sheet]]></title>
    <url>%2F2017%2F08%2F28%2Fdjango-cheat-sheet%2F</url>
    <content type="text"><![CDATA[This is a cheat sheet or minimal tutorial of django. Preparingsudo -H pip install django And check django version is: python -m django --version First stepstart a django project by: django-admin startproject mysiterun the project by: python manage.py runserverthe default port is 8000, if want to run on a different port,The command is: python manage.py runserver 8080 the command to create a app is: python manage.py startapps polls Cheat sheet on appspolls/views.py manage the view codes;polls/urls.py manage the router codesmysite/urls.py manage global router. Cheat sheet on databasepython manage.py migrate will apply database changes of apps registerd in INSTALLED_APPS, which defined in mysite/settings.pypython mangage.py makemigrations polls will notify django than the database of this app is changed. Cheat seet on shellpython manage.py shell will preparing a shell environement of the django environment Otherif want apps managed by the django backend, need to register it in apps/admin.py]]></content>
  </entry>
  <entry>
    <title><![CDATA[为什么越花钱越有钱]]></title>
    <url>%2F2017%2F06%2F27%2F%E4%B8%BA%E4%BB%80%E4%B9%88%E8%B6%8A%E8%8A%B1%E9%92%B1%E8%B6%8A%E6%9C%89%E9%92%B1%2F</url>
    <content type="text"><![CDATA[生活中的现象 从小就花钱大手大脚的人，长大了依旧大手大脚 付钱往后躲的人，长大后生活依旧拮据 那么 是先有铺张浪费的习惯才变得有钱？ 还是先有钱才适合铺张浪费呢？ 本质是思维方式不同富人思维：对于喜欢的东西是——我如何才能买得到它？他们想的是如何赚钱，越想，点子、路子、方法就越多。赚钱的概念要覆盖省钱的概念。 从宇宙能量来考虑我们内心长久向往什么，能量就会实现什么——宇宙的吸引力法则。]]></content>
  </entry>
  <entry>
    <title><![CDATA[Django Set Language to Chinese]]></title>
    <url>%2F2017%2F06%2F17%2Fdjango-set-language-to-chinese%2F</url>
    <content type="text"><![CDATA[Django生成的框架默认为英文的，如何更改语言为中文。Django框架支持中文，需要在设置里进行配置，配置如下：找到工程目录下的setting.py，修改LANGUAGE_ZONE和TIME_ZONE如下：12LANGUAGE_CODE = 'zh-hans'TIME_ZONE = 'Asia/Shanghai']]></content>
  </entry>
  <entry>
    <title><![CDATA[Sublime Convert Tab to 4 Spaces]]></title>
    <url>%2F2017%2F06%2F17%2Fsublime-convert-tab-to-4-spaces%2F</url>
    <content type="text"><![CDATA[sublime默认缩紧会使用tab进行缩紧，但是大部分编程语言规范都不允许tab的出现。设置sublime自动替换tab为4个space的配置过程如下：1.打开preferences/settings.2.在左侧找到“tab_size”: ,“translate_tabs_to_spaces”:,3.复制到右边。并设置“tab_size”:4 ,“translate_tabs_to_spaces”:true,]]></content>
  </entry>
  <entry>
    <title><![CDATA[Git Proxy]]></title>
    <url>%2F2017%2F06%2F17%2FGit-proxy%2F</url>
    <content type="text"><![CDATA[当我在Linux下设置shadowsocket代理时，用Git进行联网操作时总提示没有设置正确的proxy。解决方式为为Git设置全局代理，配置命令如下：1234git config --global https.proxy http://127.0.0.1:1080git config --global https.proxy https://127.0.0.1:1080git config --global http.proxy &apos;socks5://127.0.0.1:1080&apos;git config --global https.proxy &apos;socks5://127.0.0.1:1080&apos; 取消设置的命令好像如下，先记着：123git config --global --unset http.proxygit config --global --unset https.proxynpm config delete proxy]]></content>
  </entry>
  <entry>
    <title><![CDATA[疯狂人类进化史:女人为什么比男人漂亮]]></title>
    <url>%2F2017%2F05%2F25%2F%E7%96%AF%E7%8B%82%E4%BA%BA%E7%B1%BB%E8%BF%9B%E5%8C%96%E5%8F%B2-%E5%A5%B3%E4%BA%BA%E4%B8%BA%E4%BB%80%E4%B9%88%E6%AF%94%E7%94%B7%E4%BA%BA%E6%BC%82%E4%BA%AE%2F</url>
    <content type="text"><![CDATA[动物界中，雄性的外表往往远比雌性华丽醒目。如公鸡、孔雀，然而人类是个例外。 为什么呢？女性比男性漂亮是进化的合理结果。 源于直立行走带来的生育困境：女性无法独自抚养孩子长大，因此需要男性的配合。 如何留住男性在自己身边呢？积极发展自己的外貌特征，从而具备了挑选优秀男人的资本。]]></content>
  </entry>
  <entry>
    <title><![CDATA[疯狂人类进化史：大脑袋不一定有大智慧]]></title>
    <url>%2F2017%2F05%2F23%2F%E7%96%AF%E7%8B%82%E4%BA%BA%E7%B1%BB%E8%BF%9B%E5%8C%96%E5%8F%B2%EF%BC%9A%E5%A4%A7%E8%84%91%E8%A2%8B%E4%B8%8D%E4%B8%80%E5%AE%9A%E6%9C%89%E5%A4%A7%E6%99%BA%E6%85%A7%2F</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[疯狂人类进化史——肤色中隐藏的进化奥秘]]></title>
    <url>%2F2017%2F05%2F22%2F%E7%96%AF%E7%8B%82%E4%BA%BA%E7%B1%BB%E8%BF%9B%E5%8C%96%E5%8F%B2%E2%80%94%E2%80%94%E8%82%A4%E8%89%B2%E4%B8%AD%E9%9A%90%E8%97%8F%E7%9A%84%E8%BF%9B%E5%8C%96%E5%A5%A5%E7%A7%98%2F</url>
    <content type="text"><![CDATA[同为人类，为什么我们的肤色颜色却又巨大的差异？肤色背后，有什么复杂的进化逻辑吗？ 第一个问题人类的皮肤为什么会变成黑色？ 晒黑的！ 这个答案并不是信口开河，也并不是完全错误，但离正确答案相差太远。 黑色素与皮肤癌太阳光中的紫外线能造成细胞DNS损伤，引发皮肤癌，远古人类的相应保护措施就是合成黑色素，吸收紫外线。 但不同地区的人种黑色素细胞基本相等，区别在于黑色素颗粒含量不同，黑种人皮肤中的黑色素颗粒是白种人的40多倍。 这个理论确实符合大多数观察现象：赤道附近的人很黑，往地球两极移动，人的皮肤也似乎越来越白。 但是皮肤癌理论却有弱点：如果黑色皮肤的主要意义在于保护皮肤不晒出皮肤癌，由于皮肤癌的发病率很低，且发病过程太慢，即使肤色较浅的人得了皮肤癌也不会立即死亡，仍有机会留下后代延续基因。 从遗传角度来说，黑色皮肤的保护效果并不立竿见影。 黑色素与维生素D一些科学家相信，原始人类再非洲遇到的最厉害的“杀手”是维生素D。，维生素能让人的骨头变得更结实，而人体无法自行合成，只有在紫外线的帮助下合成。 人体需要维生素D，但是合成量多了也不利，需要通过肾脏处理排出体外，加重肾脏负担。可见人体对维生素的需求是刚性需求，既不能少，也不能多。 日照人类无法调节，人类采取的最有效的方法是过滤阳光中多余的紫外线，为达到此目的，必须增加黑色素。 也就是说：非洲人的皮肤黑不仅能过滤多余的紫外线，防止皮肤癌，更能防止合成过量的维生素D 但是，这个理论还有缺陷：经计算表明，如果生产适量的维生素D，非洲人可以更白一些。而且肾衰竭和皮肤癌类似，仍然有机会留下后代。 叶酸出现了NASA拍摄的臭氧层图谱显示，紫外线强度和肤色密切相关，人类的皮肤确实越晒越黑。 但是，赤道紫外线最强是夏季，赤道附近居民皮肤最黑反而是秋冬季节，这又是怎么回事？ “元凶”在阿根廷出现了。 阿根廷三位健康的年轻产妇产下了有神经管缺陷的婴儿，怀孕初期，她们都进行了长时间的日光浴。 原来，是因为阳光中的长波紫外线可以直达身体内部，深入每一根血管，破坏血液里的重要物质——叶酸。 叶酸随处可见，但有一个巨大弱点：能被长波紫外线轻易分解，而叶酸是合成DNA的必须因子，所以怀孕初期长时间日晒，会导致婴儿成长所需的叶酸不足。 这也能解释为什么秋冬季节赤道附近的人皮肤最黑，因为此时长波紫外线的剂量最高。 问题似乎明朗了：人体对维生素D的需求有使身体变白的倾向，而出于保护也算的目的，又必须维持一定的黑色。 麻烦又出现了 格林兰岛上的原住民因纽特人有着深色的皮肤； 美洲赤道地区的印第安人保持了从亚洲过去时的黄色； 东南亚热点地区的居民同样靠近赤道，却从不认为是黑人； 澳大利亚附近一个小岛上的原住民没有像温带一样保持白色，而是黑色 达尔文的“性选择”帮了大忙雄孔雀拖着无用的大尾巴，不能带来任何生存好处，可是他们还趾高气扬地拖着大尾巴到处显摆，同样的问题也比如：男性的胡子、女性光滑细腻的皮肤。 为什么呢？因为异性喜欢啊！ 有钱难买喜欢，自然选择决定了生存问题，性选择才能解决繁殖问题。 自然选择和性选择共同决定了人类现在的皮肤颜色。]]></content>
  </entry>
  <entry>
    <title><![CDATA[《疯狂人类进化史》——人类为什么不长毛]]></title>
    <url>%2F2017%2F05%2F21%2F%E3%80%8A%E7%96%AF%E7%8B%82%E4%BA%BA%E7%B1%BB%E8%BF%9B%E5%8C%96%E5%8F%B2%E3%80%8B%E2%80%94%E2%80%94%E4%BA%BA%E7%B1%BB%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E9%95%BF%E6%AF%9B%2F</url>
    <content type="text"><![CDATA[裸露的皮肤散热效果极佳，直立行走的潜力得以充分发挥，长途奔袭使得捕猎效率更高，人类可以吃到更多的肉食，营养水平极大改善，打下人体深入进化的基础 人类为什么要脱毛毛发能防止皮肤湿润、阳光晒伤、蚊虫叮咬、保温等作用，为什么人类要脱去自己的毛发呢？ 自然界鲸鱼和海豚体表也无毛发，是因为它们在水中披着一身湿润的毛发毫无用处；大象看起来像是裸露的皮肤，其实是因为体积太大了，导致单位面积内毛发较少。 如何探究人类脱毛确定人类为什么要脱毛一个难题是如何确定人类何时脱毛的，由于毛发不能形成化石，考古证据不能提供有效借鉴，使得探讨这个问题异常复杂。 幸好，黑猩猩提供了线索：黑猩猩毛发下的皮肤其实是黑色的，作为人类的近亲，人类祖先皮肤应该也是类似颜色，而现代人很少具备这样的皮肤，肤色变化必然在脱毛之后，可以从基因变异中一窥究竟，非洲黑人恰好几乎都有一个相同的肤色基因突变，时间大致为120万年前，也就是说，人类在直立起来之后，还披着一身毛发在非洲大草原上奔跑了200多万年。 那为什么要脱毛呢？是否和120万年前非洲自然条件发生变化有关？要解决这个问题，只能靠“猜”了。 有人提出了“幼态持续”这个概念：成年之后基本保持幼态形象。成年人类和婴幼儿的皮肤相差无几，但这个概念对解决脱毛毫无用处，只是换了一个问题。 其他各种被推翻的猜想： 用火说：用火之后，毛发易燃，所以人类开始脱毛。但是用火的北京猿人仍然披着一身毛发。 寄生虫假说：厚重的体毛极易生长寄生虫，对人体健康不利。但是现代这么多物种都有着厚厚的毛发，显然这个猜想也站不住脚。 水猿理论：由于地质变迁，人类的祖先曾经在水下生存过一段时间，并且用人类流线型的身体、汗毛走向、皮下脂肪等作为佐证。但是，古猿的皮下脂肪并不足以在水下保温，而且男性和女性身体都有一个突出部位，不适合在水中游泳。 答案在哪里？从马拉松比赛里可以寻找到答案——世界上没有哪种动物能像人类一样进行这种比赛，也没有哪种动物具备如此不间断长途奔跑的能力。 玩不起奔跑能力并不是它们没有持续能源供应，而是消耗脂肪时产生的热量无法即使散发——我们常见的奔跑能力很强的动物，如狗、狼等，都只具备短途奔袭能力，一旦奔跑时间过长就气喘吁吁，狮子也是懒得惊人，捕杀猎物时，一击不得，便不再出手。 和各种野生动物相比，人类的劣势很明显：没有尖锐的獠牙，没有快速奔跑的四肢，在自然环境中如何捕杀猎物呢？那时候没有弓箭枪炮，人类的智商也不足以设置陷阱，只能用笨办法：长途追杀。 持续追、持续赶，不分昼夜追赶，把猎物热死、累死，这是早起人类不是猎物的“绝招”。人类膝关节化石磨损严重也证明了早期人类一直在不断运动之中。 持续运动产生了大量热量，而阻挡散热的毛发被人类进化所抛弃，是在情理之中的事了。这个理论叫散热理论，也叫狩猎假说，它是如此简介，并且能和各种现象互证，“简洁的一般都是正确的”。 那为什么又有几撮毛发留下来了？因为：头发——天然遮阳伞，保护大脑不受阳关晒伤；眉毛——挡住雨水、汗水，保护眼睛；腋毛——生物学功能；胡子——“广告效应”，力量的象征]]></content>
      <categories>
        <category>笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[《疯狂人类进化史》——走出来的进化]]></title>
    <url>%2F2017%2F05%2F21%2F%E3%80%8A%E7%96%AF%E7%8B%82%E4%BA%BA%E7%B1%BB%E8%BF%9B%E5%8C%96%E5%8F%B2%E3%80%8B%E2%80%94%E2%80%94%E8%B5%B0%E5%87%BA%E6%9D%A5%E7%9A%84%E8%BF%9B%E5%8C%96%2F</url>
    <content type="text"><![CDATA[直立行走是人类进化的一个重要开关。 人类什么时候开始直立行走的需要从化石中探寻直立行走的秘密，可以根据三个特点判断是否属于直立行走的人类： 足弓：足弓可以缓冲跑步时的震动； 骨盆：上承脊椎，下接大腿，直立行走的人类骨盆很强壮； 膝盖骨：承担弹跳时的大力冲击，直立行走的人类膝盖骨很结实。 化石证据： 露西：证明人类至少已经直立行走了320万年，并且为“人”的概念下了“直立行走”的金标准； 埃塞俄比亚的一个男人化石：人类直立行走的时间又提前了40万年； 阿尔迪：440万年前。 为什么会直立行走各种猜测： 为了制造工具：然而人类直立行走的时间比石器出现的时间早了100万年； 恐吓对手：直立起来看起来高大，动物界确实有动物有类似行为，但是它们没有最终进化为直立行走； 节省能量：这个比较靠谱，直立行走大大降低能量消耗，活动范围更远，食物来源更多 “摄食理论”同时认为：直立之后，摄食效果会更好，会有更多更丰富的食物可以采摘。该理论有一个缺陷：为什么“先进”的早期人来却被赶出了森林，走向了草原，而显得“落后”的猩猩们，仍待再森林里待着。 “气候变化理论”为“摄食理论”提供了补充，认为是东非大裂谷的出现，导致东非大裂谷东侧气候出现变化，降雨减少，森林消失，人类祖先被迫下地。 可直立行走的古猿在草原上，占据了各种优势：视野开阔，活动范围更远，直立可减少日照面积，减少散热压力等。 直立行走带来的好处有哪些直立行走可能和人类的语言和智力有关。 显而易见的好处是解放了双手，双手进行各种复杂操作，为了满足这些需求，大脑得以进化。]]></content>
      <categories>
        <category>笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Douban Scrawl Tutoral 1]]></title>
    <url>%2F2017%2F04%2F05%2Fdouban-scrawl-tutoral-1%2F</url>
    <content type="text"><![CDATA[Douban scrawl tutorial[TOC] IntructionUse request to scrawl Douban PreparationCreate a virtualenv for python3virtualenv -p /usr/local/bin/python3 venv ps: need to install python3 first then activate it: source venv/bin/activate Install requestpip install request Tutorial1. Get movies of 2016 on Douban12345678import requestsr = requests.get(&apos;https://movie.douban.com/tag/2016&apos;)print(r.text)print(type(r))print(r.status_code)print(r.encoding)print(r.cookies) 2. Get movie scores and commentsUse beautiful soup to parse the HTMLInstall beautiful soup by pip: pip install beautifulsoup4 Code to get movie links and next page link12345678910111213141516import requestsfrom bs4 import BeautifulSoupdef main(): r = requests.get('https://movie.douban.com/tag/2016') soup = BeautifulSoup(r.text) article = soup.findAll('div', &#123;'class': 'article'&#125;)[0] # div for movies for table in article.findAll("table", &#123;'class': 'infobox'&#125;): table.extract() for div in article.findAll("div", &#123;'class': ['clearfix', 'paginator']&#125;): div.extract() # get all movie links for link in article.find_all('a', &#123;'class': 'nbg'&#125;): print(link.get('href')) Code to get movie comments link1234567891011121314151617181920212223mport requestsfrom bs4 import BeautifulSoupdef main(): r = requests.get('https://movie.douban.com/tag/2016') soup = BeautifulSoup(r.text) article = soup.findAll('div', &#123;'class': 'article'&#125;)[0] # div for movies for table in article.findAll("table", &#123;'class': 'infobox'&#125;): table.extract() for div in article.findAll("div", &#123;'class': ['clearfix', 'paginator']&#125;): div.extract() # get all movie links for link in article.find_all('a', &#123;'class': 'nbg'&#125;): scrawl_movie_info(link.get('href'))def scrawl_movie_info(url='https://movie.douban.com/subject/25980443/'): r = requests.get(url) soup = BeautifulSoup(r.text) link = soup.select('#comments-section &gt; div.mod-hd &gt; h2 &gt; span &gt; a')[0].get('href') print(link.get('href')) Code to get comments and scores of first page12345678910111213141516171819202122232425262728293031323334353637import requestsfrom bs4 import BeautifulSoupdef main(): r = requests.get('https://movie.douban.com/tag/2016') soup = BeautifulSoup(r.text) article = soup.findAll('div', &#123;'class': 'article'&#125;)[0] # div for movies for table in article.findAll("table", &#123;'class': 'infobox'&#125;): table.extract() for div in article.findAll("div", &#123;'class': ['clearfix', 'paginator']&#125;): div.extract() # get all movie links for link in article.find_all('a', &#123;'class': 'nbg'&#125;): scrawl_movie_info(link.get('href'))def scrawl_movie_info(url='https://movie.douban.com/subject/25980443/'): r = requests.get(url) soup = BeautifulSoup(r.text) link = soup.select('#comments-section &gt; div.mod-hd &gt; h2 &gt; span &gt; a')[0].get('href') scrawl_movie_comments(link)def scrawl_movie_comments(url): r = requests.get(url) soup = BeautifulSoup(r.text, "html.parser") for item in soup.findAll('div', &#123;'class': 'comment-item'&#125;): for comment in item.findAll('p'): desc = comment.text # get comment for rating in item.findAll('span', &#123;'class': 'rating'&#125;): score = rating['class'][0][7:] # print(score) print(score, desc) Result demo123456789101112131415161720 叙事模式跟HP相似，有更多的政治影射，但剧本，人物，剪辑和节奏都很有问题，看的完全提不起兴趣且有各种不适感。最后高潮戏又故意弄得跟超级英雄电影很像。德普已经签了续集，目测校长就快出现了吧，看来华纳把心思都放在开发HP宇宙了。影帝要再这么演下去就是下一个马丁弗里曼。30 虽然我哭了几次，但只是因为我是粉丝。。前半段老土，后半段乏力，主线情节真的幼稚到无趣，而且1926年的巫师出国都靠坐船，魔法部的大家都穿民族服装？？但是罗琳阿姨真的知道怎样开始和结束一个故事，最后大雨倾盆的时候，我觉得自己也像被施了遗忘咒。这个世界再一次离开了我。40 赫奇帕奇的毕业生果然就算有美貌加成还是无趣的男人！姐妹们，嫁人还是得找985、211的，赫奇帕奇这种二本的咱不嫁！40 华纳（WB）片头的配乐一出，一秒回到哈利·波特的魔法世界。J·K·罗琳用这部全新的创作的故事，把魔法打通，更让观众再次梦回奇幻冒险之旅，情怀剧情惊喜连连、神奇动物目不暇接、彩蛋伏笔合不拢嘴。嗅嗅爱珠宝、护树罗锅有情绪、隐形兽化身“闪电”、鸟蛇能伸能屈…一本满足，2016外语商业片Top1.30 节奏很奇怪，点太多太乱，不知道是要讲奇遇，找动物，还是要拯救世界。雀斑这个演技实在有点掉影帝的价，怎么和《丹麦女孩》一样眼神闪烁不正眼看人呢？视觉效果倒是比《奇异博士》还好，各种眼花缭乱。最不爽的莫过于明明上一秒还在对科林法瑞尔流口水，下一秒就要被德普的淫笑视奸。30 把Colin Farrel变成JonnyDepp的膜法？！！搞没搞错啊啊啊！！还我科叔！我要去美国膜法国会上诉30 Johnny Depp一出场 我的白眼照亮了整个电影院40 三星半。即便不是哈迷，其中那些有趣的生物与奇妙的魔法，还是很吸引人。故事野心很大，要铺大世界了。小雀斑的表演很特别，总是侧着身子的感觉，有些优雅又带着点俏皮，一开始略带笨拙的样子，又有点卓别林的感觉。有几个动物的设定很可爱，轻松的地方也很轻松。看完走出影院才发现，魔法世界真好啊20 花了30刀买的4D的票，看完感觉自己被骗了。片名叫神奇动物，结果动物只是来客串的，整个故事讲的是一个缺爱小男孩儿的愁与怨...电影的节奏让人崩溃，男主虽然不演霍金了，但是脸部肌肉还是会随时抽搐，女主则从头哭到尾...]]></content>
  </entry>
  <entry>
    <title><![CDATA[How to Write a Email]]></title>
    <url>%2F2017%2F03%2F21%2Fhow-to-write-a-email%2F</url>
    <content type="text"><![CDATA[顺序:从上到下——防止忘了：附件-正文-主题-收信人 你给谁写的/你想说什么/人家为什么要回复你/希望对方如何 内容可以折叠 标题要明确 能用文字就别用图片 简化链接 多说事实，少带情绪 想好了再抄送]]></content>
  </entry>
  <entry>
    <title><![CDATA[Npm Related Tutorial]]></title>
    <url>%2F2017%2F03%2F16%2Fnpm-related-tutorial%2F</url>
    <content type="text"><![CDATA[Install npm on ubuntuinstall:curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash - sudo apt-get install -y nodejs use taobao:npm install -g cnpm --registry=https://registry.npm.taobao.org update npmnpm install npm@latest -g Install wechat on Ubuntu123git clone https://github.com/geeeeeeeeek/electronic-wechat.gitcd electronic-wechatnpm install &amp;&amp; npm start]]></content>
  </entry>
  <entry>
    <title><![CDATA[Pyspider Tutorial]]></title>
    <url>%2F2017%2F03%2F09%2Fpyspider-tutorial%2F</url>
    <content type="text"><![CDATA[[TOC]refer Installation sudo -H pip install pyspider run command pyspider, visit http://localhost:5000 On ubuntu, try to:sudo apt-get install python python-dev python-distribute python-pip libcurl4-openssl-dev libxml2-dev libxslt1-dev python-lxml libssl-dev zliblg-dev]]></content>
  </entry>
  <entry>
    <title><![CDATA[2017-01-17]]></title>
    <url>%2F2017%2F02%2F18%2F2017-01-17%2F</url>
    <content type="text"><![CDATA[背诵泊秦淮烟笼寒水月笼沙，夜泊秦淮近酒家；商女不知亡国恨，隔江犹唱后庭花。 枫桥夜泊月落乌啼霜满天，江枫渔火对愁眠；姑苏城外寒山寺，夜半钟声到客船。 观书有感半亩方塘一鉴开，天光云影共徘徊；问渠那得清如许，为有源头活水来。 工作日志更新文章 干部档案专审验收 宁远“五个在前”谋划两委换届 东安“五微”工作法开启党建“微时代” 身份证丢失可异地办理 留言回复 蓝山事业单位招聘地址 投稿邮箱 文章 “五下乡”活动方案 其他 已发布文章归类 整理各个科室、单位发送的稿件，并进行登记 摆放广告牌 可改进之处&amp;遗漏干部档案专审验收 标题写错了，记得检查清楚 提交给责任部门验收]]></content>
      <tags>
        <tag>dairy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2017-01-14]]></title>
    <url>%2F2017%2F02%2F14%2F2017-01-14%2F</url>
    <content type="text"><![CDATA[背诵春日 胜日寻芳泗水滨，无边美景一时新；等闲识得东风面，万紫千红总是春。 清明 清明时节雨纷纷，路上行人欲断魂；借问酒家何处有，牧童遥指杏花村。 春宵 春宵一刻值千金，花有清香月有阴；楼管歌台声细细，秋千院落夜沉沉。 绝句 两个黄鹂鸣翠柳，一行白鹭上青天；窗含西岭千秋雪，门泊东吴万里船。 工作日志 发布2016年执行力综合考评活动 整理祁阳县为村、居“两委”换届“把脉”的文章 更新最感动人童年文章 整理2017年扶贫村支书培训名单 可改进之处 微信文章最先做到图文并茂]]></content>
  </entry>
  <entry>
    <title><![CDATA[How to Be Awesome]]></title>
    <url>%2F2017%2F02%2F05%2FHow-to-be-awesome%2F</url>
    <content type="text"><![CDATA[成为一个牛逼（awesome）的工程师Understand why we build stuffs great leaders start with why 当我们了解了我们所做事情的意义后，我们往往更加充满斗志，更加愿意投入 blood，toil，tears and sweat。事实上，如果你仔细回味，人的一生，值得铭记的事情往往和 blood，toil，tears and weat 相关。很多时候，我们一事无成，并非我们无能，而是没有找到一件有意义的，能让自己愿意毫无保留地挥洒热血的事情。 Have a strong sense of ownership像对待自己的孩子一样的ownership，舍我其谁来承担责任的ownership。注意不要混淆主人翁意识和宗教意识。宗教意识是会无理由反感，驳斥甚至谩骂一切对自己所呵护的东西的批评。对于批评，拥有宗教意识的人会认为这是一种「亵渎」，即便这批评有理有据；而主人翁意识则往往爱之深责之切，有则改之无则加勉，就像真正合格的父母对待孩子那样。 Really finish stuff很多时候，我们所定义的「完成」真的算是完成么？做一个 feature，code complete 算是完成么？bug-free 算是完成么？caller-friendly（比如说代码有完善的文档）算是完成么？deployed to production 算是完成么？我为啥那么执着于 build - measure - learn？编码结束，才仅仅是个开端，学到了些什么，才是循环的一次结束。 deliver with full fledged solutions提交完全成熟的解决方案 zero tolerance to shit in products牛逼的程序员眼里容不得沙子，不会得过且过。在程序猿的世界，偏执狂的成长曲线更优美。日子是问题叠着问题过的，牛逼是汗水覆着汗水熬出来的。 zero tolerance to recurring tasks and bugs牛逼的程序员不会做重复性的工作 —— 不是不屑于，而是他们会找到方法去减少甚至消灭重复。 代码的重复靠重构来解决。最好在写代码的那一刻就避免重复。 代码的 boilerplate 靠 snippet 来解决。撰写代码的时候，同时也维护和更新 snippet。atom / vim / emacs 都有很好的 snippet 工具。 bug 的反复靠 test case 来捕捉。 task 的反复靠 makefile，script，cronjob 等工具完成。 Being experts but open minded在合适的地方使用合适的技术。 Always make your team a better team牛逼的程序员让周围的人更好。莫道前路无知己，天下谁人不识君！]]></content>
  </entry>
  <entry>
    <title><![CDATA[How to Deploy Application on Heroku]]></title>
    <url>%2F2017%2F01%2F08%2FHow-to-deploy-application-on-heroku%2F</url>
    <content type="text"><![CDATA[How to deploy application on herokuThis article introduces how to deploy web applications onto heroku. reference linksvue2+Flask网站，轻松部署到免费主机HerokuGetting Started on Heroku with Python how to check logheroku logs --tail define starterthe command to start the web application is contained in file: Procfile, format like below:web: gunicorn settingstarted.wsgi --log-file - run on local Collect static resources: python manage.py collectstatic Run by command: heroku local web submit local changes123heroku localgit push heroku masterheroku open]]></content>
  </entry>
  <entry>
    <title><![CDATA[Atom]]></title>
    <url>%2F2017%2F01%2F05%2Fatom%2F</url>
    <content type="text"><![CDATA[本文介绍了如何在Ubuntu下通过命令行安装atom，以及为atom安装上特别浮夸的插件：activate-power-mode Install Atom on Ubuntu在Ubuntu下输入以下两条命令即可安装好atomsudo add-app-repository ppa:webudp8team/atomsudo apt update; sudo apt-get install atom Install activate-power-mode packageapm是安装好了atom之后就带的atom package管理功能，输入以下命令即可安装activate-power-mode这个插件关于activate-power-mode，参考：https://atom.io/packages/activate-power-modeapm install activate-power-mode 使用atom的activate-power-mode是个非常浮夸的插件，现在新加入了combo模式，以前带的窗口震动功能是默认50连击才开启，如果需要改变，通过以下方式进行设置（Windows/Linux/Mac通用）： 打开atom 点击工具栏上的“Packages”-&gt; ”Setting View“ -&gt; “Manage Packages” 在package中找到”activate-power-mode”，点击”setting” 设置连击数量，将起设置为1即可。 接下来打开atom看下浮夸的界面吧]]></content>
  </entry>
  <entry>
    <title><![CDATA[《拔起逻辑之剑》笔记]]></title>
    <url>%2F2017%2F01%2F05%2F%E3%80%8A%E6%8B%94%E8%B5%B7%E9%80%BB%E8%BE%91%E4%B9%8B%E5%89%91%E3%80%8B%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[虚假的真话 现实生活中，大多数错误，都是由这种虚假的真话导致的 虚假的真话是别人真心实意的跟你说的，但是别人自己却不能保证其真实性的“真话” 要防范这种虚假的真话，就要从不同层次去认识自己的无知有些人完全不知道自己的无知。他们以为自己什么都知道，一个命题会仅仅因为从自己的口中说出而赋值为真。他们虚伪的博学使得那些虚假的真话常常难以被察觉。 怀疑的习惯 养成怀疑的好习惯真正的怀疑，是像一个侦探一般，不放过任何可疑之处，大胆地问：“为什么”只要养成一个小小的习惯，就能享受怀疑精神带来的好处，那就是多问一个“为什么” 反对的资格 反对的前提，是理解，理解的含义，就是有能力支持，没有支持的能力，就没有反对的资格 知识究竟是什么 演绎逻辑无法导出新知识，而归纳逻辑则是新知识产生的途径你的知识，就是你能为之辩护的真信念，别人能为之辩护的真信念不是你的知识。不管能不能被辩护，假信念都不是知识。 分析和解决问题的通用方法 拿到一个问题，首先应该怎么办呢？显然是先读一遍，试着理解这个问题理解了某个问题，需要得出一个初步结论：这个问题有没有答案。开放答案的问题都不叫问题，那只不过是伪装成问题的聊天而已。第一步就是为这个问题划分论域 不同论域的解答不一样，比较常见的就是脑筋急转弯就是把数学问题应用在生活等其他领域，所以当然不能用数学领域的知识去解答 决策性的问题该如何回答呢？这个在不同领域里面有不同的具体方法，会得出不同的答案。至于这个方法是什么，建议请教该领域的专家。虽然，很多时候不是他们知道最佳答案，而是他们知道的，被叫做最佳答案。是什恶魔的描述性问题不难回答，因为答案是存在且可知的。难以回答的是“为什么”的问题。“为什么”是什么意思呢？是询问目的吗？还是询问动机？还是询问事情的运作机制？当我们问为什么时，其实是因为我们感到了困惑，源于不理解带来的不安。为了减轻不安，遇到“为什么”的问题时，要设法改成“是什么”问题或者“该怎么样”的问题。简单来说，回答“为什么”的问题，只需要消除提问者的困惑。 科学·宗教·怀疑精神 科学是一种人类的社会活动，独特之处在于试验方法和数学工具的运用宗教也是人类的社会活动，独特之处在于对某个超自然对象之存在的承诺怀疑精神是一种思维方式，反对既定的结论，对抗顽固的教条。是一种方法，而不是既定的立场 如何真正驳倒对手 人们总是以为自己是对的，而不同意自己观点的人，就一定是错的。由于同一段话可以有不同的解释，我们便有意无意地对那些反对自己的言论进行最不合理的解释，只要把对方的观点解释称很愚蠢的那样，这样我们反驳起来，就很轻松了。虽然好用，但在真正内行面前不堪一击真正的强者，是在把对手的观点进行最大合理化之后，依然能成功进行反驳的人 真正优雅的做法： 将对手的观点用最清晰、最合理、最强有力的方式表达出来，并追问对手是否就是他想表达的意思 展开强有力的反驳：暗藏的逻辑谬误、论据中事实性错误、还不知道的新证据 争论时，谁是赢家 当你在和对手争论时“输掉”， 你的手活佛反而比对手更大，你才是真正的赢家错误想法经过和别人争论变得正确率 先问存在不存在，再问是不是 由量变引发质变的东西其实是不存在的东西学者们都是非常热衷于为万事万物分类的，他们乐意于寻找A和B之间的分解标准。但一旦遇到“连续性”问题就极为头疼如果我们想要问什么是真正的XX，那我们应该首先思考，XX与非XX之间是否是连续的？如果是，那就不要再问真正的XX是什么，因为他不存在 雄辩胜于事实 我们记录不到事实，只记录到了我们所以为的事实。我们不需要事实，我们需要的是雄辩。我们需要以雄辩去澄清我们的思想，发现那些谬误。我们不知道什么是真理，但我们能靠雄辩来知道什么不是真理。以雄辩来去伪，这是我们能尽的人事。至于能否存真，那要听天命真实的雄辩，甚于虚伪的事实 我犯过的错误比你做对的事情还要多 我们能取得今天的成就，恰恰是因为那些错误已经被别的东西犯过令人恐惧的，不是错误，而是对错误的恐惧 智力与理性 智力高的人往往拥有更好的记忆力和理解能力，更快的反应速度以及更强的学习能力。他们能在多个领域获得较高的成就。理性这个概念带有更多社会构建的成分。强调的是一个人更加沉着冷静，有自我控制能力，能不受情绪的干扰。 说服的六艺每个人的脑袋里都有大量信念，而说服，就是改变信念的过程。六个问题帮助我们合理的说服他人或自己 究竟相信什么。每个人都有大量的信念，但有些信念是其他信念的基础，找到这些基础信念。 信念是否得到足够的证据支持。 证据的可靠程度是多少。 证据是否真的支持信念。 什么样的证据才会改变信念。 这个信念值得相信吗？ 谁有责任证明措置举证责任是一种推理谬误：将举证的义务强加给不应该承担举证责任的一方 举证责任分配的三大算法： 可信度原则：提出不那么可信论断的一方有责任拿出证据支持那个不太可信的论断 肯定判断原则：提出肯定判断的一方有居正责任 实用原则：当某一方的支持的论断后果很严重时，这一方就有责任提出支持 书籍推荐《学会提问》：https://book.douban.com/subject/20428922/《批判性思维》：https://book.douban.com/subject/7057936/《这才是心理学》：https://book.douban.com/subject/26287453/]]></content>
      <categories>
        <category>笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[混乱考核效率]]></title>
    <url>%2F2016%2F12%2F29%2F%E6%B7%B7%E4%B9%B1%E8%80%83%E6%A0%B8%E6%95%88%E7%8E%87%2F</url>
    <content type="text"><![CDATA[＃ 混乱考核效率 效率来源于一致 具体事情的效率来源于某次规范化 某次规范化是和时间锚点挂钩的 时间变化带动一系列变化 来源于某次时间锚点的一致性可能已经时过境迁 引入某次混乱尝试其他的一致性 或验证效率]]></content>
  </entry>
  <entry>
    <title><![CDATA[通过理财实现财富自由]]></title>
    <url>%2F2016%2F12%2F28%2F%E9%80%9A%E8%BF%87%E7%90%86%E8%B4%A2%E5%AE%9E%E7%8E%B0%E8%B4%A2%E5%AF%8C%E8%87%AA%E7%94%B1%2F</url>
    <content type="text"><![CDATA[通过理财实现财富自由orig书籍：《管道的故事》 建立属于自己的现金流管道，可以让其源源不断地为你输送金钱 技能点 记账 储蓄 开源节流 投资和配置 流程理清日常财务情况 记账清楚地显示消费、收入情况，核心理念：管理现金流的能力。 分析与总结，削减、杜绝“不必要的开支”。 清晰化你的日常现金流现金流即包括现金流入以及现金流出 开源 对于你每一个单一收入的数额的提升； 增加你的收入来源，获得更多不同类型的收入形式。 节流 杜绝我们的“不必要开支”； 要将钱花在“可以长期增值的地方”，这也是为什么有些人越花钱越有钱的关键所在了。 强制性储蓄 加强理财知识的学习 开始尝试进行一些资产配置]]></content>
      <categories>
        <category>笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[2016-12-26-Summrize]]></title>
    <url>%2F2016%2F12%2F26%2F2016-12-26-summrize%2F</url>
    <content type="text"><![CDATA[这是今天解决的三个问题： 解决bootstrap glyphicon加载过慢 mysql命令行添加提示信息 python getpass模块用法 bootstrap glyphicon loading slowRequirementsglyphicon glyphicon-info-sign loading too slow, sometimes I thinks it’s missing, is it possible to accelrate the downloading speed? SolutionUse awesome to replace bootstrap glyphicon12&lt;link href="//netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.min.css" rel="stylesheet"&gt;&lt;i class="fa fa-info-circle" aria-hidden="true"&gt;&lt;/i&gt; Linux mysql 命令行使用技巧Via mysql在命令行内添加主机、数据库、用户名信息编辑/etc/mysql/my.cnf，添加12[mysql]prompt=&quot;\\u@\\h : \\d \\r:\\m:\\s&gt;&quot; python getpass module usage &amp; demorefer link introductiongetpass module is use for user to type in password basic usage12345678import getpasstry: p = getpass.getpass()except Exception as err: print('ERROR', err)else: print("You entered:", p) with prompt12345678import getpassp = getpass.getpass(prompt='What is your favorite color? ')if p.lower() == 'blue': print('Right, off you go.')else: print('Auuuuuugh!')]]></content>
      <tags>
        <tag>python</tag>
        <tag>summary</tag>
        <tag>mysql</tag>
        <tag>bootstrap</tag>
        <tag>awesome</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[走进Rails]]></title>
    <url>%2F2016%2F12%2F24%2F%E8%B5%B0%E8%BF%9BRails%2F</url>
    <content type="text"><![CDATA[学习资源网站 极客学院 Rails Practice https://ihower.tw/rails/index-cn.html 书籍 松本行弘的程序世界 代码的未来 Ruby 编程 Ruby 元编程 七周七语言 安装rvm安装 导入证书：curl -sSL https://rvm.io/mpapis.asc | gpg2 --import - 安装：curl -sSL https://get.rvm.io | bash -s stable 升级（可选）：rvm get stable ruby安装 查看版本：rvm -v 查看可安装ruby版本：rvm list known 安装ruby2.2： rvm install 2.2.0 查看已安装的版本：rvm list 设置2.2为默认版本：rvm use 2.2.0 --default 查看ruby版本：ruby -v rails安装安装Gemset，隔离rails版本123rvm gemset create rails4.2rvm use 2.2.0@rails4.2 --defaultgem install rails -v 4.2.0 --no-ri --no-rdoc #初步 创建项目rails new shop 配置Gemfile 修改source为source &#39;https://ruby.taobao.org&#39; # 我们也可以使用 taobao 这个安装源，不过一些 Gem 不存在时，还是要使用 rubygems 官方源的。 Bootstrap UI添加Gem在Gemfile中添加如下内容：123gem &quot;therubyracer&quot;gem &quot;less-rails&quot;gem &quot;twitter-bootstrap-rails&quot; 运行bundle install 用Scafold生成product框架rails g scaffold product name price:decimal description:text 生成页面命令12345678# 更新 db 解构rake db:migrate# 安装 bootstrap 文件rails generate bootstrap:install# 创建一个 layoutrails g bootstrap:layout# 创建资源模板rails g bootstrap:themed Products ##启动服务器rails s，访问http://localhost:3000/products Bootswatch UI添加Gemfile12gem &apos;twitter-bootswatch-rails&apos;gem &apos;twitter-bootswatch-rails-helpers&apos; 运行bundle installbundle install 生成页面文件12rails g bootswatch:install cerulean # 安装该 theme 的基础文件rails g bootswatch:import cerulean # 导入一个线上的 theme 的变量文件 更新 application.css在12*= require_tree .*= require_self 下添加12*= require cerulean/loader*= require cerulean/bootswatch 报glyphiconsEotPath错误，需要在Gemfile中定义bootstrap的版本为3.2.0， 否则默认使用3.2.1会出现错误。 Scafold进入console进行调试12345$ rails console&gt; Product.firstProduct Load (0.2ms) SELECT &quot;products&quot;.* FROM &quot;products&quot; ORDER BY &quot;products&quot;.&quot;id&quot; ASC LIMIT 1 =&gt; nil&gt; exit 常用命令 rails generate -h 查看帮助 rails g scaffold [资源名] [属性列表] [选项] 语法结构]]></content>
      <categories>
        <category>Rails</category>
      </categories>
      <tags>
        <tag>tutorial</tag>
        <tag>rails</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Use setup.py to Install Python Program]]></title>
    <url>%2F2016%2F12%2F22%2Fuse-setup-py-to-install-python-program%2F</url>
    <content type="text"><![CDATA[https://docs.python.org/2/distutils/setupscript.htmlhttps://docs.python.org/2.7/distutils/setupscript.html#installing-scripts #Solution12345678910111213141516#!/usr/bin/env python# encoding: utf-8from distutils.core import setupsetup( name='foo', version='1.0', description='Yarving foo program', author='Yarving', author_email='yarving@gmail.com', url='https://yarving.github.io', scripts=['scripts/ywrun.py']) Refer to pip(cat /usr/local/bin/pip2.7)1234567891011#!/usr/bin/python# -*- coding: utf-8 -*-import reimport sysfrom pip import mainif __name__ == '__main__': sys.argv[0] = re.sub(r'(-script\.pyw|\.exe)?$', '', sys.argv[0]) sys.exit(main())]]></content>
  </entry>
  <entry>
    <title><![CDATA[Shadowsocks Server Install and Start]]></title>
    <url>%2F2016%2F12%2F22%2Fshadowsocks-server-install-and-start%2F</url>
    <content type="text"><![CDATA[Home page DescriptionShadowsocks is a VPN software, We can use it to setup our own VPN Installpip install shadowsocks config file123456789101112&#123;"port_password":&#123;"8989":"password0", "9001":"password1","9002":"password2","9003":"password3","9004":"password4" &#125;, "method":"aes-256-cfb","timeout":600 &#125; startssserver -c config.json -d start]]></content>
  </entry>
  <entry>
    <title><![CDATA[Flask Login Reminders]]></title>
    <url>%2F2016%2F12%2F22%2Fflask-login-reminders%2F</url>
    <content type="text"><![CDATA[Description修改Flask框架用户登录成功之后的登录成功通知 RequirementAdd login reminders Design Login failed message type Login text Signup Link Placeholder for Login filed ConcludingString Field placeholder12345email = StringField('Email', validators=[Required(), Length(1, 64), Email()], render_kw=&#123; 'placeholder': 'Testlink register Email'&#125; ) Redirecting to other URL when on click12345&lt;script&gt; document.getElementById("sign_up").onclick = function () &#123; location.href = "http://vipr-testlink.lss.emc.com/testlink/firstLogin.php"; &#125;;&lt;/script&gt; Python Login Manager login message123456from flask.ext.login import LoginManagerlogin_manager = LoginManager()login_manager.session_protection = 'Strong'login_manager.login_view = 'auth.login'login_manager.login_message = 'Please use your Testlink account to login']]></content>
  </entry>
  <entry>
    <title><![CDATA[清朝绝对很有趣书摘]]></title>
    <url>%2F2016%2F12%2F22%2F2016-12-20-summrize%2F</url>
    <content type="text"><![CDATA[《清朝绝对很有趣》书摘 畏敌者心不安枕 褚英如此对待五位大臣和弟弟，不但使自己陷入完全孤立的境地，也过早地暴露了自己赶尽杀绝的险恶用心 财也大，产也大，后来子孙祸也大，若问此理是若何？子孙钱多胆也大，天样大事都不怕，不丧身家不肯罢 大事不可糊涂，小事不可不糊涂。若小事不糊涂，则大事必致糊涂矣 《得到》App 听摘当别人贪婪时，我们要恐惧，当别人恐惧时，我们要贪婪。 《逻辑思维-超级个体》总结幸存者偏差概念 一直学习知识，忘记学习能力 做时间的朋友就是做那些时间越久，价值越大的事 alway join， never die 持续地暴露在可能性、机遇之下 HTML Table sortable table sorting]]></content>
      <categories>
        <category>笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Leetcode 461: Hamming Distance]]></title>
    <url>%2F2016%2F12%2F22%2FLeetcode-461-Hamming-Distance%2F</url>
    <content type="text"><![CDATA[题目来源Leetcode 461: Hamming Distance 原题The Hamming distance between two integers is the number of positions at which the corresponding bits are different. Given two integers x and y, calculate the Hamming distance. Note:0 ≤ x, y &lt; 231. Example:12Input: x = 1, y = 4Output: 2 Explanation:1 (0 0 0 1)4 (0 1 0 0) ↑ ↑The above arrows point to positions where the corresponding bits are different. 解析两个整数的海明距离是指其对应二进制不同的位数。如1和4的二进制中有两位不一样，海明距离是2 解答 两个数做异或操作 将操作结果转换为str 遍历str，如果有&#39;1&#39;，则距离加1 测试代码123456789101112131415161718def main(): def hammingDistance(x, y): """ :type x: int :type y: int :rtype: int """ res = 0 for c in str(bin(x ^ y)): if c == '1': res += 1 return res print hammingDistance(1, 4)if __name__ == '__main__': main() 测试结果（领先100%）]]></content>
      <tags>
        <tag>python</tag>
        <tag>leetcode</tag>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[两学一做是什么]]></title>
    <url>%2F2016%2F12%2F13%2F%E4%B8%A4%E5%AD%A6%E4%B8%80%E5%81%9A%E6%98%AF%E4%BB%80%E4%B9%88%2F</url>
    <content type="text"><![CDATA[学习教育内容学党章党规 明确基本标准，树立行为规范，逐条逐句通读党章 学习党的历史、革命先辈和先进典型等 认真学习《准则》和《条例》等党内法规等 从周永康、薄熙来、徐才厚、郭伯雄、令计划等违纪违法案件中汲取教育，守住为人、做事的基准和底线 学系列讲话 学习习近平总书记关于改革发展稳定、内政外交国防、治党治国治军的重要思想 学习以习近平同志为总书记的党中央治国理政新理念新思路新战略 学习习近平总书记系列重要讲话要同学习马列毛邓等思想结合起来学 要区别对待普通党员和党员领导干部，确定学习的重点内容 做合格党员做到”4讲4有“： 讲政治，有信念 讲规矩，有纪律 讲道德，有品行 讲风险，有作为 做到5个方面 引导党员强化政治意识，保持政治本色 向党中央看齐，向党的理论和路线方针政策看齐，做政治上的明白人 密切联系群众，全心全意为人民服务 加强党性锻炼和道德修养，心存敬畏、手握戒尺，廉洁从政、从严治家 保持干事创业、开拓进取的精气神，平常时候看得出来，关键时刻冲得上去 主要措施5个能否 能否坚守共产党人信仰信念宗旨 能否正确处理公与私、义与利、个人与组织、个人与群众的关系 能否努力追求高尚道德、带头践行社会主义核心价值观、保持积极健康生活方式 能否自觉做到党规党纪面前知敬畏守规矩 能否保持良好精神状态、积极为党的事业担当作为]]></content>
  </entry>
  <entry>
    <title><![CDATA[落实两学一做，激活基层党建新活力]]></title>
    <url>%2F2016%2F12%2F07%2F%E8%90%BD%E5%AE%9E%E4%B8%A4%E5%AD%A6%E4%B8%80%E5%81%9A%EF%BC%8C%E6%BF%80%E6%B4%BB%E5%9F%BA%E5%B1%82%E5%85%9A%E5%BB%BA%E6%96%B0%E6%B4%BB%E5%8A%9B%2F</url>
    <content type="text"><![CDATA[原文近日，中共中央办公厅印发了《关于在全体党员中开展“学党章党规、学系列讲话，做合格党员”学习教育方案》，并发出通知，要求各地区各部门认真贯彻执行。“两学一做”是面向全体党员深化党内教育的重要实践，是推动党内教育从“关键少数”向广大党员拓展、从集中性教育向经常性教育延伸的重要举措。我们党的根基在基层，党的肌体细胞是党员。细胞合格，党的肌体就强健；基层有活力，党的事业就兴旺。“两学一做”学习教育的开展，为推动基层党员干部的教育提供了平台，为基层党员更亲密地向组织靠拢提供了保障，为全面提升基层党员的党性修养扫清障碍。开展好“两学一做”学习教育，提高基层党员的思想是关键。基层党组织存在着党员流动性大，党员管理难，党员思想滞后的现象。通过对基层党员持续深化开展“两学一做”学习教育，引导基层党员干部切实增强政治意识，鉴定马克思主义信仰和共产党主义信念；增强大局意识，以大局为重、为大局分忧，不给大局添乱；增强核心意识，自觉维护党中央权威，确保党的领导更加坚强有力；增强看齐意识，自觉向党中央看齐，保持共产党人本色。开展好“两学一做”学习教育，祛除基层党员顽疾是前提。本固才能枝荣，根深才能叶茂。基层党员干部就是党员队伍的最大根基，只有这个根基强了，党员队伍才能真正茁壮成长。通过深入基层开展“两学一做”学习教育，找出基层党员的顽疾所在，为更好地抓好基层党员的学习教育来加强党的思想政治建设打下了坚实基础；为保持党的先进性和纯洁性指明了方向；为提高党的凝聚力和战斗力，实现全面从严治党提供了目标。开展好“两学一做”学习教育，学以致用见成效是目的。“两学一做”学习教育，基础在学，关键在做。只有学以致用，学为所用，真学真懂，才能真正提高基层党员“四大意识”；才能为党在思想上政治上行动上的团结统一夯实基础；才能强化基层党员的宗旨观念、激发基层党员的担当精神；才能让广大党员在生产、工作、学习和社会生活中发挥先锋模范作用，当好合格党员。所以，基层是根，基层是本，开展好“两学一做”学习教育，优先激活基层党建，把基层党员的思想建设放在首位，使其能更加坚定理想信念、保持对党忠诚；更加能敢担当、敢作为；更加能风清气正，廉洁自律；更加能充分发挥基层党员的先锋模范作用。 第一次背诵今日，中共中央办公厅引发了《关于在全体党员中开展”学党章党规、学系列讲话、做合格党员“活动教育方案》，并发出通知，要求各地区各部门认真贯彻执行。“两学一做”是面向全体党员深化党内教育的重要实践，是推动党内教育从“关键少数”向全体党员拓展，从集中性教育向经常性教育延伸的重要举措。我们党的根基在基层，党的机体细胞是党员，党员和各，党的机体就坚强，基层有活力，党的事业就会兴旺发达。“两学一做”学习教育活动的开展，为推动基层党员干部的教育提供了平台，为基层党员更亲密地向党中央靠拢提供了保障，为全体提升党员的党性修养扫清了障碍。开展好“两学一做”学习教育活动，提高基层党员的思想是关键。基层党组织存在着党员流动性大，党员管理难，党员思想滞后的现象。通过对基层党员持续深化开展“两学一做”学习教育，引导基层党员干部切实增强政治意识，坚定马克思主义信仰和共产主义信仰；增强大局意识，以大局为重，为大局分忧，不为大局添乱；增强核心意识，自觉维护党中央的权威，确保党的领导更加坚强有力；增强看齐意识，自觉向党中央看齐，向党的方针路线看齐，保持共产党人本色。开展好“两学一做”学习教育活动，祛除基层党员顽疾是前提。本固才能枝荣，根深才能叶茂。基层党员干部就是党员队伍的最大根基，只有这个根基强了，党员队伍才能真正茁长成长。通过深入开展“两学一做”学习教育活动，找出基层党员的顽疾所在，为更好地抓好基层党员的学习教育来加强党的思想政治建设打下坚实基础；为保持当的先进性和纯洁性指明了方向，为提高党的凝聚力和战斗力，实现全面从严治党提供了目标。开展好“两学一做”学习教育活动，学以致用见成效是目的。“两学一做”学习教育，基础在学，关键在做。只有学以致用，学为所用，真学真懂，才能真正提高基层党员的“四大意识”；才能为党在思想上、政治上、行动上的团结统一夯实基础；才能强化基层党员的宗旨观念，激发基层党员的担当精神；才能让广大党员在生产、工作、学习和社会生活中发挥先锋模范作用，当合格党员。基层是根，基层是本，开展好“两学一做”学习教育，优先激活基层党建，把基层党员的思想建设放在收尾，使其能更加坚定理想信念、保持对党忠诚；更加能敢担当、敢作为；更加能风清气正、廉洁自律；更加能充分发挥基层党员的先锋模范作用。 第二次背诵今日，中共中央办公厅印发了《关于在全体党员中开展“学党章党规、学系列讲话、做合格党员”学习教育方案》,并发出通知，要求各地区各单位认真贯彻执行。 “两学一做”是面向全体党员深化党内教育的重要实践，是推动党内教育从“关键少数”向广大全体党员拓展，从集中性教育向经常性教育学习的重要举措。我们党的根基在基层，党的肌体细胞是党员，党员合格，则党组织简章，基层有活力，党的事业则兴旺。“两学一做“学习教育的开展，为推动党员干部的教育提供了平台，为基层党员更亲密地向党中央靠拢提供了保障，为全面提升基层党员的党性修养扫清了障碍。通过持续开展两学一做学习教育活动，引导基层党员干部切实增强政治意识，坚定马克思主义信仰和共产主义信仰；增强大局意识，以大局为重，为大局服务；增强核心意识，自觉维护党中央的权威，确保党的领导更加坚强有力。增强看齐意识，自觉向党中央看齐，向党的方针路线看齐，保持共产党人本色。]]></content>
  </entry>
  <entry>
    <title><![CDATA[Leetcode 5: Longest Palindromic Substring]]></title>
    <url>%2F2016%2F12%2F06%2FLeetcode-5-Longest-Palindromic-Substring%2F</url>
    <content type="text"><![CDATA[出处源自leetcode 5 原题Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000. Example:123Input: "babad"Output: "bab" Note: “aba” is also a valid answer. Example:123Input: "cbbd"Output: "bb" 解读给定字符串s, 找到最长回文子串，可以假设s的最长长度为1000给定两个例子 babad的最长回文子串为bab（aba也是，给定一个即可） cbbd的最长回文子串为bb 第一个解法思路 遍历s，以当前字符为中心节点，往两边拓展 如果左边字符和右边字符一样，则继续拓展 否则拓展结束，记录下最长子串 缺点由于同时往两边拓展，所以例子2中的情形无法处理（回文子串长度为偶数的无法处理）， 可以加上补丁算法，处理偶数情形，但是比较复杂，不予讨论，引入下一种思路： 第二个解法思路 第一个思路是由中间往两边拓展，处理奇数和偶数长度子串要分别处理，由于回文子串的边界字符肯定相等，如果可以相同字符为边界，往里拓展 找到两个相等的字符，以之为边界(下边界和上边界)，进行步骤2 如果上、下边界相等，则为回文字符，否则上边界减1、下边界加1，继续步骤2 综上所示，可以利用一个记忆数组的方法，s的字符串长度为n，设置一个n*n的记忆数组，记忆(i, j)是否为回文，每次以相等字符为边界，往内部推进，判断(i-1, j+1)是否为回文，并且记忆结果，已备下次查询使用； 统计s中每个单词出现的位置 取出同样的单词出现的位置并设为judge(i, j)， 判断i - 1位置的单词是否和j - 1处的单词一样，是的话，返回judge(i - 1, j + 1)的值，否则非回文 返回任意一长度最大的回文子串]]></content>
      <tags>
        <tag>python</tag>
        <tag>leetcode</tag>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2016/12/06 记忆材料]]></title>
    <url>%2F2016%2F12%2F06%2F2016-12-06-%E8%AE%B0%E5%BF%86%E6%9D%90%E6%96%99%2F</url>
    <content type="text"><![CDATA[表彰材料第一次2015年，我区精心安排，周末部署，紧紧围绕“三严三实”专题教育活动和区委中心工作，充分利用党员干部远程教育办公平台，扎实工作，开拓进取，在xxx工作中发挥了积极作用，圆满完成了各项目标指标，全区xxx工作稳步提升,涌现了一批先进集体和个人。为总结经验、表彰先进、树立发扬典型，进一步推动xxx工作向纵深发展。根据考核成绩，经组委组织部研究决定，对2015年度荣获xxx先进集体的xxx，和荣获xxx先进个人的xxx予以通报表彰。 希望收到表彰的单位和个人继续发扬成绩、扎实工作，进一步开拓创新、锐意进取；各单位要组织开展多种形式的学典型榜样、争先进活动，引导各级党组织和广大党员干部群众进一步统一思想、提高认识、抓好落实。要加强对优秀典型的培养和宣传，及时总结推广经验，有效发挥典型示范、引领作用。要以学习贯彻党中央的十八届六中全会精神以引领、扎实推进“两学一做”教育活动为契机，充分发挥xxx的作用，努力提高全体党员干部的素质，为落实进四个全面，贯彻五大发展理念，提高党的建设科学化水平，全面建设小康xx做出新的贡献。 第二次2015年，我区精心安排，周密部署，紧紧围绕“三严三实专题教育活动”和区委中心工作。充分利用党员干部远程教育办公平台，扎实工作，开拓进取，在xxx工作方面发挥了积极作用，圆满完成了各项目标指标，全区xxx工作稳步前进，涌现了一批先进党员和个人。为总结经验、表彰先进、树立典型，推动xx进一步纵深发展, 根据考核成绩，经区委组织部研究决定，对2015年度荣获xxx先进集体的xxx，荣获先进个人的xxx予以通报表彰。希望收到表彰的单位和个人继续发扬成绩、扎实工作，继续开拓创新，锐意进取。各单位要开展多种形式的学榜样、争先进活动，引导各级党组织和广大干部群众进一步统一思想、提高认识、抓好落实。要加强对优秀典型的培养和宣传，及时总结推广经验，有效发挥典型的引领、示范作用。要以学习贯彻党的十八大六中全会精神为音量，扎实推进“两学一做”教育活动为契机，充分利用党员远程教育办公平台，努力提高全体党员干部各项素质，为落实“四个全面”，贯彻“五大发展理念“，提高党的建设科学化水平，全面建设小康xxx做出新的贡献。 讲规矩，有纪律原文(2016-12-06 21:17) 慎独：若想人不知，除非己莫为，独处时也要谨慎自律，操行自守 慎微：勿以恶小而为之，小节不小，小节中有党性、有政治、有原则、有品行 慎初：多少腐败分子在推杯换盏中放松了警惕，在小恩小惠中丢掉了原则，在轻歌曼舞中丧失了人格。思想上筑牢第一道防线，自觉不越雷池一步，不存侥幸之心，发现不良思想和出个行为，坚决及时刹车. 第一次背诵(2016-12-06 21:39) 慎独：若想人不知，除非己莫为，独处时更要谨慎自律，操行自守 慎微：勿以恶小而为之，小节不小，小节中有党性、有政治、有原则、有人品。 慎初：多少腐败分子在推杯换盏中放松了警惕，在小恩小惠中忘记丢掉了原则，在轻歌曼舞中丧失了人格。思想筑牢上的第一道防线，自觉不越雷池一步，不存侥幸心理，发现不良思想和出格行为，坚决及时刹车。 第二次背诵（2016-12-06 20:17） 慎独：若想人不知，除非己莫为，独处时更加要谨慎自律，操心自守； 慎微：勿以恶小而为之，小节不小，小节中有党性、有政治、有原则、有品行； 慎始：多少腐败分子在推杯换盏中放松了警惕，在小恩小惠中丢掉了原则，在轻歌曼舞中丧失了人格。思想上筑牢第一道防线，自觉不越雷池一步，不存侥幸心理，发现不良思想和出个行为，坚决及时刹车； 第三次背诵（2016-12-08 20:52） 慎独：若想人不知，除非己莫为，独处时更要谨慎自律，操行自守； 慎微：勿以恶小而为之，小节不小，小节中有党性、有政治、有原则、有品行； 慎初：多少腐败分子在推杯换盏中放松了警惕，在小恩小惠中忘记了原则，在轻歌曼舞中丧失了人格。思想上筑牢第一道防线，自觉不越雷池一步，不存侥幸心理，发现不良思想和出格行为，坚决及时刹车。]]></content>
      <categories>
        <category>笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[两学一做背诵材料]]></title>
    <url>%2F2016%2F12%2F04%2F%E4%B8%A4%E5%AD%A6%E4%B8%80%E5%81%9A%E8%83%8C%E8%AF%B5%E6%9D%90%E6%96%99%2F</url>
    <content type="text"><![CDATA[基本概念两学一做 学党章党规、学系列讲话、做合格党员 四讲四有 讲政治，有信念；讲规矩，有纪律；讲道德，有品行；讲风险，有作为 四个全面 全面建成小康社会、全面深化改革、全面依法治国、全面从严治党。 启承 全体党员要坚持以知促行，做讲政治、有信念，讲规矩、有纪律，讲道德、有品行，讲奉献、有作为的合格党员。 根据中央决定和市委安排，今年在全体党员中开展“学党章党规、学系列讲话、做合格党员”学习教育。 “两学一做”，基础在学，关键在做，重点在改，核心在干，以“四讲四有”(讲政治、有信念，讲规矩、有纪律，讲道德、有品行，讲奉献、有作为)为党员标准， 做一名“四铁”(铁一般信仰、铁一般信念、铁一般纪律、铁一般担当)的干部， “两学一做”学习教育，是党中央深化党的思想政治建设的一项重要部署，是协调推进“四个全面”战略部署特别是推动全面从严治党向基层延伸的有力抓手。 全县各级党组织履行抓好“两学一做”学习教育的主体责任，坚持区分层次，突出问题导向，取得了实际成效。 讲政治，有信念 政治上的明白是最大的明白，政治上的成熟是最大的成熟 党员干部特别是领导干部无论在任何时候、任何场合，都要坚定信仰之志，强化政治定力，主动向党中央看齐，向党的理论和路线方针看齐，始终做到听党话、跟党走。 要求树立明确的政治方向，遵守鲜明的政治原则，以形成内在的定力;要求树立牢固的马克思主义信仰，对社会主义前途的信仰，全心全意为人民服务的信仰。 信念坚定是好干部的首要标准。始终坚定为人民服务的宗旨，始终不忘为民服务的初心 增强政治敏锐性和政治鉴别力，积极同各种错误思想和错误行为旗帜鲜明地作斗争 做党的理论的忠实实践者，方针路线的坚决执行者，政策原则的坚定维护者 讲道德，有品行 其身正，不令而行;其身不正，虽令不从 国无德不兴，人无德不立。 成绩不夸大，缺点不缩小，错误不隐瞒，坚持真理、尊重事实 践行习近平总书记2014年10月在对云南工作考察时做出的党员干部要“对党忠诚、个人干净、敢于担当”的重要指示，做老实人、说老实话、干老实事。 讲规矩，有纪律 按规矩办事，以规矩服人，政治上讲忠诚、组织上讲服从、行动上讲纪律 要以“心中有党、心中有民、心中有责、心中有戒”这“四有”为标尺。心中有党，时刻想到自己是否在按照党的要求做事;心中有民，才对个人的名利、地位，想得透、看得透、看得淡;心中有戒，才能正确行使权力，处理好公和私、情和法、利和法的关系;始终严格要求自己，加强道德修养，追求健康情趣。 小事小节中有党性，有原则，有人格。小事当慎，小节当拘。 在推杯换盏中放松了警惕，在小恩小惠面前丢掉了原则，在轻歌曼舞中丧失了人格 坚持原则不动摇、执行标准不走样、履行程序不变通、遵守纪律不放松 公平不倾斜，公正不护短，公道不藏私 小节不小，小节之中有政治、有形象、有人格 以公生明、以廉树威，做一个政治上靠得住、工作上有本事、作风上过得硬、群众信赖拥护的优秀共产党员 格式 党性坚定为首要准则； 公道正派为立身之本； 严守纪律为工作要求； 廉洁从政为根本底线。 讲奉献，有作为 使命高于荣誉，责任重于泰山 保持对组织负责、对岗位负责的态度 习近平总书记在今年“七一”讲话中十次强调“不忘初心、继续前进”，告诫全党同志“历史从不等待一切犹豫者、观望者、懈怠者、软弱者” 格式 耐住寂寞，不怕吃苦，胸怀坚韧之心； 俯身实干，勇于担当，谨记责任之心； 开拓创新，争创一流，永葆进取之心。 总结 时刻将“两学一做”要求内化于心、外化于行，勤勉敬业，创造出无愧于党和人民的业绩。 混杂 习近平总书记在全国组织工作会议上指出，好干部要做到“信念坚定、为民服务、勤政务实、敢于担当、清正廉洁”。]]></content>
  </entry>
  <entry>
    <title><![CDATA[Number of Segments in a String]]></title>
    <url>%2F2016%2F12%2F04%2FNumber-of-Segments-in-a-String%2F</url>
    <content type="text"><![CDATA[题目出处源自于leetcode 题目描述Count the number of segments in a string, where a segment is defined to be a contiguous sequence of non-space characters. For example, Input: &quot;Hello, my name is John&quot; Output: 5 解读计算给定字符串的片段数，片段由空白字符分割。如给定:&quot;Hello, my name is John&quot;, 输出5（五个片段，分别为&quot;Hello,&quot;, &quot;my&quot;, &quot;name&quot;, &quot;is&quot;, &quot;John&quot; 解答此题用python做太简单了，split字符串得到list，计算list长度即可。 代码1234567class Solution(object): def countSegments(self, s): """ :type s: str :rtype: int """ return len(s.split()) 第二版思路解析在第一版中，直接使用python的str类提供的函数，效率比较低，下面使用模式计算片段数量： 用space_mode变量表示是否处于空白字符模式（空白字符是片段分割符）； 如果处于空白字符模式（space_mode = True），遇到非空字符时，片段数加一； 如果不处于空白字符模式（space_mode = False），遇到空白字符，则转入空白字符模式 代码如下1234567891011121314151617181920class Solution(object): def countSegments(self, s): """ :type s: str :rtype: int """ count = 0 space_mode = True # is space for c in s: # meet a char if space_mode and c != ' ': count += 1 space_mode = False # meet a space if not space_mode and c == ' ': space_mode = True return count 后续工作此题用C语言做比较能领会split的核心概念： 用C语言解答此题； 研究python的str.split()方法。]]></content>
      <tags>
        <tag>python</tag>
        <tag>leetcode</tag>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Median of Two Sorted Arrays]]></title>
    <url>%2F2016%2F12%2F03%2FMedian-of-Two-Sorted-Arrays%2F</url>
    <content type="text"><![CDATA[题目出处源自于leetcode 题目描述There are two sorted arrays nums1 and nums2 of size m and n respectively. Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)). Example 1:1234nums1 = [1, 3]nums2 = [2]The median is 2.0 12345Example 2:nums1 = [1, 2]nums2 = [3, 4]The median is (2 + 3)/2 = 2.5 解读给定两个有序数组，长度分别为m和n，找到两个数组的中位数。时间复杂度应该为O(log(m+n)) 初步思路什么是中位数当变量值的项数N为奇数时，处于中间位置的变量值即为中位数；当N为偶数时，中位数则为处于中间位置的2个变量值的平均数。中位数的解释参见百度百科 如何获取中位数在python，由于语言特性，可以忽略数组总长度（len）为奇数还是偶数，即取(len/2 + (len - 1)/2)/2的值为中位数。举例如下： 当数组长度为3时,各个数字的下标为[0, 1, 2], 3/2=1， (3-1)/2=1, 计算下标为1的值两次再除以2.0，刚好是自己本身（还可以将整型转化为浮点型）； 当数组长度为4时,各个数字的下标为[0, 1, 2, 3]，4/2=2， (4-1)/2=1，计算下表为1和2的两个值的和再除以2.0即为中位数。 也就是从两个有序数组中取出从小到大排序后下标分别为(m + n - 1)/2和(m + n)/2的两个值，相加后除以2.0即为答案。 解法题目要求算法复杂度为O(log(m + n))，直观想到的解法有两种： 直接在两个数组中采用二分查找法查找两个下标值； 先排序，然后直接获取。]]></content>
      <tags>
        <tag>python</tag>
        <tag>leetcode</tag>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Elixir Introduction 2]]></title>
    <url>%2F2016%2F12%2F01%2FElixir-Introduction-2%2F</url>
    <content type="text"><![CDATA[不可变性 Elixir中，所有的值都是不可变的。 基础原子 院子是常量，用于表示某些东西的名字，以冒号（：）开头 元组 元组被创建就无法修改，如：{1, 2}用于模式匹配123456789iex(4)&gt; &#123;status, count, action&#125; = &#123;:ok, 42, "next"&#125;&#123;:ok, 42, "next"&#125;iex(5)&gt; status:okiex(6)&gt; count42iex(7)&gt; action"next"iex(8)&gt; 散列表12345678iex(9)&gt; states = %&#123;&quot;AL&quot; =&gt; &quot;Alabama&quot;, &quot;WI&quot; =&gt; &quot;Wisconsin&quot;&#125;%&#123;&quot;AL&quot; =&gt; &quot;Alabama&quot;, &quot;WI&quot; =&gt; &quot;Wisconsin&quot;&#125;iex(10)&gt; states[&quot;AL&quot;]&quot;Alabama&quot;iex(11)&gt; colors = %&#123; red: 0xff0000 &#125;%&#123;red: 16711680&#125;iex(12)&gt; colors.red16711680 匿名函数函数定义 匿名函数用fn关键字创建； 函数定义中可以省略圆括号； 123456789101112131415161718192021222324252627282930313233iex(1)&gt; sum = fn (a, b) -&gt; a + b end#Function&lt;12.52032458/2 in :erl_eval.expr/5&gt;iex(2)&gt; sum.(1, 2)3iex(3)&gt; greet = fn -&gt; IO.puts &quot;Hello&quot; end#Function&lt;20.52032458/0 in :erl_eval.expr/5&gt;iex(4)&gt; greet.()Hello:okiex(5)&gt; f1 = fn a, b -&gt; a * b end#Function&lt;12.52032458/2 in :erl_eval.expr/5&gt;iex(6)&gt; f1.(5, 6) 30iex(7)&gt; f2 = fn -&gt; 99 end#Function&lt;20.52032458/0 in :erl_eval.expr/5&gt;iex(8)&gt; f2.()99iex(9)&gt; swap = fn &#123;a, b&#125; -&gt; &#123;b, a&#125; end#Function&lt;6.52032458/1 in :erl_eval.expr/5&gt;iex(10)&gt; swap.(&#123;6, 8&#125;)&#123;8, 6&#125;iex(11)&gt; list_concat = fn l1, l2 -&gt; l1 ++ l2 end#Function&lt;12.52032458/2 in :erl_eval.expr/5&gt;iex(12)&gt; list_concat.([:a, :b], [:c, :d])[:a, :b, :c, :d]iex(13)&gt; sum = fn a, b, c -&gt; a + b + c end#Function&lt;18.52032458/3 in :erl_eval.expr/5&gt;iex(14)&gt; sum.(1, 2, 3)6iex(15)&gt; pair_tuple_to_list = fn &#123;a, b&#125; -&gt; [a, b] end#Function&lt;6.52032458/1 in :erl_eval.expr/5&gt;iex(16)&gt; pair_tuple_to_list.(&#123;1234, 5678&#125;)[1234, 5678] 函数重载 函数重载取决于传入的参数类型和内容，通过模式匹配来选择要运行的子句 12345678910iex(1)&gt; handle_open = fn...(1)&gt; &#123;:ok, file&#125; -&gt; "Read data: #&#123;IO.read(file, :line)&#125;"...(1)&gt; &#123;_, error&#125; -&gt; "Error: #&#123;:file.format_error(error)&#125;"...(1)&gt; end#Function&lt;6.52032458/1 in :erl_eval.expr/5&gt;iex(2)&gt; handle_open.(File.open('donotexistfile'))"Error: no such file or directory"iex(3)&gt; handle_open.(File.open('/tmp/test.py')) "Read data: #!/usr/bin/env python\n"iex(4)&gt; handle_open.(File.open('/tmp/test.py'))]]></content>
  </entry>
  <entry>
    <title><![CDATA[Longest Substring Without Repeating Characters]]></title>
    <url>%2F2016%2F12%2F01%2FLongest-Substring-Without-Repeating-Characters%2F</url>
    <content type="text"><![CDATA[题目出处源自于leetcode 题目描述Given a string, find the length of the longest substring without repeating characters. Examples:Given &quot;abcabcbb&quot;, the answer is &quot;abc&quot;, which the length is 3.Given &quot;bbbbb&quot;, the answer is &quot;b&quot;, with the length of 1.Given &quot;pwwkew&quot;, the answer is &quot;wke&quot;, with the length of 3. Note that the answer must be a substring, &quot;pwke&quot; is a subsequence and not a substring. 解读给定一个字串，返回最长不包含重复字符的子串。如&quot;abcabcbb&quot;的最长不包含重复字符的子串为“abc”,“bca”`等，长度都为3 第一版答案思路 初始最长(max)不包含重复字符的子串为0，统计最长字串起始位置（start）为-1， 用data记录每个字符上一次出现位置； 遍历字符串，如果该字符没有出现（即不在data中），则迄今为止的最长长度为当前index - start; 否则，以当前字符结尾的最长字串肯定要从该字符上一次出现的位置算起。 举例&quot;abcabcbb&quot; 遍历a时，最长子串长度为1(“a”)； 遍历b时，最长子串长度为2(“ab”)； 遍历c时，最长子串长度为3(“abc”)； 遍历a时，由于a已经出现过一次，最长子串长度从第一位算起，则长度为3(“bca”)； .. 代码1234567891011121314151617181920class Solution(object): def lengthOfLongestSubstring(self, s): """ :type s: str :rtype: int """ data = &#123;&#125; start = -1 max = 0 for index, char in enumerate(s): if char in data: start = data[char] data[char] = index len = index - start if max &lt; len: max = len return max 第二版答案缺陷表现：当提交代码时，发现”abba”时错误了。原因： start的值是我们认为统计以当前所遍历的字符结尾的最长字串的起始位置； 由于该题的特殊性质，start位置只能往后挪，不能往前挪，因为往前挪肯定会包含重复字符； 在处理”abba”时，第二个b，我们已经把start标记为第一个b的位置，而在处理第二个b时，我们把start往前挪了，所以正确答案应该为”ab”/“ba”，而我们得到了”bba”。 修改：将if char in data: 修改为 if char in data and start &lt; data[char]: 即可修复此bug。 代码1234567891011121314151617181920class Solution(object): def lengthOfLongestSubstring(self, s): """ :type s: str :rtype: int """ data = &#123;&#125; start = -1 max = 0 for index, char in enumerate(s): if char in data and start &lt; data[char]: start = data[char] data[char] = index len = index - start if max &lt; len: max = len return max 运行结果及效率]]></content>
      <tags>
        <tag>python</tag>
        <tag>leetcode</tag>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Add Two Numbers]]></title>
    <url>%2F2016%2F11%2F30%2FAdd-Two-Numbers%2F</url>
    <content type="text"><![CDATA[题目出处来自于leetcode 题目描述 You are given two linked lists representing two non-negative numbers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list. 12Input: (2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)Output: 7 -&gt; 0 -&gt; 8 解读给定两个表示两个非负整数的单链表，这两个数按反序保存在单链表中，把两个数相加并返回一个单链表。给定的例子为342 + 465 = 807 第一版答案 从两个单链表的开头相加，记住进位； 几个边界条件需要注意： 入参的两个单链表有可能为空，若一个为空，则直接返回另一个即可； 两个单链表长度可能不一样，在相加结束后需要把比较长的剩余的数值拷贝过去； 进位也需要考虑，如5 + 5 = 10， 当两个单链表处理完毕后，如果还有进位，还需要增加一个节点 代码如下1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162# Definition for singly-linked list.# class ListNode(object):# def __init__(self, x):# self.val = x# self.next = Noneclass Solution(object): def addTwoNumbers(self, l1, l2): """ :type l1: ListNode :type l2: ListNode :rtype: ListNode """ if not l1: return l2 if not l2: return l1 carry = 0 sums = l1.val + l2.val + carry carry = sums / 10 res = ListNode(sums % 10) l1 = l1.next l2 = l2.next node = res while l1 and l2: sums = l1.val + l2.val + carry tmp = ListNode(sums % 10) carry = sums / 10 node.next = tmp node = node.next l1 = l1.next l2 = l2.next while l1: sums = l1.val + carry tmp = ListNode(sums % 10) carry = sums / 10 node.next = tmp node = node.next l1 = l1.next while l2: sums = l2.val + carry tmp = ListNode(sums % 10) carry = sums / 10 node.next = tmp node = node.next l2 = l2.next while carry: tmp = ListNode(carry % 10) carry = carry / 10 node.next = tmp node = node.next return res 第二版答案第一版答案中的代码不够精炼，从以下两个地方入手： 入参判断，对l1和l2的检查上，先定义一个头节点，返回头节点的next，这样可以避免处理l1或l2为空的情形，将链表中所有的节点一视同仁进行处理； 将四个while语句合并处理 代码如下：1234567891011121314151617181920212223242526272829303132333435# Definition for singly-linked list.# class ListNode(object):# def __init__(self, x):# self.val = x# self.next = Noneclass Solution(object): def addTwoNumbers(self, l1, l2): """ :type l1: ListNode :type l2: ListNode :rtype: ListNode """ head = ListNode(0) carry = 0 node = head while l1 or l2 or carry: val1, val2 = 0, 0 if l1: val1 = l1.val l1 = l1.next if l2: val2 = l2.val l2 = l2.next sums = val1 + val2 + carry tmp = ListNode(sums % 10) carry = sums / 10 node.next = tmp node = node.next return head.next 代码简洁了许多，由于增加了比较多的比较，效率会稍微下降点。]]></content>
      <tags>
        <tag>python</tag>
        <tag>leetcode</tag>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Two Sum]]></title>
    <url>%2F2016%2F11%2F28%2FTwo-Sum%2F</url>
    <content type="text"><![CDATA[description题目出处：leetcode Given an array of integers, return indices of the two numbers such that they add up to a specific target. You may assume that each input would have exactly one solution. Example:1234Given nums = [2, 7, 11, 15], target = 9,Because nums[0] + nums[1] = 2 + 7 = 9,return [0, 1]. 解读 给定一个包含多个数字的数组，返回两个值的下标，这两个值相加恰好等于target 可确定的是，答案有且只有一个 Solution version alpha 创建一个字典，使用nums中的值作为key，下标作为value，这样可以迅速通过nums中的值获取其下标； 遍历nums中的值，如果target - nums中的数存在，则说明配对成功，这样直接通过这些值就能获取到下标作为返回值返回了。 代码如下：123456789101112131415class Solution(object): def twoSum(self, nums, target): """ :type nums: List[int] :type target: int :rtype: List[int] """ num_map = &#123;&#125; for i, value in enumerate(nums): num_map[value] = i for value in nums: index = target - value if index != value and index in num_map: return [num_map[value], num_map[index]] 存在一个bug：当nums中有重复数字时，num_map只会存一个数字的下标，会导致信息丢失。如：nums = [3, 3, 4, 5], target = 6此时是获取不到正确的答案的。 Final solution 由于上一个步骤中，在构建字典过程中会导致同样值的key被覆盖，所以我们在构建字典过程中进行运算； 在构建字典过程中，遍历nums时，如果target-num已经存在于字典中，那么匹配成功，返回其相对应的下标即可； 否则，将当前的值加入到字典中，以备后续查找。 代码如下：1234567891011121314class Solution(object): def twoSum(self, nums, target): """ :type nums: List[int] :type target: int :rtype: List[int] """ num_map = &#123;&#125; for i in range(len(nums)): another = target - nums[i] if another in num_map: return [num_map[another], i] else: num_map[nums[i]] = i]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>leetcode</tag>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Autopep8]]></title>
    <url>%2F2016%2F11%2F28%2Fautopep8%2F</url>
    <content type="text"><![CDATA[IntroductionAutopep8是一个将Python代码自动排版为PEP8风格的小工具。它使用pep8工具来决定代码中的哪部分需要被排版。Autopep8可以修复大部分pep8工具中报告的排版问题。 Installationinstall autopep8 by pip:12345678910$ sudo -H pip install autopep8[sudo] password for yarving:Collecting autopep8 Downloading autopep8-1.2.4-py2.py3-none-any.whl (41kB) 100% |████████████████████████████████| 51kB 83kB/sCollecting pep8&gt;=1.5.7 (from autopep8) Downloading pep8-1.7.0-py2.py3-none-any.whl (41kB) 100% |████████████████████████████████| 51kB 29kB/sInstalling collected packages: pep8, autopep8Successfully installed autopep8-1.2.4 pep8-1.7.0 Basic Usage preparing a python file with bad format 12345678#!/usr/bin/env python# encoding: utf-8s1='查看系统's2=u'内所有安装'print s1print s2print s1.decode('utf-8')+s2#print s1 + s2 # this line will raise error use pep8 to check this file 1234pep8 test.pytest.py:3:3: E225 missing whitespace around operatortest.py:4:3: E225 missing whitespace around operatortest.py:8:1: E265 block comment should start with '# ' use autopep8 to fix the fileOverwrite the original file by commmand: autopep8 --in-place test.pyThen found the file is fixed as below: 12345678#!/usr/bin/env python# encoding: utf-8s1 = '查看系统's2 = u'内所有安装'print s1print s2print s1.decode('utf-8') + s2# print s1 + s2 # this line will raise error]]></content>
      <tags>
        <tag>python</tag>
        <tag>autopep8</tag>
        <tag>pep</tag>
        <tag>tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Rails 下载文件]]></title>
    <url>%2F2016%2F11%2F28%2Frails-%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[根据request的format参数来确定返回值类型，代码如下： 1234567respond_to do |format| format.html format.csv do headers['Content-Disposition'] = "attachment; filename='filename.csv'" headers['Content-Type'] ||= 'text/csv' endend 链接地址： 1&lt;%= link_to('Download Link', &#123;:action =&gt; :download, :format =&gt; :csv&#125;) %&gt; 添加CSV模板文件，命名为&lt;action_name&gt;.csv.erb]]></content>
      <tags>
        <tag>rails</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python 字符编码理解]]></title>
    <url>%2F2016%2F11%2F28%2FPython-%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E7%90%86%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[base: https://segmentfault.com/a/1190000007594453#articleHeader6 python获取默认编码12import sysprint(sys.getdefaultencoding()) python3默认使用utf-8 python2中默认使用ascii python2中的字符类型先插一张图讲解下python的类型 归类 python2中主要有两种字符串，一种为unicode，一种为str； unicode编码类，也就是以u开头的字符串，比如u’你好’，这类字符串使用unicode编码； unicode本身为将全世界所有语言统一的一套编码方案，由于存在很大的资源浪费，所有编码时并不一定会使用unicode str的实现方式有utf-8，ascii等，这些都是unicode的具体实现方式。 unicode字符串通过encode函数转换为str，str通过decode转换为unicode UnicodeEncodeError和UnicodeDecodeError 在进行同时包含 str 类型和 unicode 类型的字符串操作时，Python2 一律都把 str 解码（decode）成 unicode 再运算，这时就很容易出现 UnicodeDecodeError。 例子1123456&gt;&gt;&gt; s = '你好' # str 类型, utf-8 编码&gt;&gt;&gt; u = u'世界' # unicode 类型&gt;&gt;&gt; s + u # 会进行隐式转换，即 s.decode('ascii') + uTraceback (most recent call last): File "&lt;stdin&gt;", line 1, in &lt;module&gt;UnicodeDecodeError: 'ascii' codec can't decode byte 0xe4 in position 0: ordinal not in range(128) 出错的原因是： 同时对str和unicode字符串进行操作，python会将str转换为unicode； 由于python2默认使用ascii进行编码，而s是使用utf-8进行编码的，所以在将s转换为unicode时，默认使用ascii转换，此时会失败； 修改为s.decode(&#39;utf-8&#39;) + u就不会报错了 我的理解 unicode是全世界统一的字符串编码，由于存在资源浪费，所以python使用str作为具体使用的字符串编码； 当我们在python中定义一个字符串时，python会自动处理将其进行编码，如中文处理为utf-8的str对象； 但是str对象中不包含编码信息，所以python2会自动以ascii处理str对象； 即使我们在python源文件中定义了默认的编码方式为utf-8，python解释器也会照样使用ascii为默认编码encode/decode编码方式第四点观点通过以下测试文件验证：1234567891011#!/usr/bin/env python# encoding: utf-8s1 = '查看系统's2 = u'内所有安装'print s1print s2print s1.decode('utf-8') + s2print s1 + s2 # this line will raise error]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Elixir Introduction]]></title>
    <url>%2F2016%2F11%2F27%2FElixir-introduction%2F</url>
    <content type="text"><![CDATA[InstallationGo to Elixir to get the download introducton. Install Elixir on Ubunturun commands:1234wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb &amp;&amp; sudo dpkg -i erlang-solutions_1.0_all.debsudo apt-get updatesudo apt-get install esl-erlangsudo apt-get install elixir Verify installation into interactive command line by iex command: 12345$ iexErlang/OTP 19 [erts-8.1] [source-e7be63d] [64-bit] [smp:2:2] [async-threads:10] [hipe] [kernel-poll:false]Interactive Elixir (1.3.4) - press Ctrl+C to exit (type h() ENTER for help)iex(1)&gt; quit by double ctrl - c12345Interactive Elixir (1.3.4) - press Ctrl+C to exit (type h() ENTER for help)iex(1)&gt;BREAK: (a)bort (c)ontinue (p)roc info (i)nfo (l)oaded (v)ersion (k)ill (D)b-tables (d)istribution^C% The first program There’re 2 type of suffix of elixir source file *.ex: will be compiled *.exs: used to as test file source file hello.exs, content like below 1IO.puts 'Hello, world!' run command elixir hello.exs and get the output 12$ elixir hello.exsHello, world! 模式匹配赋值 Elixir可以找到一种方式让等号的左边等于右边，则执行成功 所以赋值语句并不是其他语言的赋值那样，例子如下:123456iex(1)&gt; a = 11iex(2)&gt; 1 = a1iex(3)&gt; 2 = a** (MatchError) no match of right hand side value: 1 用_（下划线）忽略匹配值下划线是特殊通配符，声称“我可以接受任何值” 在匹配过程中，变量一旦被绑定为某一个值，该值在匹配其余部分的时候就会保持不变 强制让变量的已有值参与匹配，可使用^（脱字节）前缀]]></content>
      <tags>
        <tag>elixir</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Nose的简单用法]]></title>
    <url>%2F2016%2F11%2F27%2Fnose%E7%9A%84%E7%AE%80%E5%8D%95%E7%94%A8%E6%B3%95%2F</url>
    <content type="text"><![CDATA[安装使用pip进行安装pip install nose 基本用法&amp;举例nose会自动识别源文件，目录或包中的测试用例。任何符合正则表达式(?:^|[b_.-])[Tt]est的类、函数、文件或目录，以及TestCase的子类都会被识别并执行。 测试文件及目录格式 目录格式如下 12345$ tree.├── main.py└── test └──test.py main.py内容如下： 123456789#!/usr/bin/env python# encoding: utf-8def Testfun(): """docstring for Testfun""" a = 1 b = 2 assert a == b main.py内容如下： 123456#!/usr/bin/env python# encoding: utf-8import nosenose.main() nose用法 在test目录下执行nosetests 在根目录下执行python main.py 得到的输出结果均为：123456789101112131415F======================================================================FAIL: docstring for Testfun----------------------------------------------------------------------Traceback (most recent call last): File "/usr/local/lib/python2.7/dist-packages/nose/case.py", line 197, in runTest self.test(*self.arg) File "/home/yarving/workspace/nose_demo/test/test.py", line 9, in Testfun assert a == bAssertionError----------------------------------------------------------------------Ran 1 test in 0.003sFAILED (failures=1)]]></content>
      <tags>
        <tag>python</tag>
        <tag>nose</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[笔记：代码整洁之道]]></title>
    <url>%2F2016%2F11%2F26%2F%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93%2F</url>
    <content type="text"><![CDATA[这本书要求经验比较丰富的Java经验。 整洁代码 知道许多关于代码的事了 好代码和坏代码之间的差异 要有代码 特性越加越多，代码也越来越烂，最后再也没法管理这些代码了。稍后等于永不 混乱的代价 新设计会导致两套不同的方式，造成混乱 保持这样的态度：我最懂，你给的压力不对，我不会听从 消除重复和提高表达力 让营地比你来时更干净 有意义的命名名副其实 需要用注释来补充的变量名不算名副其实1int d; // 消逝的时间，以日计 可以更改为1int elapsedTimeInDays; 做有意义的区分 a1, a2等命名方式没有提供正确或导向作者意图的线索 Product/ProductInfo/ProductData等名称虽然不同，但是意思却无分别 废话都是冗余。如nameString可以改成name 不要自造词汇，使用英语词汇进行命名（可以读出来） 名字可搜索，数字5，单个单词等都不好搜索 类名应该为名词，方法名应该为动词 #函数 短小 长度为20-100行最佳 if-else，while语句内的代码块应该尽量用函数包括，因为函数具有说明性的名称 函数只做一件事，做好这件事 函数无副作用 使用异常代替错误码 别重复自己 注释不好的注释 注释并不一定就是好的，注释的恰当用法是弥补我们在用代码表达意图时遭遇到的失败，当必须要用注释时，看是否能用代码来表达 注释会撒谎，修改代码时并不一定会修改注释 不准确的注释不如不注释 好的注释 法律信息 信息的注释 对意图的注释 阐释，对晦涩难明的参数或返回值的意义翻译为某种可读的形式 警示 TODO注释 对象和数据结构 得墨耳定律：模块不应该了解它所操作的对象的内部情况 错误处理 别返回null值 别传入null值（除非函数要求），但是，检查null值的责任应该由调用者负责还是函数负责呢？ 边界学习性测试的好处不止是免费，还在投资上有正面的回报；依靠能控制的东西好过依靠不能控制的东西； 单元测试TDD三定律 没有测试之前不要写任何功能代码 只编写恰好能够体现一个失败情况的测试代码 只编写恰好能通过测试的功能代码 整洁的测试只有一个要求：可读性 F.I.R.S.T原则 Fast：快速运行才会让人想运行它 Independent：每个测试用例之间应该独立 Repeatable：可重复的 Self-Validating：测试用例自己可验证自己是否得到正确的结果 Timely：测试用例应该及时编写 类 放松封装总是下策 类的组织 类应该短小 单一原则，只有一个理由去修改它 内聚 系统 复杂要人命，消磨开发者的生命，让产品难以规划、构建和测试略 跌进紧耦合的代码难以测试，所以运行所有的测试可以解耦 并发编程略 逐步改进]]></content>
      <categories>
        <category>笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Python Progress Bar]]></title>
    <url>%2F2016%2F11%2F22%2FPython-Process-Bar%2F</url>
    <content type="text"><![CDATA[Based on: http://blog.ihipop.info/2010/10/1736.html Use ‘\r’123456789101112131415161718192021#!/usr/bin/env python# encoding: utf-8from __future__ import divisionimport sysimport timedef main(): """main function""" j = '#' for i in range(1, 61): j += '#' status_bar = str((i * 60) / 100) + '% | ' + j + '-&gt;' + '\r' sys.stdout.write(status_bar) sys.stdout.flush() time.sleep(1)if __name__ == '__main__': main() Use ‘\b’1234567891011121314151617181920"""This is a demo of using \b to show process bar"""#!/usr/bin/env python# encoding: utf-8from __future__ import divisionimport sysimport timedef main(): """main function""" for i in range(1, 61): status_bar = '#-&gt;\b\b' sys.stdout.write(status_bar) sys.stdout.flush() time.sleep(1)if __name__ == '__main__': main() Use ‘processbar’123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171"""This is the official demo of progerssbarTo install progressbar, `pip install progressbar`The Github is: https://github.com/niltonvolpato/python-progressbarAs I'm using python 2.7, to make this example runnable, I've removed some examples.Please check the original file on:https://github.com/niltonvolpato/python-progressbar/blob/master/examples.py"""#!/usr/bin/python# -*- coding: utf-8 -*-import sysimport timefrom progressbar import AnimatedMarker, Bar, BouncingBar, Counter, ETA, \ FileTransferSpeed, FormatLabel, Percentage, \ ProgressBar, ReverseBar, RotatingMarker, \ SimpleProgress, Timerexamples = []def example(fn): try: name = 'Example %d' % int(fn.__name__[7:]) except: name = fn.__name__ def wrapped(): try: sys.stdout.write('Running: %s\n' % name) fn() sys.stdout.write('\n') except KeyboardInterrupt: sys.stdout.write('\nSkipping example.\n\n') examples.append(wrapped) return wrapped@exampledef example0(): pbar = ProgressBar(widgets=[Percentage(), Bar()], maxval=300).start() for i in range(300): time.sleep(0.01) pbar.update(i+1) pbar.finish()@exampledef example1(): widgets = ['Test: ', Percentage(), ' ', Bar(marker=RotatingMarker()), ' ', ETA(), ' ', FileTransferSpeed()] pbar = ProgressBar(widgets=widgets, maxval=10000000).start() for i in range(1000000): # do something pbar.update(10*i+1) pbar.finish()@exampledef example2(): class CrazyFileTransferSpeed(FileTransferSpeed): """It's bigger between 45 and 80 percent.""" def update(self, pbar): if 45 &lt; pbar.percentage() &lt; 80: return 'Bigger Now ' + FileTransferSpeed.update(self,pbar) else: return FileTransferSpeed.update(self,pbar) widgets = [CrazyFileTransferSpeed(),' &lt;&lt;&lt;', Bar(), '&gt;&gt;&gt; ', Percentage(),' ', ETA()] pbar = ProgressBar(widgets=widgets, maxval=10000000) # maybe do something pbar.start() for i in range(2000000): # do something pbar.update(5*i+1) pbar.finish()@exampledef example3(): widgets = [Bar('&gt;'), ' ', ETA(), ' ', ReverseBar('&lt;')] pbar = ProgressBar(widgets=widgets, maxval=10000000).start() for i in range(1000000): # do something pbar.update(10*i+1) pbar.finish()@exampledef example4(): widgets = ['Test: ', Percentage(), ' ', Bar(marker='0',left='[',right=']'), ' ', ETA(), ' ', FileTransferSpeed()] pbar = ProgressBar(widgets=widgets, maxval=500) pbar.start() for i in range(100,500+1,50): time.sleep(0.2) pbar.update(i) pbar.finish()@exampledef example5(): pbar = ProgressBar(widgets=[SimpleProgress()], maxval=17).start() for i in range(17): time.sleep(0.2) pbar.update(i + 1) pbar.finish()@exampledef example6(): pbar = ProgressBar().start() for i in range(100): time.sleep(0.01) pbar.update(i + 1) pbar.finish()@exampledef example7(): pbar = ProgressBar() # Progressbar can guess maxval automatically. for i in pbar(range(80)): time.sleep(0.01)@exampledef example8(): pbar = ProgressBar(maxval=80) # Progressbar can't guess maxval. for i in pbar((i for i in range(80))): time.sleep(0.01)@exampledef example9(): pbar = ProgressBar(widgets=['Working: ', AnimatedMarker()]) for i in pbar((i for i in range(50))): time.sleep(.08)@exampledef example10(): widgets = ['Processed: ', Counter(), ' lines (', Timer(), ')'] pbar = ProgressBar(widgets=widgets) for i in pbar((i for i in range(150))): time.sleep(0.1)@exampledef example11(): widgets = [FormatLabel('Processed: %(value)d lines (in: %(elapsed)s)')] pbar = ProgressBar(widgets=widgets) for i in pbar((i for i in range(150))): time.sleep(0.1)@exampledef example12(): widgets = ['Balloon: ', AnimatedMarker(markers='.oO@* ')] pbar = ProgressBar(widgets=widgets) for i in pbar((i for i in range(24))): time.sleep(0.3)@exampledef example16(): widgets = [FormatLabel('Bouncer: value %(value)d - '), BouncingBar()] pbar = ProgressBar(widgets=widgets) for i in pbar((i for i in range(180))): time.sleep(0.05)@exampledef example17(): widgets = [FormatLabel('Animated Bouncer: value %(value)d - '), BouncingBar(marker=RotatingMarker())] pbar = ProgressBar(widgets=widgets) for i in pbar((i for i in range(180))): time.sleep(0.05)if __name__ == '__main__': try: for example in examples: example() except KeyboardInterrupt: sys.stdout.write('\nQuitting examples.\n')]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>实践</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python 技巧]]></title>
    <url>%2F2016%2F11%2F21%2FMind-collect-1%2F</url>
    <content type="text"><![CDATA[This is a series blogs used to record my daily thinking Use python to format print json content Json demo file 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152$ cat demo.json&#123;"filepath_completion_use_working_dir": 0,"auto_trigger": 1,"min_num_of_chars_for_completion": 2,"min_num_identifier_candidate_chars": 0,"semantic_triggers": &#123;&#125;,"filetype_specific_completion_to_disable": &#123;"gitcommit": 1&#125;,"seed_identifiers_with_syntax": 0,"collect_identifiers_from_comments_and_strings": 0,"collect_identifiers_from_tags_files": 0,"max_num_identifier_candidates": 10,"extra_conf_globlist": [],"global_ycm_extra_conf": "","confirm_extra_conf": 1,"complete_in_comments": 0,"complete_in_strings": 1,"max_diagnostics_to_display": 30,"filetype_whitelist": &#123;"*": 1&#125;,"filetype_blacklist": &#123;"tagbar": 1,"qf": 1,"notes": 1,"markdown": 1,"netrw": 1,"unite": 1,"text": 1,"vimwiki": 1,"pandoc": 1,"infolog": 1,"mail": 1&#125;,"auto_start_csharp_server": 1,"auto_stop_csharp_server": 1,"use_ultisnips_completer": 1,"csharp_server_port": 0,"hmac_secret": "","server_keep_logfiles": 0,"gocode_binary_path": "","godef_binary_path": "","rust_src_path": "","racerd_binary_path": "","python_binary_path": ""&#125; Use python to format print json file 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748$ python -m json.tool demo.json yarving@yarving-ThinkPad-T400&#123; "auto_start_csharp_server": 1, "auto_stop_csharp_server": 1, "auto_trigger": 1, "collect_identifiers_from_comments_and_strings": 0, "collect_identifiers_from_tags_files": 0, "complete_in_comments": 0, "complete_in_strings": 1, "confirm_extra_conf": 1, "csharp_server_port": 0, "extra_conf_globlist": [], "filepath_completion_use_working_dir": 0, "filetype_blacklist": &#123; "infolog": 1, "mail": 1, "markdown": 1, "netrw": 1, "notes": 1, "pandoc": 1, "qf": 1, "tagbar": 1, "text": 1, "unite": 1, "vimwiki": 1 &#125;, "filetype_specific_completion_to_disable": &#123; "gitcommit": 1 &#125;, "filetype_whitelist": &#123; "*": 1 &#125;, "global_ycm_extra_conf": "", "gocode_binary_path": "", "godef_binary_path": "", "hmac_secret": "", "max_diagnostics_to_display": 30, "max_num_identifier_candidates": 10, "min_num_identifier_candidate_chars": 0, "min_num_of_chars_for_completion": 2, "python_binary_path": "", "racerd_binary_path": "", "rust_src_path": "", "seed_identifiers_with_syntax": 0, "semantic_triggers": &#123;&#125;, "server_keep_logfiles": 0, "use_ultisnips_completer": 1&#125; python built-in method strip Python strip() 方法用于移除字符串头尾指定的字符（默认为空格）。strip()方法语法：str.strip([chars]); Demo:1234567891011121314151617s = ' 00ww00 's1 = s.strip()print s1# expected: '00ww00's2 = s1.strip('0')print s2# expected: 'ww's3 = s1.lstrip('0')print s3# expected: 'ww00's4 = s1.rstrip('0')print s4# expected: '00ww' python str expand functionsinclude: center, ljust, rjust, zfill12345678910111213141516171819202122#!/usr/bin/env python# encoding: utf-8s = "hello"print s.center(1)print s.center(10)print s.center(10, '-')# print s.center(10, '--') errorprint s.center(1, '-')print s.ljust(1)print s.ljust(10)print s.ljust(1, '-')print s.ljust(10, '-')print s.rjust(1)print s.rjust(10)print s.rjust(1, '-')print s.rjust(10, '-')print s.zfill(10) python find/index differenceThe big difference is when not found: find() will return -1; index() will raise error: ValueError: substring not found python str.formatformat() function support str/int/list/tuple/dict/objectverfiy below:1234567891011121314151617181920212223242526272829303132333435#!/usr/bin/env python# encoding: utf-8s = "test string success"print "OK test: &#123;&#125;".format(s)s = 1print "OK test: &#123;&#125;".format(s)s = [1, 2, 3]print "OK test: &#123;&#125;".format(s)s = ['a', 'b', 'c']print "OK test: &#123;&#125;".format(s)s = (1, 2, 3)print "OK test: &#123;&#125;".format(s)s = ('a', 'b', 'c')print "OK test: &#123;&#125;".format(s)s = &#123;'a': 1, 'b': 2&#125;print "OK test: &#123;&#125;".format(s)s = set([1, 2, 3, 4])print "OK test: &#123;&#125;".format(s)s = set(['a', 'b', 'c'])print "OK test: &#123;&#125;".format(s)class TestObj(): passs = TestObj()print "OK test: &#123;&#125;".format(s) python enumerateenumberate will offer another index, index starts from 0. Demo:1234567891011a = [1, 2, 3, 4, 5]for index, v in enumerate(a): print index, v# output below# 0 1# 1 2# 2 3# 3 4# 4 5 argparseThere’re 2 blogs for reference: https://blog.ixxoo.me/argparse.html http://www.jianshu.com/p/fef2d215b91d flask sent mail code segment1234567891011121314#!/usr/bin/env python# encoding: utf-8from flask import Flaskfrom flask_mail import Mail, Messageapp = Flask(__name__)app.config['MAIL_SERVER'] = 'mail-server-address'mail = Mail(app)msg = Message('test', sender='sender@historytale.com', recipients=['yarving@historytale.com'])with app.app_context(): mail.send(msg)]]></content>
      <categories>
        <category>python</category>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python Scrapy 爬取 BestCBooks]]></title>
    <url>%2F2016%2F11%2F20%2Fscrapy-crawl-bestcbooks-com%2F</url>
    <content type="text"><![CDATA[Goals and designGoalsBestCBooks is a good website offers plenty PDF books about computer science.I want to get all the books download link and password, as they’re stored in Baidu Disk. References &amp; Result Scrapy Document Project on Github Design As I want to get all the books, so I need to get books by catagery, so I need to crawl all the catagory links; Get the book link from the catagory link; Get the book store link(on pan.baidu.com) and it’s password How to doCreate a scrapy project Install scrapy: 1pip install scrapy Create the scrapy project: 12345678$ scrapy startproject tutorialNew Scrapy project 'tutorial', using template directory '/usr/local/lib/python2.7/dist-packages/scrapy/templates/project', created in: /tmp/tutorialYou can start your first spider with: cd tutorial scrapy genspider example example.com Crawl the catagory page Create a spider named bestcbooks.py, the full path is:tutorial/spiders/bestcbooks.pyThe project structure like below: 12345678910111213$ cd /tmp/tutorial ; tree.├── scrapy.cfg└── tutorial ├── __init__.py ├── items.py ├── pipelines.py ├── settings.py └── spiders ├── bestcbooks.py └── __init__.py2 directories, 7 files edit the bestcbooks.py content as below: 1234567891011121314151617181920212223242526#!/usr/bin/env python# encoding: utf-8from urlparse import urljoinfrom scrapy import Spider, Requestfrom tutorial.items import CatagoryItems, BookPageItems, BookItemsclass DmozSpider(Spider): name = 'bestcbooks' allowed_domains = ['bestcbooks.com'] start_urls = [ 'http://bestcbooks.com/' ] meta = &#123;'cookiejar': 1&#125; headers = &#123; 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8', 'Accept-Encoding': 'gzip,deflate', 'Accept-Language': 'en-US,en;q=0.8,zh;q=0.6,zh-CN;q=0.4,zh-TW;q=0.2', 'Connection': 'keep-alive', 'Connection-Type': 'application/x-www-form-urlencoded; charset=UTF-8', 'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.90 Safari/537.36' &#125; Edit tutorial/items.py like blow, which is used to store the datas we get 12345678910111213141516171819202122232425262728293031# -*- coding: utf-8 -*-# Define here the models for your scraped items## See documentation in:# http://doc.scrapy.org/en/latest/topics/items.htmlfrom scrapy import Item, Fieldclass BestCBookItems(Item): # define the fields for your item here like: name = Field() url = Field()class CatagoryItems(Item): catagory = Field() url = Field()class BookPageItems(Item): name = Field() url = Field()class BookItems(Item): name = Field() link = Field() password = Field() orig_url = Field() Crawl the catagory pages AnalysisUse Google Chrome inspect the catagory link, get the xpathSo the xpath for it is: (&#39;//ul[@id=&quot;category-list&quot;]/li&#39;) Implement the codeThen add a parse method(default parse method for scrapy) in the bestcbooks.py 123456789101112131415def parse(self, response): """docstring for parse""" filename = response.url.split('/')[-2] with open(filename, 'wb') as f: f.write(response.body) for sel in response.xpath('//ul[@id="category-list"]/li'): name = sel.xpath('a/text()').extract()[0] url = urljoin(response.url, sel.xpath('a/@href').extract()[0]) yield Request(url, callback=self.parse_catagory_page) item = CatagoryItems() item['url'] = url item['catagory'] = name The parse_catagory_page is used for parse catagory page defined below Crawl the book pages AnalysisThe book link’s xpath is: (//div[@class=&quot;categorywell&quot;]/h4) Implement the codeLet’s implement the parse_catagory_page method like below 1234567891011def parse_catagory_page(self, response): """Parse catagory page""" for sel in response.xpath('//div[@class="categorywell"]/h4'): name = sel.xpath('a/text()').extract()[0] url = urljoin(response.url, sel.xpath('a/@href').extract()[0]) yield Request(url, callback=self.parse_book_page) item = BookPageItems() item['url'] = url item['name'] = name The parse_book_page will implement below Crawl the book info AnalysisThe book detail xpath is: (&#39;//h1[@class=&quot;entry-title&quot;]/text()&#39;) Implement the codeLet’s implement the method parse_book_page: 123456789101112131415161718def parse_book_page(self, response): """parse detail book page""" orig_url = response.url name = response.xpath('//h1[@class="entry-title"]/text()').extract() for sel in response.xpath('//blockquote'): link = sel.xpath('p/a/@href').extract() try: password = sel.xpath('p/text()').extract()[-1].split()[-1][-4:] except: password = "" item = BookItems() item['name'] = name item['link'] = link item['password'] = password item['orig_url'] = orig_url yield item How to runStart scrapyI use this command to start scrapy, and the result will store in items.json1scrapy crawl bestcbooks -o items.json Check the resultContent in items.json is the result of the book’s download link and the password]]></content>
      <categories>
        <category>python</category>
        <category>scrapy</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>实践</tag>
        <tag>scrapy</tag>
      </tags>
  </entry>
</search>
